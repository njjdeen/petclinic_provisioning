trigger:
- none

pool:
  name: 'VM-agent'

steps:


- task: AzureCLI@2
  displayName: show Azure CLI version and account information
  inputs:
    azureSubscription: azure-cli-2022-03-15-08-33-56
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      az --version
      az account show

- task: TerraformCLI@0
  inputs:
    command: 'init'
    workingDirectory: ./terraform
- task: TerraformCLI@0
  inputs:
    command: 'plan'
    environmentServiceName: 'azure-cli-2022-03-15-08-33-56'
    providerAzureRmSubscriptionId: '41e50375-b926-4bc4-9045-348f359cf721'
    runAzLogin: true
    allowTelemetryCollection: true
    #publishPlanResults: 'plan.tf'
    workingDirectory: './terraform'
    

- task: TerraformCLI@0
  inputs:
    command: 'apply'
    workingDirectory: './terraform'
    environmentServiceName: 'azure-cli-2022-03-15-08-33-56'
    providerAzureRmSubscriptionId: '41e50375-b926-4bc4-9045-348f359cf721'
    runAzLogin: true
    allowTelemetryCollection: true
    
- task: Bash@3
  displayName: write private key file to homefolder as testvm_rsa_key.pem
  inputs:
    targetType: 'inline'
    script: 'terraform output -raw tls_private_key > ~/testvm_rsa_key.pem && echo "write succesfull" && sudo chmod 600 ~/testvm_rsa_key.pem'
    workingDirectory: './terraform'
    
    
- task: Bash@3
  displayName: Store public IP of testVM in testvm_public_IP.txt
  inputs:
    targetType: inline
    script: terraform output -raw public_ip_address > ~/testvm_public_IP
    workingDirectory: ./terraform

- task: Bash@3
  displayName: present rsa key to authorized keys file of the testing environment, install some ansible dependencies
  inputs:
        targetType: 'inline'
        script: ansible-galaxy collection install community.docker && ansible-galaxy collection install ansible.posix && ansible-playbook add-key.yml --key-file=~/testvm_rsa_key.pem -i ~/testvm_public_IP
        workingDirectory: './ansible'

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'package'

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'deploy'
    mavenOptions: '-DskipTests'


- task: Bash@3
  displayName: Install docker on testing VM
  inputs:
        targetType: 'inline'
        script: ansible-playbook install-docker-playbook.yml -i ~/testvm_public_IP
        workingDirectory: './ansible'
  
- task: Bash@3
  displayName: Build new docker image with maven project that was pushed to github
  inputs:
        targetType: 'inline'
        script: ansible-playbook build-docker-image.yml
        workingDirectory: './ansible'
  

- task: Bash@3
  displayName: run docker container with pulled image from public repo
  inputs:
        targetType: 'inline'
        script: ansible-playbook start-container-playbook.yml -i ~/testvm_public_IP
        workingDirectory: './ansible'
  
  
  
- task: Bash@3
  displayName: stop docker container
  inputs:
        targetType: 'inline'
        script: ansible-playbook stop-container-playbook.yml -i ~/testvm_public_IP
        workingDirectory: './ansible'
  



- task: TerraformCLI@0
  displayName: destroy testing VM
  inputs:
    command: 'destroy'
    workingDirectory: './terraform'
    environmentServiceName: 'azure-cli-2022-03-15-08-33-56'
    providerAzureRmSubscriptionId: '41e50375-b926-4bc4-9045-348f359cf721'
    runAzLogin: true
    allowTelemetryCollection: true
    

