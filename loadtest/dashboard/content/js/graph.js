/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1690.0, "series": [{"data": [[0.0, 1.0], [0.1, 3.0], [0.2, 5.0], [0.3, 8.0], [0.4, 12.0], [0.5, 16.0], [0.6, 21.0], [0.7, 26.0], [0.8, 30.0], [0.9, 34.0], [1.0, 39.0], [1.1, 42.0], [1.2, 46.0], [1.3, 50.0], [1.4, 52.0], [1.5, 54.0], [1.6, 57.0], [1.7, 60.0], [1.8, 62.0], [1.9, 64.0], [2.0, 65.0], [2.1, 67.0], [2.2, 68.0], [2.3, 70.0], [2.4, 72.0], [2.5, 73.0], [2.6, 75.0], [2.7, 76.0], [2.8, 78.0], [2.9, 79.0], [3.0, 80.0], [3.1, 82.0], [3.2, 84.0], [3.3, 86.0], [3.4, 87.0], [3.5, 89.0], [3.6, 90.0], [3.7, 92.0], [3.8, 93.0], [3.9, 94.0], [4.0, 96.0], [4.1, 97.0], [4.2, 98.0], [4.3, 100.0], [4.4, 100.0], [4.5, 101.0], [4.6, 102.0], [4.7, 103.0], [4.8, 104.0], [4.9, 105.0], [5.0, 105.0], [5.1, 106.0], [5.2, 107.0], [5.3, 107.0], [5.4, 108.0], [5.5, 108.0], [5.6, 108.0], [5.7, 109.0], [5.8, 109.0], [5.9, 110.0], [6.0, 110.0], [6.1, 111.0], [6.2, 111.0], [6.3, 111.0], [6.4, 112.0], [6.5, 112.0], [6.6, 112.0], [6.7, 113.0], [6.8, 113.0], [6.9, 113.0], [7.0, 113.0], [7.1, 114.0], [7.2, 114.0], [7.3, 114.0], [7.4, 114.0], [7.5, 115.0], [7.6, 115.0], [7.7, 115.0], [7.8, 115.0], [7.9, 115.0], [8.0, 116.0], [8.1, 116.0], [8.2, 116.0], [8.3, 116.0], [8.4, 117.0], [8.5, 117.0], [8.6, 117.0], [8.7, 117.0], [8.8, 117.0], [8.9, 118.0], [9.0, 118.0], [9.1, 118.0], [9.2, 118.0], [9.3, 118.0], [9.4, 119.0], [9.5, 119.0], [9.6, 119.0], [9.7, 119.0], [9.8, 119.0], [9.9, 120.0], [10.0, 120.0], [10.1, 120.0], [10.2, 120.0], [10.3, 120.0], [10.4, 120.0], [10.5, 120.0], [10.6, 121.0], [10.7, 121.0], [10.8, 121.0], [10.9, 121.0], [11.0, 121.0], [11.1, 121.0], [11.2, 121.0], [11.3, 121.0], [11.4, 122.0], [11.5, 122.0], [11.6, 122.0], [11.7, 122.0], [11.8, 122.0], [11.9, 122.0], [12.0, 122.0], [12.1, 122.0], [12.2, 122.0], [12.3, 123.0], [12.4, 123.0], [12.5, 123.0], [12.6, 123.0], [12.7, 123.0], [12.8, 123.0], [12.9, 123.0], [13.0, 123.0], [13.1, 123.0], [13.2, 123.0], [13.3, 123.0], [13.4, 123.0], [13.5, 124.0], [13.6, 124.0], [13.7, 124.0], [13.8, 124.0], [13.9, 124.0], [14.0, 124.0], [14.1, 124.0], [14.2, 124.0], [14.3, 124.0], [14.4, 124.0], [14.5, 124.0], [14.6, 124.0], [14.7, 124.0], [14.8, 124.0], [14.9, 125.0], [15.0, 125.0], [15.1, 125.0], [15.2, 125.0], [15.3, 125.0], [15.4, 125.0], [15.5, 125.0], [15.6, 125.0], [15.7, 125.0], [15.8, 125.0], [15.9, 125.0], [16.0, 125.0], [16.1, 125.0], [16.2, 125.0], [16.3, 125.0], [16.4, 125.0], [16.5, 126.0], [16.6, 126.0], [16.7, 126.0], [16.8, 126.0], [16.9, 126.0], [17.0, 126.0], [17.1, 126.0], [17.2, 126.0], [17.3, 126.0], [17.4, 126.0], [17.5, 126.0], [17.6, 126.0], [17.7, 126.0], [17.8, 126.0], [17.9, 126.0], [18.0, 126.0], [18.1, 126.0], [18.2, 126.0], [18.3, 127.0], [18.4, 127.0], [18.5, 127.0], [18.6, 127.0], [18.7, 127.0], [18.8, 127.0], [18.9, 127.0], [19.0, 127.0], [19.1, 127.0], [19.2, 127.0], [19.3, 127.0], [19.4, 127.0], [19.5, 127.0], [19.6, 127.0], [19.7, 127.0], [19.8, 127.0], [19.9, 127.0], [20.0, 127.0], [20.1, 127.0], [20.2, 128.0], [20.3, 128.0], [20.4, 128.0], [20.5, 128.0], [20.6, 128.0], [20.7, 128.0], [20.8, 128.0], [20.9, 128.0], [21.0, 128.0], [21.1, 128.0], [21.2, 128.0], [21.3, 128.0], [21.4, 128.0], [21.5, 128.0], [21.6, 128.0], [21.7, 128.0], [21.8, 128.0], [21.9, 128.0], [22.0, 128.0], [22.1, 128.0], [22.2, 129.0], [22.3, 129.0], [22.4, 129.0], [22.5, 129.0], [22.6, 129.0], [22.7, 129.0], [22.8, 129.0], [22.9, 129.0], [23.0, 129.0], [23.1, 129.0], [23.2, 129.0], [23.3, 129.0], [23.4, 129.0], [23.5, 129.0], [23.6, 129.0], [23.7, 129.0], [23.8, 129.0], [23.9, 129.0], [24.0, 129.0], [24.1, 129.0], [24.2, 129.0], [24.3, 130.0], [24.4, 130.0], [24.5, 130.0], [24.6, 130.0], [24.7, 130.0], [24.8, 130.0], [24.9, 130.0], [25.0, 130.0], [25.1, 130.0], [25.2, 130.0], [25.3, 130.0], [25.4, 130.0], [25.5, 130.0], [25.6, 130.0], [25.7, 130.0], [25.8, 130.0], [25.9, 130.0], [26.0, 130.0], [26.1, 130.0], [26.2, 130.0], [26.3, 130.0], [26.4, 130.0], [26.5, 130.0], [26.6, 130.0], [26.7, 131.0], [26.8, 131.0], [26.9, 131.0], [27.0, 131.0], [27.1, 131.0], [27.2, 131.0], [27.3, 131.0], [27.4, 131.0], [27.5, 131.0], [27.6, 131.0], [27.7, 131.0], [27.8, 131.0], [27.9, 131.0], [28.0, 131.0], [28.1, 131.0], [28.2, 131.0], [28.3, 131.0], [28.4, 131.0], [28.5, 131.0], [28.6, 131.0], [28.7, 131.0], [28.8, 131.0], [28.9, 131.0], [29.0, 131.0], [29.1, 131.0], [29.2, 131.0], [29.3, 131.0], [29.4, 132.0], [29.5, 132.0], [29.6, 132.0], [29.7, 132.0], [29.8, 132.0], [29.9, 132.0], [30.0, 132.0], [30.1, 132.0], [30.2, 132.0], [30.3, 132.0], [30.4, 132.0], [30.5, 132.0], [30.6, 132.0], [30.7, 132.0], [30.8, 132.0], [30.9, 132.0], [31.0, 132.0], [31.1, 132.0], [31.2, 132.0], [31.3, 132.0], [31.4, 132.0], [31.5, 132.0], [31.6, 132.0], [31.7, 132.0], [31.8, 132.0], [31.9, 132.0], [32.0, 133.0], [32.1, 133.0], [32.2, 133.0], [32.3, 133.0], [32.4, 133.0], [32.5, 133.0], [32.6, 133.0], [32.7, 133.0], [32.8, 133.0], [32.9, 133.0], [33.0, 133.0], [33.1, 133.0], [33.2, 133.0], [33.3, 133.0], [33.4, 133.0], [33.5, 133.0], [33.6, 133.0], [33.7, 133.0], [33.8, 133.0], [33.9, 133.0], [34.0, 133.0], [34.1, 133.0], [34.2, 133.0], [34.3, 133.0], [34.4, 133.0], [34.5, 133.0], [34.6, 133.0], [34.7, 134.0], [34.8, 134.0], [34.9, 134.0], [35.0, 134.0], [35.1, 134.0], [35.2, 134.0], [35.3, 134.0], [35.4, 134.0], [35.5, 134.0], [35.6, 134.0], [35.7, 134.0], [35.8, 134.0], [35.9, 134.0], [36.0, 134.0], [36.1, 134.0], [36.2, 134.0], [36.3, 134.0], [36.4, 134.0], [36.5, 134.0], [36.6, 134.0], [36.7, 134.0], [36.8, 134.0], [36.9, 134.0], [37.0, 134.0], [37.1, 134.0], [37.2, 134.0], [37.3, 135.0], [37.4, 135.0], [37.5, 135.0], [37.6, 135.0], [37.7, 135.0], [37.8, 135.0], [37.9, 135.0], [38.0, 135.0], [38.1, 135.0], [38.2, 135.0], [38.3, 135.0], [38.4, 135.0], [38.5, 135.0], [38.6, 135.0], [38.7, 135.0], [38.8, 135.0], [38.9, 135.0], [39.0, 135.0], [39.1, 135.0], [39.2, 135.0], [39.3, 135.0], [39.4, 135.0], [39.5, 135.0], [39.6, 135.0], [39.7, 135.0], [39.8, 135.0], [39.9, 136.0], [40.0, 136.0], [40.1, 136.0], [40.2, 136.0], [40.3, 136.0], [40.4, 136.0], [40.5, 136.0], [40.6, 136.0], [40.7, 136.0], [40.8, 136.0], [40.9, 136.0], [41.0, 136.0], [41.1, 136.0], [41.2, 136.0], [41.3, 136.0], [41.4, 136.0], [41.5, 136.0], [41.6, 136.0], [41.7, 136.0], [41.8, 136.0], [41.9, 136.0], [42.0, 136.0], [42.1, 136.0], [42.2, 136.0], [42.3, 136.0], [42.4, 137.0], [42.5, 137.0], [42.6, 137.0], [42.7, 137.0], [42.8, 137.0], [42.9, 137.0], [43.0, 137.0], [43.1, 137.0], [43.2, 137.0], [43.3, 137.0], [43.4, 137.0], [43.5, 137.0], [43.6, 137.0], [43.7, 137.0], [43.8, 137.0], [43.9, 137.0], [44.0, 137.0], [44.1, 137.0], [44.2, 137.0], [44.3, 137.0], [44.4, 137.0], [44.5, 137.0], [44.6, 137.0], [44.7, 138.0], [44.8, 138.0], [44.9, 138.0], [45.0, 138.0], [45.1, 138.0], [45.2, 138.0], [45.3, 138.0], [45.4, 138.0], [45.5, 138.0], [45.6, 138.0], [45.7, 138.0], [45.8, 138.0], [45.9, 138.0], [46.0, 138.0], [46.1, 138.0], [46.2, 138.0], [46.3, 138.0], [46.4, 138.0], [46.5, 138.0], [46.6, 139.0], [46.7, 139.0], [46.8, 139.0], [46.9, 139.0], [47.0, 139.0], [47.1, 139.0], [47.2, 139.0], [47.3, 139.0], [47.4, 139.0], [47.5, 139.0], [47.6, 139.0], [47.7, 139.0], [47.8, 139.0], [47.9, 139.0], [48.0, 139.0], [48.1, 139.0], [48.2, 139.0], [48.3, 140.0], [48.4, 140.0], [48.5, 140.0], [48.6, 140.0], [48.7, 140.0], [48.8, 140.0], [48.9, 140.0], [49.0, 140.0], [49.1, 140.0], [49.2, 140.0], [49.3, 140.0], [49.4, 140.0], [49.5, 140.0], [49.6, 140.0], [49.7, 140.0], [49.8, 140.0], [49.9, 141.0], [50.0, 141.0], [50.1, 141.0], [50.2, 141.0], [50.3, 141.0], [50.4, 141.0], [50.5, 141.0], [50.6, 141.0], [50.7, 141.0], [50.8, 141.0], [50.9, 141.0], [51.0, 141.0], [51.1, 141.0], [51.2, 141.0], [51.3, 142.0], [51.4, 142.0], [51.5, 142.0], [51.6, 142.0], [51.7, 142.0], [51.8, 142.0], [51.9, 142.0], [52.0, 142.0], [52.1, 142.0], [52.2, 142.0], [52.3, 142.0], [52.4, 142.0], [52.5, 143.0], [52.6, 143.0], [52.7, 143.0], [52.8, 143.0], [52.9, 143.0], [53.0, 143.0], [53.1, 143.0], [53.2, 143.0], [53.3, 143.0], [53.4, 143.0], [53.5, 143.0], [53.6, 143.0], [53.7, 144.0], [53.8, 144.0], [53.9, 144.0], [54.0, 144.0], [54.1, 144.0], [54.2, 144.0], [54.3, 144.0], [54.4, 144.0], [54.5, 144.0], [54.6, 144.0], [54.7, 144.0], [54.8, 145.0], [54.9, 145.0], [55.0, 145.0], [55.1, 145.0], [55.2, 145.0], [55.3, 145.0], [55.4, 145.0], [55.5, 145.0], [55.6, 145.0], [55.7, 145.0], [55.8, 145.0], [55.9, 146.0], [56.0, 146.0], [56.1, 146.0], [56.2, 146.0], [56.3, 146.0], [56.4, 146.0], [56.5, 146.0], [56.6, 146.0], [56.7, 146.0], [56.8, 146.0], [56.9, 146.0], [57.0, 146.0], [57.1, 147.0], [57.2, 147.0], [57.3, 147.0], [57.4, 147.0], [57.5, 147.0], [57.6, 147.0], [57.7, 147.0], [57.8, 147.0], [57.9, 147.0], [58.0, 147.0], [58.1, 147.0], [58.2, 147.0], [58.3, 148.0], [58.4, 148.0], [58.5, 148.0], [58.6, 148.0], [58.7, 148.0], [58.8, 148.0], [58.9, 148.0], [59.0, 148.0], [59.1, 148.0], [59.2, 148.0], [59.3, 148.0], [59.4, 148.0], [59.5, 148.0], [59.6, 149.0], [59.7, 149.0], [59.8, 149.0], [59.9, 149.0], [60.0, 149.0], [60.1, 149.0], [60.2, 149.0], [60.3, 149.0], [60.4, 149.0], [60.5, 149.0], [60.6, 149.0], [60.7, 149.0], [60.8, 149.0], [60.9, 150.0], [61.0, 150.0], [61.1, 150.0], [61.2, 150.0], [61.3, 150.0], [61.4, 150.0], [61.5, 150.0], [61.6, 150.0], [61.7, 150.0], [61.8, 150.0], [61.9, 150.0], [62.0, 150.0], [62.1, 150.0], [62.2, 151.0], [62.3, 151.0], [62.4, 151.0], [62.5, 151.0], [62.6, 151.0], [62.7, 151.0], [62.8, 151.0], [62.9, 151.0], [63.0, 151.0], [63.1, 151.0], [63.2, 151.0], [63.3, 151.0], [63.4, 151.0], [63.5, 152.0], [63.6, 152.0], [63.7, 152.0], [63.8, 152.0], [63.9, 152.0], [64.0, 152.0], [64.1, 152.0], [64.2, 152.0], [64.3, 152.0], [64.4, 152.0], [64.5, 152.0], [64.6, 152.0], [64.7, 152.0], [64.8, 153.0], [64.9, 153.0], [65.0, 153.0], [65.1, 153.0], [65.2, 153.0], [65.3, 153.0], [65.4, 153.0], [65.5, 153.0], [65.6, 153.0], [65.7, 153.0], [65.8, 153.0], [65.9, 153.0], [66.0, 154.0], [66.1, 154.0], [66.2, 154.0], [66.3, 154.0], [66.4, 154.0], [66.5, 154.0], [66.6, 154.0], [66.7, 154.0], [66.8, 154.0], [66.9, 154.0], [67.0, 154.0], [67.1, 155.0], [67.2, 155.0], [67.3, 155.0], [67.4, 155.0], [67.5, 155.0], [67.6, 155.0], [67.7, 155.0], [67.8, 155.0], [67.9, 155.0], [68.0, 155.0], [68.1, 155.0], [68.2, 155.0], [68.3, 156.0], [68.4, 156.0], [68.5, 156.0], [68.6, 156.0], [68.7, 156.0], [68.8, 156.0], [68.9, 156.0], [69.0, 156.0], [69.1, 156.0], [69.2, 156.0], [69.3, 157.0], [69.4, 157.0], [69.5, 157.0], [69.6, 157.0], [69.7, 157.0], [69.8, 157.0], [69.9, 157.0], [70.0, 157.0], [70.1, 157.0], [70.2, 157.0], [70.3, 157.0], [70.4, 158.0], [70.5, 158.0], [70.6, 158.0], [70.7, 158.0], [70.8, 158.0], [70.9, 158.0], [71.0, 158.0], [71.1, 158.0], [71.2, 158.0], [71.3, 158.0], [71.4, 158.0], [71.5, 159.0], [71.6, 159.0], [71.7, 159.0], [71.8, 159.0], [71.9, 159.0], [72.0, 159.0], [72.1, 159.0], [72.2, 159.0], [72.3, 159.0], [72.4, 159.0], [72.5, 159.0], [72.6, 160.0], [72.7, 160.0], [72.8, 160.0], [72.9, 160.0], [73.0, 160.0], [73.1, 160.0], [73.2, 160.0], [73.3, 160.0], [73.4, 160.0], [73.5, 160.0], [73.6, 161.0], [73.7, 161.0], [73.8, 161.0], [73.9, 161.0], [74.0, 161.0], [74.1, 161.0], [74.2, 161.0], [74.3, 161.0], [74.4, 161.0], [74.5, 162.0], [74.6, 162.0], [74.7, 162.0], [74.8, 162.0], [74.9, 162.0], [75.0, 162.0], [75.1, 162.0], [75.2, 162.0], [75.3, 162.0], [75.4, 162.0], [75.5, 163.0], [75.6, 163.0], [75.7, 163.0], [75.8, 163.0], [75.9, 163.0], [76.0, 163.0], [76.1, 163.0], [76.2, 163.0], [76.3, 163.0], [76.4, 164.0], [76.5, 164.0], [76.6, 164.0], [76.7, 164.0], [76.8, 164.0], [76.9, 164.0], [77.0, 164.0], [77.1, 164.0], [77.2, 164.0], [77.3, 164.0], [77.4, 165.0], [77.5, 165.0], [77.6, 165.0], [77.7, 165.0], [77.8, 165.0], [77.9, 165.0], [78.0, 165.0], [78.1, 165.0], [78.2, 166.0], [78.3, 166.0], [78.4, 166.0], [78.5, 166.0], [78.6, 166.0], [78.7, 166.0], [78.8, 166.0], [78.9, 167.0], [79.0, 167.0], [79.1, 167.0], [79.2, 167.0], [79.3, 167.0], [79.4, 167.0], [79.5, 167.0], [79.6, 168.0], [79.7, 168.0], [79.8, 168.0], [79.9, 168.0], [80.0, 168.0], [80.1, 168.0], [80.2, 168.0], [80.3, 169.0], [80.4, 169.0], [80.5, 169.0], [80.6, 169.0], [80.7, 169.0], [80.8, 169.0], [80.9, 169.0], [81.0, 170.0], [81.1, 170.0], [81.2, 170.0], [81.3, 170.0], [81.4, 170.0], [81.5, 170.0], [81.6, 171.0], [81.7, 171.0], [81.8, 171.0], [81.9, 171.0], [82.0, 171.0], [82.1, 172.0], [82.2, 172.0], [82.3, 172.0], [82.4, 172.0], [82.5, 172.0], [82.6, 173.0], [82.7, 173.0], [82.8, 173.0], [82.9, 173.0], [83.0, 173.0], [83.1, 173.0], [83.2, 174.0], [83.3, 174.0], [83.4, 174.0], [83.5, 174.0], [83.6, 175.0], [83.7, 175.0], [83.8, 175.0], [83.9, 175.0], [84.0, 176.0], [84.1, 176.0], [84.2, 176.0], [84.3, 176.0], [84.4, 177.0], [84.5, 177.0], [84.6, 177.0], [84.7, 177.0], [84.8, 178.0], [84.9, 178.0], [85.0, 178.0], [85.1, 179.0], [85.2, 179.0], [85.3, 179.0], [85.4, 180.0], [85.5, 180.0], [85.6, 181.0], [85.7, 181.0], [85.8, 182.0], [85.9, 182.0], [86.0, 183.0], [86.1, 183.0], [86.2, 184.0], [86.3, 184.0], [86.4, 185.0], [86.5, 185.0], [86.6, 186.0], [86.7, 187.0], [86.8, 188.0], [86.9, 189.0], [87.0, 190.0], [87.1, 191.0], [87.2, 192.0], [87.3, 193.0], [87.4, 194.0], [87.5, 196.0], [87.6, 197.0], [87.7, 198.0], [87.8, 199.0], [87.9, 200.0], [88.0, 201.0], [88.1, 202.0], [88.2, 204.0], [88.3, 205.0], [88.4, 206.0], [88.5, 207.0], [88.6, 208.0], [88.7, 210.0], [88.8, 211.0], [88.9, 212.0], [89.0, 213.0], [89.1, 214.0], [89.2, 215.0], [89.3, 216.0], [89.4, 218.0], [89.5, 220.0], [89.6, 221.0], [89.7, 223.0], [89.8, 225.0], [89.9, 226.0], [90.0, 227.0], [90.1, 228.0], [90.2, 229.0], [90.3, 231.0], [90.4, 232.0], [90.5, 233.0], [90.6, 235.0], [90.7, 236.0], [90.8, 237.0], [90.9, 239.0], [91.0, 240.0], [91.1, 242.0], [91.2, 243.0], [91.3, 245.0], [91.4, 246.0], [91.5, 248.0], [91.6, 249.0], [91.7, 250.0], [91.8, 253.0], [91.9, 255.0], [92.0, 257.0], [92.1, 258.0], [92.2, 261.0], [92.3, 263.0], [92.4, 265.0], [92.5, 267.0], [92.6, 268.0], [92.7, 270.0], [92.8, 271.0], [92.9, 272.0], [93.0, 274.0], [93.1, 275.0], [93.2, 277.0], [93.3, 278.0], [93.4, 280.0], [93.5, 281.0], [93.6, 283.0], [93.7, 285.0], [93.8, 288.0], [93.9, 290.0], [94.0, 292.0], [94.1, 293.0], [94.2, 295.0], [94.3, 297.0], [94.4, 298.0], [94.5, 300.0], [94.6, 302.0], [94.7, 303.0], [94.8, 305.0], [94.9, 306.0], [95.0, 309.0], [95.1, 310.0], [95.2, 312.0], [95.3, 314.0], [95.4, 316.0], [95.5, 318.0], [95.6, 320.0], [95.7, 322.0], [95.8, 325.0], [95.9, 327.0], [96.0, 330.0], [96.1, 333.0], [96.2, 335.0], [96.3, 337.0], [96.4, 339.0], [96.5, 342.0], [96.6, 345.0], [96.7, 348.0], [96.8, 351.0], [96.9, 354.0], [97.0, 358.0], [97.1, 363.0], [97.2, 367.0], [97.3, 372.0], [97.4, 377.0], [97.5, 384.0], [97.6, 392.0], [97.7, 400.0], [97.8, 405.0], [97.9, 410.0], [98.0, 414.0], [98.1, 419.0], [98.2, 423.0], [98.3, 427.0], [98.4, 432.0], [98.5, 439.0], [98.6, 446.0], [98.7, 453.0], [98.8, 461.0], [98.9, 468.0], [99.0, 477.0], [99.1, 486.0], [99.2, 501.0], [99.3, 520.0], [99.4, 545.0], [99.5, 576.0], [99.6, 615.0], [99.7, 651.0], [99.8, 691.0], [99.9, 762.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 1.0], [0.1, 3.0], [0.2, 5.0], [0.3, 8.0], [0.4, 11.0], [0.5, 14.0], [0.6, 18.0], [0.7, 21.0], [0.8, 24.0], [0.9, 27.0], [1.0, 30.0], [1.1, 33.0], [1.2, 36.0], [1.3, 39.0], [1.4, 42.0], [1.5, 45.0], [1.6, 48.0], [1.7, 50.0], [1.8, 52.0], [1.9, 55.0], [2.0, 57.0], [2.1, 59.0], [2.2, 61.0], [2.3, 63.0], [2.4, 65.0], [2.5, 66.0], [2.6, 67.0], [2.7, 69.0], [2.8, 70.0], [2.9, 72.0], [3.0, 73.0], [3.1, 74.0], [3.2, 76.0], [3.3, 77.0], [3.4, 78.0], [3.5, 79.0], [3.6, 81.0], [3.7, 82.0], [3.8, 84.0], [3.9, 85.0], [4.0, 86.0], [4.1, 88.0], [4.2, 89.0], [4.3, 91.0], [4.4, 92.0], [4.5, 93.0], [4.6, 94.0], [4.7, 96.0], [4.8, 97.0], [4.9, 98.0], [5.0, 99.0], [5.1, 100.0], [5.2, 101.0], [5.3, 102.0], [5.4, 103.0], [5.5, 103.0], [5.6, 104.0], [5.7, 105.0], [5.8, 105.0], [5.9, 106.0], [6.0, 106.0], [6.1, 107.0], [6.2, 107.0], [6.3, 108.0], [6.4, 108.0], [6.5, 109.0], [6.6, 109.0], [6.7, 109.0], [6.8, 110.0], [6.9, 110.0], [7.0, 111.0], [7.1, 111.0], [7.2, 111.0], [7.3, 112.0], [7.4, 112.0], [7.5, 112.0], [7.6, 112.0], [7.7, 113.0], [7.8, 113.0], [7.9, 113.0], [8.0, 113.0], [8.1, 114.0], [8.2, 114.0], [8.3, 114.0], [8.4, 114.0], [8.5, 115.0], [8.6, 115.0], [8.7, 115.0], [8.8, 115.0], [8.9, 116.0], [9.0, 116.0], [9.1, 116.0], [9.2, 116.0], [9.3, 116.0], [9.4, 117.0], [9.5, 117.0], [9.6, 117.0], [9.7, 117.0], [9.8, 117.0], [9.9, 118.0], [10.0, 118.0], [10.1, 118.0], [10.2, 118.0], [10.3, 118.0], [10.4, 119.0], [10.5, 119.0], [10.6, 119.0], [10.7, 119.0], [10.8, 119.0], [10.9, 119.0], [11.0, 120.0], [11.1, 120.0], [11.2, 120.0], [11.3, 120.0], [11.4, 120.0], [11.5, 120.0], [11.6, 121.0], [11.7, 121.0], [11.8, 121.0], [11.9, 121.0], [12.0, 121.0], [12.1, 121.0], [12.2, 121.0], [12.3, 121.0], [12.4, 121.0], [12.5, 122.0], [12.6, 122.0], [12.7, 122.0], [12.8, 122.0], [12.9, 122.0], [13.0, 122.0], [13.1, 122.0], [13.2, 122.0], [13.3, 122.0], [13.4, 122.0], [13.5, 123.0], [13.6, 123.0], [13.7, 123.0], [13.8, 123.0], [13.9, 123.0], [14.0, 123.0], [14.1, 123.0], [14.2, 123.0], [14.3, 123.0], [14.4, 123.0], [14.5, 123.0], [14.6, 123.0], [14.7, 124.0], [14.8, 124.0], [14.9, 124.0], [15.0, 124.0], [15.1, 124.0], [15.2, 124.0], [15.3, 124.0], [15.4, 124.0], [15.5, 124.0], [15.6, 124.0], [15.7, 124.0], [15.8, 124.0], [15.9, 124.0], [16.0, 124.0], [16.1, 124.0], [16.2, 125.0], [16.3, 125.0], [16.4, 125.0], [16.5, 125.0], [16.6, 125.0], [16.7, 125.0], [16.8, 125.0], [16.9, 125.0], [17.0, 125.0], [17.1, 125.0], [17.2, 125.0], [17.3, 125.0], [17.4, 125.0], [17.5, 125.0], [17.6, 125.0], [17.7, 125.0], [17.8, 126.0], [17.9, 126.0], [18.0, 126.0], [18.1, 126.0], [18.2, 126.0], [18.3, 126.0], [18.4, 126.0], [18.5, 126.0], [18.6, 126.0], [18.7, 126.0], [18.8, 126.0], [18.9, 126.0], [19.0, 126.0], [19.1, 126.0], [19.2, 126.0], [19.3, 126.0], [19.4, 126.0], [19.5, 126.0], [19.6, 127.0], [19.7, 127.0], [19.8, 127.0], [19.9, 127.0], [20.0, 127.0], [20.1, 127.0], [20.2, 127.0], [20.3, 127.0], [20.4, 127.0], [20.5, 127.0], [20.6, 127.0], [20.7, 127.0], [20.8, 127.0], [20.9, 127.0], [21.0, 127.0], [21.1, 127.0], [21.2, 127.0], [21.3, 127.0], [21.4, 127.0], [21.5, 128.0], [21.6, 128.0], [21.7, 128.0], [21.8, 128.0], [21.9, 128.0], [22.0, 128.0], [22.1, 128.0], [22.2, 128.0], [22.3, 128.0], [22.4, 128.0], [22.5, 128.0], [22.6, 128.0], [22.7, 128.0], [22.8, 128.0], [22.9, 128.0], [23.0, 128.0], [23.1, 128.0], [23.2, 128.0], [23.3, 128.0], [23.4, 128.0], [23.5, 129.0], [23.6, 129.0], [23.7, 129.0], [23.8, 129.0], [23.9, 129.0], [24.0, 129.0], [24.1, 129.0], [24.2, 129.0], [24.3, 129.0], [24.4, 129.0], [24.5, 129.0], [24.6, 129.0], [24.7, 129.0], [24.8, 129.0], [24.9, 129.0], [25.0, 129.0], [25.1, 129.0], [25.2, 129.0], [25.3, 129.0], [25.4, 129.0], [25.5, 129.0], [25.6, 129.0], [25.7, 130.0], [25.8, 130.0], [25.9, 130.0], [26.0, 130.0], [26.1, 130.0], [26.2, 130.0], [26.3, 130.0], [26.4, 130.0], [26.5, 130.0], [26.6, 130.0], [26.7, 130.0], [26.8, 130.0], [26.9, 130.0], [27.0, 130.0], [27.1, 130.0], [27.2, 130.0], [27.3, 130.0], [27.4, 130.0], [27.5, 130.0], [27.6, 130.0], [27.7, 130.0], [27.8, 130.0], [27.9, 130.0], [28.0, 130.0], [28.1, 131.0], [28.2, 131.0], [28.3, 131.0], [28.4, 131.0], [28.5, 131.0], [28.6, 131.0], [28.7, 131.0], [28.8, 131.0], [28.9, 131.0], [29.0, 131.0], [29.1, 131.0], [29.2, 131.0], [29.3, 131.0], [29.4, 131.0], [29.5, 131.0], [29.6, 131.0], [29.7, 131.0], [29.8, 131.0], [29.9, 131.0], [30.0, 131.0], [30.1, 131.0], [30.2, 131.0], [30.3, 131.0], [30.4, 131.0], [30.5, 131.0], [30.6, 131.0], [30.7, 131.0], [30.8, 132.0], [30.9, 132.0], [31.0, 132.0], [31.1, 132.0], [31.2, 132.0], [31.3, 132.0], [31.4, 132.0], [31.5, 132.0], [31.6, 132.0], [31.7, 132.0], [31.8, 132.0], [31.9, 132.0], [32.0, 132.0], [32.1, 132.0], [32.2, 132.0], [32.3, 132.0], [32.4, 132.0], [32.5, 132.0], [32.6, 132.0], [32.7, 132.0], [32.8, 132.0], [32.9, 132.0], [33.0, 132.0], [33.1, 132.0], [33.2, 132.0], [33.3, 132.0], [33.4, 132.0], [33.5, 133.0], [33.6, 133.0], [33.7, 133.0], [33.8, 133.0], [33.9, 133.0], [34.0, 133.0], [34.1, 133.0], [34.2, 133.0], [34.3, 133.0], [34.4, 133.0], [34.5, 133.0], [34.6, 133.0], [34.7, 133.0], [34.8, 133.0], [34.9, 133.0], [35.0, 133.0], [35.1, 133.0], [35.2, 133.0], [35.3, 133.0], [35.4, 133.0], [35.5, 133.0], [35.6, 133.0], [35.7, 133.0], [35.8, 133.0], [35.9, 133.0], [36.0, 133.0], [36.1, 134.0], [36.2, 134.0], [36.3, 134.0], [36.4, 134.0], [36.5, 134.0], [36.6, 134.0], [36.7, 134.0], [36.8, 134.0], [36.9, 134.0], [37.0, 134.0], [37.1, 134.0], [37.2, 134.0], [37.3, 134.0], [37.4, 134.0], [37.5, 134.0], [37.6, 134.0], [37.7, 134.0], [37.8, 134.0], [37.9, 134.0], [38.0, 134.0], [38.1, 134.0], [38.2, 134.0], [38.3, 134.0], [38.4, 134.0], [38.5, 134.0], [38.6, 134.0], [38.7, 135.0], [38.8, 135.0], [38.9, 135.0], [39.0, 135.0], [39.1, 135.0], [39.2, 135.0], [39.3, 135.0], [39.4, 135.0], [39.5, 135.0], [39.6, 135.0], [39.7, 135.0], [39.8, 135.0], [39.9, 135.0], [40.0, 135.0], [40.1, 135.0], [40.2, 135.0], [40.3, 135.0], [40.4, 135.0], [40.5, 135.0], [40.6, 135.0], [40.7, 135.0], [40.8, 135.0], [40.9, 135.0], [41.0, 135.0], [41.1, 135.0], [41.2, 136.0], [41.3, 136.0], [41.4, 136.0], [41.5, 136.0], [41.6, 136.0], [41.7, 136.0], [41.8, 136.0], [41.9, 136.0], [42.0, 136.0], [42.1, 136.0], [42.2, 136.0], [42.3, 136.0], [42.4, 136.0], [42.5, 136.0], [42.6, 136.0], [42.7, 136.0], [42.8, 136.0], [42.9, 136.0], [43.0, 136.0], [43.1, 136.0], [43.2, 136.0], [43.3, 136.0], [43.4, 136.0], [43.5, 136.0], [43.6, 136.0], [43.7, 137.0], [43.8, 137.0], [43.9, 137.0], [44.0, 137.0], [44.1, 137.0], [44.2, 137.0], [44.3, 137.0], [44.4, 137.0], [44.5, 137.0], [44.6, 137.0], [44.7, 137.0], [44.8, 137.0], [44.9, 137.0], [45.0, 137.0], [45.1, 137.0], [45.2, 137.0], [45.3, 137.0], [45.4, 137.0], [45.5, 137.0], [45.6, 137.0], [45.7, 137.0], [45.8, 138.0], [45.9, 138.0], [46.0, 138.0], [46.1, 138.0], [46.2, 138.0], [46.3, 138.0], [46.4, 138.0], [46.5, 138.0], [46.6, 138.0], [46.7, 138.0], [46.8, 138.0], [46.9, 138.0], [47.0, 138.0], [47.1, 138.0], [47.2, 138.0], [47.3, 138.0], [47.4, 138.0], [47.5, 138.0], [47.6, 138.0], [47.7, 139.0], [47.8, 139.0], [47.9, 139.0], [48.0, 139.0], [48.1, 139.0], [48.2, 139.0], [48.3, 139.0], [48.4, 139.0], [48.5, 139.0], [48.6, 139.0], [48.7, 139.0], [48.8, 139.0], [48.9, 139.0], [49.0, 139.0], [49.1, 139.0], [49.2, 139.0], [49.3, 140.0], [49.4, 140.0], [49.5, 140.0], [49.6, 140.0], [49.7, 140.0], [49.8, 140.0], [49.9, 140.0], [50.0, 140.0], [50.1, 140.0], [50.2, 140.0], [50.3, 140.0], [50.4, 140.0], [50.5, 140.0], [50.6, 140.0], [50.7, 141.0], [50.8, 141.0], [50.9, 141.0], [51.0, 141.0], [51.1, 141.0], [51.2, 141.0], [51.3, 141.0], [51.4, 141.0], [51.5, 141.0], [51.6, 141.0], [51.7, 141.0], [51.8, 141.0], [51.9, 141.0], [52.0, 141.0], [52.1, 142.0], [52.2, 142.0], [52.3, 142.0], [52.4, 142.0], [52.5, 142.0], [52.6, 142.0], [52.7, 142.0], [52.8, 142.0], [52.9, 142.0], [53.0, 142.0], [53.1, 142.0], [53.2, 142.0], [53.3, 143.0], [53.4, 143.0], [53.5, 143.0], [53.6, 143.0], [53.7, 143.0], [53.8, 143.0], [53.9, 143.0], [54.0, 143.0], [54.1, 143.0], [54.2, 143.0], [54.3, 143.0], [54.4, 144.0], [54.5, 144.0], [54.6, 144.0], [54.7, 144.0], [54.8, 144.0], [54.9, 144.0], [55.0, 144.0], [55.1, 144.0], [55.2, 144.0], [55.3, 144.0], [55.4, 144.0], [55.5, 145.0], [55.6, 145.0], [55.7, 145.0], [55.8, 145.0], [55.9, 145.0], [56.0, 145.0], [56.1, 145.0], [56.2, 145.0], [56.3, 145.0], [56.4, 145.0], [56.5, 145.0], [56.6, 146.0], [56.7, 146.0], [56.8, 146.0], [56.9, 146.0], [57.0, 146.0], [57.1, 146.0], [57.2, 146.0], [57.3, 146.0], [57.4, 146.0], [57.5, 146.0], [57.6, 146.0], [57.7, 146.0], [57.8, 147.0], [57.9, 147.0], [58.0, 147.0], [58.1, 147.0], [58.2, 147.0], [58.3, 147.0], [58.4, 147.0], [58.5, 147.0], [58.6, 147.0], [58.7, 147.0], [58.8, 147.0], [58.9, 147.0], [59.0, 148.0], [59.1, 148.0], [59.2, 148.0], [59.3, 148.0], [59.4, 148.0], [59.5, 148.0], [59.6, 148.0], [59.7, 148.0], [59.8, 148.0], [59.9, 148.0], [60.0, 148.0], [60.1, 148.0], [60.2, 148.0], [60.3, 149.0], [60.4, 149.0], [60.5, 149.0], [60.6, 149.0], [60.7, 149.0], [60.8, 149.0], [60.9, 149.0], [61.0, 149.0], [61.1, 149.0], [61.2, 149.0], [61.3, 149.0], [61.4, 149.0], [61.5, 149.0], [61.6, 149.0], [61.7, 150.0], [61.8, 150.0], [61.9, 150.0], [62.0, 150.0], [62.1, 150.0], [62.2, 150.0], [62.3, 150.0], [62.4, 150.0], [62.5, 150.0], [62.6, 150.0], [62.7, 150.0], [62.8, 150.0], [62.9, 150.0], [63.0, 151.0], [63.1, 151.0], [63.2, 151.0], [63.3, 151.0], [63.4, 151.0], [63.5, 151.0], [63.6, 151.0], [63.7, 151.0], [63.8, 151.0], [63.9, 151.0], [64.0, 151.0], [64.1, 151.0], [64.2, 152.0], [64.3, 152.0], [64.4, 152.0], [64.5, 152.0], [64.6, 152.0], [64.7, 152.0], [64.8, 152.0], [64.9, 152.0], [65.0, 152.0], [65.1, 152.0], [65.2, 152.0], [65.3, 152.0], [65.4, 152.0], [65.5, 153.0], [65.6, 153.0], [65.7, 153.0], [65.8, 153.0], [65.9, 153.0], [66.0, 153.0], [66.1, 153.0], [66.2, 153.0], [66.3, 153.0], [66.4, 153.0], [66.5, 153.0], [66.6, 153.0], [66.7, 154.0], [66.8, 154.0], [66.9, 154.0], [67.0, 154.0], [67.1, 154.0], [67.2, 154.0], [67.3, 154.0], [67.4, 154.0], [67.5, 154.0], [67.6, 154.0], [67.7, 154.0], [67.8, 155.0], [67.9, 155.0], [68.0, 155.0], [68.1, 155.0], [68.2, 155.0], [68.3, 155.0], [68.4, 155.0], [68.5, 155.0], [68.6, 155.0], [68.7, 155.0], [68.8, 155.0], [68.9, 155.0], [69.0, 156.0], [69.1, 156.0], [69.2, 156.0], [69.3, 156.0], [69.4, 156.0], [69.5, 156.0], [69.6, 156.0], [69.7, 156.0], [69.8, 156.0], [69.9, 156.0], [70.0, 157.0], [70.1, 157.0], [70.2, 157.0], [70.3, 157.0], [70.4, 157.0], [70.5, 157.0], [70.6, 157.0], [70.7, 157.0], [70.8, 157.0], [70.9, 157.0], [71.0, 157.0], [71.1, 158.0], [71.2, 158.0], [71.3, 158.0], [71.4, 158.0], [71.5, 158.0], [71.6, 158.0], [71.7, 158.0], [71.8, 158.0], [71.9, 158.0], [72.0, 158.0], [72.1, 158.0], [72.2, 159.0], [72.3, 159.0], [72.4, 159.0], [72.5, 159.0], [72.6, 159.0], [72.7, 159.0], [72.8, 159.0], [72.9, 159.0], [73.0, 159.0], [73.1, 159.0], [73.2, 159.0], [73.3, 160.0], [73.4, 160.0], [73.5, 160.0], [73.6, 160.0], [73.7, 160.0], [73.8, 160.0], [73.9, 160.0], [74.0, 160.0], [74.1, 160.0], [74.2, 161.0], [74.3, 161.0], [74.4, 161.0], [74.5, 161.0], [74.6, 161.0], [74.7, 161.0], [74.8, 161.0], [74.9, 161.0], [75.0, 161.0], [75.1, 162.0], [75.2, 162.0], [75.3, 162.0], [75.4, 162.0], [75.5, 162.0], [75.6, 162.0], [75.7, 162.0], [75.8, 162.0], [75.9, 162.0], [76.0, 162.0], [76.1, 163.0], [76.2, 163.0], [76.3, 163.0], [76.4, 163.0], [76.5, 163.0], [76.6, 163.0], [76.7, 163.0], [76.8, 163.0], [76.9, 163.0], [77.0, 164.0], [77.1, 164.0], [77.2, 164.0], [77.3, 164.0], [77.4, 164.0], [77.5, 164.0], [77.6, 164.0], [77.7, 164.0], [77.8, 164.0], [77.9, 165.0], [78.0, 165.0], [78.1, 165.0], [78.2, 165.0], [78.3, 165.0], [78.4, 165.0], [78.5, 165.0], [78.6, 166.0], [78.7, 166.0], [78.8, 166.0], [78.9, 166.0], [79.0, 166.0], [79.1, 166.0], [79.2, 166.0], [79.3, 166.0], [79.4, 167.0], [79.5, 167.0], [79.6, 167.0], [79.7, 167.0], [79.8, 167.0], [79.9, 167.0], [80.0, 167.0], [80.1, 168.0], [80.2, 168.0], [80.3, 168.0], [80.4, 168.0], [80.5, 168.0], [80.6, 168.0], [80.7, 168.0], [80.8, 169.0], [80.9, 169.0], [81.0, 169.0], [81.1, 169.0], [81.2, 169.0], [81.3, 169.0], [81.4, 170.0], [81.5, 170.0], [81.6, 170.0], [81.7, 170.0], [81.8, 170.0], [81.9, 170.0], [82.0, 171.0], [82.1, 171.0], [82.2, 171.0], [82.3, 171.0], [82.4, 171.0], [82.5, 172.0], [82.6, 172.0], [82.7, 172.0], [82.8, 172.0], [82.9, 172.0], [83.0, 173.0], [83.1, 173.0], [83.2, 173.0], [83.3, 173.0], [83.4, 173.0], [83.5, 174.0], [83.6, 174.0], [83.7, 174.0], [83.8, 174.0], [83.9, 174.0], [84.0, 175.0], [84.1, 175.0], [84.2, 175.0], [84.3, 175.0], [84.4, 176.0], [84.5, 176.0], [84.6, 176.0], [84.7, 177.0], [84.8, 177.0], [84.9, 177.0], [85.0, 177.0], [85.1, 178.0], [85.2, 178.0], [85.3, 179.0], [85.4, 179.0], [85.5, 179.0], [85.6, 180.0], [85.7, 180.0], [85.8, 181.0], [85.9, 181.0], [86.0, 181.0], [86.1, 182.0], [86.2, 182.0], [86.3, 183.0], [86.4, 183.0], [86.5, 184.0], [86.6, 184.0], [86.7, 185.0], [86.8, 185.0], [86.9, 186.0], [87.0, 187.0], [87.1, 188.0], [87.2, 189.0], [87.3, 190.0], [87.4, 191.0], [87.5, 192.0], [87.6, 193.0], [87.7, 194.0], [87.8, 195.0], [87.9, 196.0], [88.0, 197.0], [88.1, 198.0], [88.2, 199.0], [88.3, 200.0], [88.4, 201.0], [88.5, 202.0], [88.6, 204.0], [88.7, 205.0], [88.8, 206.0], [88.9, 207.0], [89.0, 208.0], [89.1, 209.0], [89.2, 210.0], [89.3, 211.0], [89.4, 212.0], [89.5, 213.0], [89.6, 215.0], [89.7, 216.0], [89.8, 217.0], [89.9, 219.0], [90.0, 220.0], [90.1, 222.0], [90.2, 223.0], [90.3, 224.0], [90.4, 225.0], [90.5, 226.0], [90.6, 228.0], [90.7, 229.0], [90.8, 230.0], [90.9, 231.0], [91.0, 232.0], [91.1, 233.0], [91.2, 235.0], [91.3, 236.0], [91.4, 237.0], [91.5, 239.0], [91.6, 241.0], [91.7, 242.0], [91.8, 244.0], [91.9, 245.0], [92.0, 246.0], [92.1, 247.0], [92.2, 249.0], [92.3, 251.0], [92.4, 253.0], [92.5, 255.0], [92.6, 257.0], [92.7, 259.0], [92.8, 262.0], [92.9, 264.0], [93.0, 266.0], [93.1, 267.0], [93.2, 268.0], [93.3, 270.0], [93.4, 271.0], [93.5, 272.0], [93.6, 274.0], [93.7, 275.0], [93.8, 277.0], [93.9, 278.0], [94.0, 280.0], [94.1, 282.0], [94.2, 284.0], [94.3, 286.0], [94.4, 288.0], [94.5, 290.0], [94.6, 292.0], [94.7, 294.0], [94.8, 296.0], [94.9, 297.0], [95.0, 299.0], [95.1, 301.0], [95.2, 303.0], [95.3, 304.0], [95.4, 306.0], [95.5, 308.0], [95.6, 310.0], [95.7, 311.0], [95.8, 314.0], [95.9, 316.0], [96.0, 317.0], [96.1, 320.0], [96.2, 322.0], [96.3, 325.0], [96.4, 327.0], [96.5, 330.0], [96.6, 333.0], [96.7, 335.0], [96.8, 337.0], [96.9, 339.0], [97.0, 342.0], [97.1, 345.0], [97.2, 348.0], [97.3, 351.0], [97.4, 354.0], [97.5, 358.0], [97.6, 362.0], [97.7, 366.0], [97.8, 371.0], [97.9, 376.0], [98.0, 383.0], [98.1, 391.0], [98.2, 397.0], [98.3, 404.0], [98.4, 409.0], [98.5, 413.0], [98.6, 418.0], [98.7, 422.0], [98.8, 426.0], [98.9, 432.0], [99.0, 440.0], [99.1, 448.0], [99.2, 457.0], [99.3, 465.0], [99.4, 475.0], [99.5, 485.0], [99.6, 505.0], [99.7, 549.0], [99.8, 594.0], [99.9, 652.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 3.0], [0.1, 6.0], [0.2, 11.0], [0.3, 20.0], [0.4, 29.0], [0.5, 41.0], [0.6, 54.0], [0.7, 63.0], [0.8, 73.0], [0.9, 85.0], [1.0, 91.0], [1.1, 100.0], [1.2, 113.0], [1.3, 119.0], [1.4, 123.0], [1.5, 127.0], [1.6, 135.0], [1.7, 139.0], [1.8, 143.0], [1.9, 149.0], [2.0, 152.0], [2.1, 153.0], [2.2, 156.0], [2.3, 160.0], [2.4, 161.0], [2.5, 164.0], [2.6, 166.0], [2.7, 170.0], [2.8, 174.0], [2.9, 176.0], [3.0, 178.0], [3.1, 180.0], [3.2, 183.0], [3.3, 185.0], [3.4, 188.0], [3.5, 190.0], [3.6, 193.0], [3.7, 194.0], [3.8, 196.0], [3.9, 197.0], [4.0, 198.0], [4.1, 199.0], [4.2, 201.0], [4.3, 202.0], [4.4, 204.0], [4.5, 206.0], [4.6, 207.0], [4.7, 208.0], [4.8, 210.0], [4.9, 211.0], [5.0, 212.0], [5.1, 214.0], [5.2, 216.0], [5.3, 217.0], [5.4, 220.0], [5.5, 222.0], [5.6, 223.0], [5.7, 224.0], [5.8, 225.0], [5.9, 226.0], [6.0, 227.0], [6.1, 228.0], [6.2, 228.0], [6.3, 229.0], [6.4, 230.0], [6.5, 230.0], [6.6, 231.0], [6.7, 231.0], [6.8, 232.0], [6.9, 232.0], [7.0, 233.0], [7.1, 234.0], [7.2, 234.0], [7.3, 235.0], [7.4, 235.0], [7.5, 235.0], [7.6, 236.0], [7.7, 237.0], [7.8, 237.0], [7.9, 238.0], [8.0, 238.0], [8.1, 238.0], [8.2, 239.0], [8.3, 239.0], [8.4, 239.0], [8.5, 240.0], [8.6, 240.0], [8.7, 240.0], [8.8, 240.0], [8.9, 241.0], [9.0, 241.0], [9.1, 242.0], [9.2, 242.0], [9.3, 242.0], [9.4, 242.0], [9.5, 243.0], [9.6, 243.0], [9.7, 243.0], [9.8, 243.0], [9.9, 243.0], [10.0, 244.0], [10.1, 244.0], [10.2, 244.0], [10.3, 244.0], [10.4, 245.0], [10.5, 245.0], [10.6, 245.0], [10.7, 245.0], [10.8, 245.0], [10.9, 245.0], [11.0, 245.0], [11.1, 246.0], [11.2, 246.0], [11.3, 246.0], [11.4, 246.0], [11.5, 246.0], [11.6, 247.0], [11.7, 247.0], [11.8, 247.0], [11.9, 247.0], [12.0, 247.0], [12.1, 247.0], [12.2, 248.0], [12.3, 248.0], [12.4, 248.0], [12.5, 248.0], [12.6, 248.0], [12.7, 248.0], [12.8, 248.0], [12.9, 249.0], [13.0, 249.0], [13.1, 249.0], [13.2, 249.0], [13.3, 249.0], [13.4, 249.0], [13.5, 249.0], [13.6, 249.0], [13.7, 249.0], [13.8, 250.0], [13.9, 250.0], [14.0, 250.0], [14.1, 250.0], [14.2, 250.0], [14.3, 250.0], [14.4, 250.0], [14.5, 250.0], [14.6, 251.0], [14.7, 251.0], [14.8, 251.0], [14.9, 251.0], [15.0, 251.0], [15.1, 251.0], [15.2, 251.0], [15.3, 251.0], [15.4, 251.0], [15.5, 252.0], [15.6, 252.0], [15.7, 252.0], [15.8, 252.0], [15.9, 252.0], [16.0, 252.0], [16.1, 252.0], [16.2, 252.0], [16.3, 252.0], [16.4, 252.0], [16.5, 253.0], [16.6, 253.0], [16.7, 253.0], [16.8, 253.0], [16.9, 253.0], [17.0, 253.0], [17.1, 253.0], [17.2, 253.0], [17.3, 253.0], [17.4, 254.0], [17.5, 254.0], [17.6, 254.0], [17.7, 254.0], [17.8, 254.0], [17.9, 254.0], [18.0, 254.0], [18.1, 254.0], [18.2, 254.0], [18.3, 255.0], [18.4, 255.0], [18.5, 255.0], [18.6, 255.0], [18.7, 255.0], [18.8, 255.0], [18.9, 255.0], [19.0, 255.0], [19.1, 255.0], [19.2, 255.0], [19.3, 256.0], [19.4, 256.0], [19.5, 256.0], [19.6, 256.0], [19.7, 256.0], [19.8, 256.0], [19.9, 256.0], [20.0, 256.0], [20.1, 256.0], [20.2, 256.0], [20.3, 256.0], [20.4, 257.0], [20.5, 257.0], [20.6, 257.0], [20.7, 257.0], [20.8, 257.0], [20.9, 257.0], [21.0, 257.0], [21.1, 257.0], [21.2, 257.0], [21.3, 258.0], [21.4, 258.0], [21.5, 258.0], [21.6, 258.0], [21.7, 258.0], [21.8, 258.0], [21.9, 258.0], [22.0, 258.0], [22.1, 258.0], [22.2, 258.0], [22.3, 258.0], [22.4, 258.0], [22.5, 259.0], [22.6, 259.0], [22.7, 259.0], [22.8, 259.0], [22.9, 259.0], [23.0, 259.0], [23.1, 259.0], [23.2, 259.0], [23.3, 259.0], [23.4, 259.0], [23.5, 259.0], [23.6, 260.0], [23.7, 260.0], [23.8, 260.0], [23.9, 260.0], [24.0, 260.0], [24.1, 260.0], [24.2, 260.0], [24.3, 260.0], [24.4, 260.0], [24.5, 261.0], [24.6, 261.0], [24.7, 261.0], [24.8, 261.0], [24.9, 261.0], [25.0, 261.0], [25.1, 261.0], [25.2, 261.0], [25.3, 261.0], [25.4, 261.0], [25.5, 262.0], [25.6, 262.0], [25.7, 262.0], [25.8, 262.0], [25.9, 262.0], [26.0, 262.0], [26.1, 262.0], [26.2, 262.0], [26.3, 262.0], [26.4, 262.0], [26.5, 263.0], [26.6, 263.0], [26.7, 263.0], [26.8, 263.0], [26.9, 263.0], [27.0, 263.0], [27.1, 263.0], [27.2, 263.0], [27.3, 263.0], [27.4, 263.0], [27.5, 264.0], [27.6, 264.0], [27.7, 264.0], [27.8, 264.0], [27.9, 264.0], [28.0, 264.0], [28.1, 264.0], [28.2, 264.0], [28.3, 264.0], [28.4, 264.0], [28.5, 264.0], [28.6, 264.0], [28.7, 264.0], [28.8, 265.0], [28.9, 265.0], [29.0, 265.0], [29.1, 265.0], [29.2, 265.0], [29.3, 265.0], [29.4, 265.0], [29.5, 265.0], [29.6, 265.0], [29.7, 265.0], [29.8, 265.0], [29.9, 266.0], [30.0, 266.0], [30.1, 266.0], [30.2, 266.0], [30.3, 266.0], [30.4, 266.0], [30.5, 266.0], [30.6, 266.0], [30.7, 266.0], [30.8, 266.0], [30.9, 266.0], [31.0, 266.0], [31.1, 267.0], [31.2, 267.0], [31.3, 267.0], [31.4, 267.0], [31.5, 267.0], [31.6, 267.0], [31.7, 267.0], [31.8, 267.0], [31.9, 267.0], [32.0, 267.0], [32.1, 267.0], [32.2, 267.0], [32.3, 267.0], [32.4, 268.0], [32.5, 268.0], [32.6, 268.0], [32.7, 268.0], [32.8, 268.0], [32.9, 268.0], [33.0, 268.0], [33.1, 268.0], [33.2, 268.0], [33.3, 268.0], [33.4, 268.0], [33.5, 268.0], [33.6, 268.0], [33.7, 269.0], [33.8, 269.0], [33.9, 269.0], [34.0, 269.0], [34.1, 269.0], [34.2, 269.0], [34.3, 269.0], [34.4, 269.0], [34.5, 269.0], [34.6, 269.0], [34.7, 269.0], [34.8, 269.0], [34.9, 269.0], [35.0, 269.0], [35.1, 270.0], [35.2, 270.0], [35.3, 270.0], [35.4, 270.0], [35.5, 270.0], [35.6, 270.0], [35.7, 270.0], [35.8, 270.0], [35.9, 270.0], [36.0, 270.0], [36.1, 270.0], [36.2, 270.0], [36.3, 270.0], [36.4, 270.0], [36.5, 270.0], [36.6, 271.0], [36.7, 271.0], [36.8, 271.0], [36.9, 271.0], [37.0, 271.0], [37.1, 271.0], [37.2, 271.0], [37.3, 271.0], [37.4, 271.0], [37.5, 271.0], [37.6, 271.0], [37.7, 271.0], [37.8, 271.0], [37.9, 271.0], [38.0, 271.0], [38.1, 272.0], [38.2, 272.0], [38.3, 272.0], [38.4, 272.0], [38.5, 272.0], [38.6, 272.0], [38.7, 272.0], [38.8, 272.0], [38.9, 272.0], [39.0, 272.0], [39.1, 272.0], [39.2, 272.0], [39.3, 272.0], [39.4, 272.0], [39.5, 272.0], [39.6, 273.0], [39.7, 273.0], [39.8, 273.0], [39.9, 273.0], [40.0, 273.0], [40.1, 273.0], [40.2, 273.0], [40.3, 273.0], [40.4, 273.0], [40.5, 273.0], [40.6, 273.0], [40.7, 273.0], [40.8, 273.0], [40.9, 274.0], [41.0, 274.0], [41.1, 274.0], [41.2, 274.0], [41.3, 274.0], [41.4, 274.0], [41.5, 274.0], [41.6, 274.0], [41.7, 274.0], [41.8, 274.0], [41.9, 274.0], [42.0, 274.0], [42.1, 274.0], [42.2, 274.0], [42.3, 274.0], [42.4, 275.0], [42.5, 275.0], [42.6, 275.0], [42.7, 275.0], [42.8, 275.0], [42.9, 275.0], [43.0, 275.0], [43.1, 275.0], [43.2, 275.0], [43.3, 275.0], [43.4, 275.0], [43.5, 275.0], [43.6, 275.0], [43.7, 275.0], [43.8, 276.0], [43.9, 276.0], [44.0, 276.0], [44.1, 276.0], [44.2, 276.0], [44.3, 276.0], [44.4, 276.0], [44.5, 276.0], [44.6, 276.0], [44.7, 276.0], [44.8, 276.0], [44.9, 276.0], [45.0, 276.0], [45.1, 276.0], [45.2, 276.0], [45.3, 276.0], [45.4, 277.0], [45.5, 277.0], [45.6, 277.0], [45.7, 277.0], [45.8, 277.0], [45.9, 277.0], [46.0, 277.0], [46.1, 277.0], [46.2, 277.0], [46.3, 277.0], [46.4, 277.0], [46.5, 277.0], [46.6, 277.0], [46.7, 277.0], [46.8, 277.0], [46.9, 277.0], [47.0, 277.0], [47.1, 277.0], [47.2, 278.0], [47.3, 278.0], [47.4, 278.0], [47.5, 278.0], [47.6, 278.0], [47.7, 278.0], [47.8, 278.0], [47.9, 278.0], [48.0, 278.0], [48.1, 278.0], [48.2, 278.0], [48.3, 278.0], [48.4, 278.0], [48.5, 278.0], [48.6, 278.0], [48.7, 278.0], [48.8, 278.0], [48.9, 279.0], [49.0, 279.0], [49.1, 279.0], [49.2, 279.0], [49.3, 279.0], [49.4, 279.0], [49.5, 279.0], [49.6, 279.0], [49.7, 279.0], [49.8, 279.0], [49.9, 279.0], [50.0, 279.0], [50.1, 279.0], [50.2, 279.0], [50.3, 280.0], [50.4, 280.0], [50.5, 280.0], [50.6, 280.0], [50.7, 280.0], [50.8, 280.0], [50.9, 280.0], [51.0, 280.0], [51.1, 280.0], [51.2, 280.0], [51.3, 280.0], [51.4, 280.0], [51.5, 281.0], [51.6, 281.0], [51.7, 281.0], [51.8, 281.0], [51.9, 281.0], [52.0, 281.0], [52.1, 281.0], [52.2, 281.0], [52.3, 281.0], [52.4, 281.0], [52.5, 281.0], [52.6, 281.0], [52.7, 281.0], [52.8, 282.0], [52.9, 282.0], [53.0, 282.0], [53.1, 282.0], [53.2, 282.0], [53.3, 282.0], [53.4, 282.0], [53.5, 282.0], [53.6, 282.0], [53.7, 282.0], [53.8, 282.0], [53.9, 283.0], [54.0, 283.0], [54.1, 283.0], [54.2, 283.0], [54.3, 283.0], [54.4, 283.0], [54.5, 283.0], [54.6, 283.0], [54.7, 283.0], [54.8, 283.0], [54.9, 283.0], [55.0, 284.0], [55.1, 284.0], [55.2, 284.0], [55.3, 284.0], [55.4, 284.0], [55.5, 284.0], [55.6, 284.0], [55.7, 284.0], [55.8, 284.0], [55.9, 285.0], [56.0, 285.0], [56.1, 285.0], [56.2, 285.0], [56.3, 285.0], [56.4, 285.0], [56.5, 285.0], [56.6, 286.0], [56.7, 286.0], [56.8, 286.0], [56.9, 286.0], [57.0, 286.0], [57.1, 287.0], [57.2, 287.0], [57.3, 287.0], [57.4, 287.0], [57.5, 287.0], [57.6, 288.0], [57.7, 288.0], [57.8, 288.0], [57.9, 288.0], [58.0, 288.0], [58.1, 288.0], [58.2, 289.0], [58.3, 289.0], [58.4, 289.0], [58.5, 289.0], [58.6, 289.0], [58.7, 290.0], [58.8, 290.0], [58.9, 290.0], [59.0, 290.0], [59.1, 290.0], [59.2, 291.0], [59.3, 291.0], [59.4, 291.0], [59.5, 291.0], [59.6, 291.0], [59.7, 292.0], [59.8, 292.0], [59.9, 292.0], [60.0, 292.0], [60.1, 292.0], [60.2, 293.0], [60.3, 293.0], [60.4, 293.0], [60.5, 293.0], [60.6, 294.0], [60.7, 294.0], [60.8, 294.0], [60.9, 295.0], [61.0, 295.0], [61.1, 295.0], [61.2, 295.0], [61.3, 296.0], [61.4, 296.0], [61.5, 296.0], [61.6, 296.0], [61.7, 296.0], [61.8, 296.0], [61.9, 297.0], [62.0, 297.0], [62.1, 297.0], [62.2, 297.0], [62.3, 297.0], [62.4, 297.0], [62.5, 297.0], [62.6, 298.0], [62.7, 298.0], [62.8, 298.0], [62.9, 298.0], [63.0, 298.0], [63.1, 299.0], [63.2, 299.0], [63.3, 299.0], [63.4, 299.0], [63.5, 299.0], [63.6, 299.0], [63.7, 299.0], [63.8, 300.0], [63.9, 300.0], [64.0, 300.0], [64.1, 300.0], [64.2, 300.0], [64.3, 300.0], [64.4, 300.0], [64.5, 301.0], [64.6, 301.0], [64.7, 301.0], [64.8, 301.0], [64.9, 301.0], [65.0, 301.0], [65.1, 302.0], [65.2, 302.0], [65.3, 302.0], [65.4, 302.0], [65.5, 302.0], [65.6, 302.0], [65.7, 302.0], [65.8, 302.0], [65.9, 303.0], [66.0, 303.0], [66.1, 303.0], [66.2, 303.0], [66.3, 303.0], [66.4, 304.0], [66.5, 304.0], [66.6, 304.0], [66.7, 304.0], [66.8, 305.0], [66.9, 305.0], [67.0, 305.0], [67.1, 305.0], [67.2, 306.0], [67.3, 306.0], [67.4, 306.0], [67.5, 306.0], [67.6, 307.0], [67.7, 307.0], [67.8, 307.0], [67.9, 308.0], [68.0, 308.0], [68.1, 308.0], [68.2, 308.0], [68.3, 309.0], [68.4, 309.0], [68.5, 309.0], [68.6, 310.0], [68.7, 310.0], [68.8, 310.0], [68.9, 310.0], [69.0, 311.0], [69.1, 311.0], [69.2, 312.0], [69.3, 312.0], [69.4, 312.0], [69.5, 313.0], [69.6, 313.0], [69.7, 313.0], [69.8, 313.0], [69.9, 313.0], [70.0, 314.0], [70.1, 314.0], [70.2, 314.0], [70.3, 314.0], [70.4, 315.0], [70.5, 315.0], [70.6, 315.0], [70.7, 315.0], [70.8, 315.0], [70.9, 316.0], [71.0, 316.0], [71.1, 316.0], [71.2, 316.0], [71.3, 316.0], [71.4, 317.0], [71.5, 317.0], [71.6, 317.0], [71.7, 317.0], [71.8, 318.0], [71.9, 318.0], [72.0, 318.0], [72.1, 319.0], [72.2, 319.0], [72.3, 319.0], [72.4, 319.0], [72.5, 320.0], [72.6, 320.0], [72.7, 320.0], [72.8, 320.0], [72.9, 320.0], [73.0, 320.0], [73.1, 321.0], [73.2, 321.0], [73.3, 321.0], [73.4, 321.0], [73.5, 321.0], [73.6, 322.0], [73.7, 322.0], [73.8, 322.0], [73.9, 322.0], [74.0, 323.0], [74.1, 323.0], [74.2, 323.0], [74.3, 323.0], [74.4, 324.0], [74.5, 324.0], [74.6, 324.0], [74.7, 325.0], [74.8, 325.0], [74.9, 325.0], [75.0, 326.0], [75.1, 326.0], [75.2, 326.0], [75.3, 327.0], [75.4, 327.0], [75.5, 328.0], [75.6, 328.0], [75.7, 328.0], [75.8, 329.0], [75.9, 329.0], [76.0, 329.0], [76.1, 330.0], [76.2, 330.0], [76.3, 330.0], [76.4, 330.0], [76.5, 331.0], [76.6, 331.0], [76.7, 331.0], [76.8, 331.0], [76.9, 331.0], [77.0, 332.0], [77.1, 332.0], [77.2, 332.0], [77.3, 332.0], [77.4, 333.0], [77.5, 333.0], [77.6, 333.0], [77.7, 333.0], [77.8, 333.0], [77.9, 334.0], [78.0, 334.0], [78.1, 334.0], [78.2, 334.0], [78.3, 334.0], [78.4, 335.0], [78.5, 335.0], [78.6, 335.0], [78.7, 335.0], [78.8, 335.0], [78.9, 336.0], [79.0, 336.0], [79.1, 336.0], [79.2, 336.0], [79.3, 336.0], [79.4, 337.0], [79.5, 337.0], [79.6, 337.0], [79.7, 337.0], [79.8, 337.0], [79.9, 338.0], [80.0, 338.0], [80.1, 338.0], [80.2, 338.0], [80.3, 338.0], [80.4, 338.0], [80.5, 338.0], [80.6, 339.0], [80.7, 339.0], [80.8, 339.0], [80.9, 339.0], [81.0, 339.0], [81.1, 339.0], [81.2, 340.0], [81.3, 340.0], [81.4, 340.0], [81.5, 340.0], [81.6, 340.0], [81.7, 340.0], [81.8, 341.0], [81.9, 341.0], [82.0, 341.0], [82.1, 341.0], [82.2, 341.0], [82.3, 341.0], [82.4, 341.0], [82.5, 341.0], [82.6, 342.0], [82.7, 342.0], [82.8, 342.0], [82.9, 342.0], [83.0, 342.0], [83.1, 343.0], [83.2, 343.0], [83.3, 343.0], [83.4, 343.0], [83.5, 344.0], [83.6, 344.0], [83.7, 344.0], [83.8, 344.0], [83.9, 344.0], [84.0, 345.0], [84.1, 345.0], [84.2, 345.0], [84.3, 345.0], [84.4, 345.0], [84.5, 346.0], [84.6, 346.0], [84.7, 346.0], [84.8, 347.0], [84.9, 348.0], [85.0, 348.0], [85.1, 349.0], [85.2, 349.0], [85.3, 350.0], [85.4, 351.0], [85.5, 351.0], [85.6, 352.0], [85.7, 352.0], [85.8, 353.0], [85.9, 354.0], [86.0, 355.0], [86.1, 356.0], [86.2, 358.0], [86.3, 359.0], [86.4, 361.0], [86.5, 363.0], [86.6, 366.0], [86.7, 369.0], [86.8, 372.0], [86.9, 375.0], [87.0, 377.0], [87.1, 379.0], [87.2, 381.0], [87.3, 383.0], [87.4, 385.0], [87.5, 387.0], [87.6, 389.0], [87.7, 391.0], [87.8, 392.0], [87.9, 395.0], [88.0, 398.0], [88.1, 400.0], [88.2, 403.0], [88.3, 405.0], [88.4, 407.0], [88.5, 409.0], [88.6, 410.0], [88.7, 413.0], [88.8, 415.0], [88.9, 417.0], [89.0, 420.0], [89.1, 423.0], [89.2, 427.0], [89.3, 430.0], [89.4, 432.0], [89.5, 434.0], [89.6, 436.0], [89.7, 438.0], [89.8, 439.0], [89.9, 441.0], [90.0, 442.0], [90.1, 444.0], [90.2, 445.0], [90.3, 447.0], [90.4, 449.0], [90.5, 450.0], [90.6, 452.0], [90.7, 456.0], [90.8, 460.0], [90.9, 464.0], [91.0, 467.0], [91.1, 471.0], [91.2, 475.0], [91.3, 480.0], [91.4, 485.0], [91.5, 489.0], [91.6, 494.0], [91.7, 499.0], [91.8, 503.0], [91.9, 507.0], [92.0, 510.0], [92.1, 512.0], [92.2, 516.0], [92.3, 519.0], [92.4, 520.0], [92.5, 521.0], [92.6, 523.0], [92.7, 527.0], [92.8, 529.0], [92.9, 530.0], [93.0, 532.0], [93.1, 534.0], [93.2, 539.0], [93.3, 545.0], [93.4, 551.0], [93.5, 555.0], [93.6, 559.0], [93.7, 564.0], [93.8, 572.0], [93.9, 577.0], [94.0, 579.0], [94.1, 581.0], [94.2, 583.0], [94.3, 586.0], [94.4, 590.0], [94.5, 592.0], [94.6, 594.0], [94.7, 597.0], [94.8, 601.0], [94.9, 605.0], [95.0, 611.0], [95.1, 615.0], [95.2, 621.0], [95.3, 627.0], [95.4, 629.0], [95.5, 632.0], [95.6, 635.0], [95.7, 639.0], [95.8, 643.0], [95.9, 649.0], [96.0, 653.0], [96.1, 656.0], [96.2, 659.0], [96.3, 661.0], [96.4, 665.0], [96.5, 668.0], [96.6, 672.0], [96.7, 677.0], [96.8, 682.0], [96.9, 687.0], [97.0, 691.0], [97.1, 695.0], [97.2, 701.0], [97.3, 714.0], [97.4, 723.0], [97.5, 733.0], [97.6, 742.0], [97.7, 747.0], [97.8, 752.0], [97.9, 757.0], [98.0, 763.0], [98.1, 768.0], [98.2, 774.0], [98.3, 784.0], [98.4, 796.0], [98.5, 815.0], [98.6, 834.0], [98.7, 847.0], [98.8, 855.0], [98.9, 864.0], [99.0, 879.0], [99.1, 894.0], [99.2, 921.0], [99.3, 956.0], [99.4, 980.0], [99.5, 1010.0], [99.6, 1047.0], [99.7, 1084.0], [99.8, 1127.0], [99.9, 1202.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 208962.0, "series": [{"data": [[0.0, 10730.0], [1100.0, 2.0], [300.0, 8083.0], [600.0, 634.0], [700.0, 320.0], [100.0, 208962.0], [200.0, 16465.0], [400.0, 3741.0], [800.0, 117.0], [900.0, 20.0], [500.0, 921.0], [1000.0, 5.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 12665.0], [300.0, 8035.0], [600.0, 387.0], [700.0, 65.0], [100.0, 207971.0], [200.0, 16910.0], [400.0, 3369.0], [800.0, 17.0], [900.0, 6.0], [500.0, 575.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 2745.0], [600.0, 6017.0], [700.0, 3136.0], [200.0, 149146.0], [800.0, 1749.0], [900.0, 874.0], [1000.0, 668.0], [1100.0, 400.0], [300.0, 60778.0], [1200.0, 186.0], [1300.0, 34.0], [1400.0, 9.0], [1500.0, 20.0], [100.0, 7535.0], [400.0, 9085.0], [1600.0, 8.0], [500.0, 7610.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3044.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 726290.0, "series": [{"data": [[0.0, 726290.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3044.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 20666.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 437.61293114105905, "minX": 1.64821266E12, "maxY": 500.0, "series": [{"data": [[1.64821284E12, 452.61346646684575], [1.64821266E12, 437.61293114105905], [1.64821278E12, 500.0], [1.64821272E12, 500.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64821284E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.4, "minX": 1.0, "maxY": 882.7058823529412, "series": [{"data": [[2.0, 2.1935483870967745], [3.0, 1.9999999999999998], [4.0, 1.9655172413793107], [5.0, 2.4], [6.0, 2.25], [7.0, 2.162162162162162], [8.0, 2.0], [9.0, 2.0], [10.0, 3.0], [11.0, 2.6875], [12.0, 3.25], [13.0, 3.0], [14.0, 4.125], [15.0, 4.9230769230769225], [16.0, 3.8333333333333326], [17.0, 4.42857142857143], [18.0, 8.0], [19.0, 6.666666666666667], [20.0, 5.166666666666667], [21.0, 6.0], [22.0, 4.833333333333334], [23.0, 5.333333333333333], [24.0, 5.620689655172413], [25.0, 7.888888888888889], [26.0, 5.8500000000000005], [27.0, 6.1111111111111125], [28.0, 9.75], [29.0, 6.45], [30.0, 7.0], [31.0, 14.5], [33.0, 8.657142857142858], [32.0, 8.400000000000002], [35.0, 15.714285714285714], [34.0, 7.0], [36.0, 28.99999999999999], [37.0, 13.2], [38.0, 33.31578947368421], [39.0, 44.58620689655172], [40.0, 40.71428571428571], [41.0, 21.352941176470587], [42.0, 33.111111111111114], [43.0, 20.8], [44.0, 33.14285714285714], [45.0, 29.333333333333336], [46.0, 19.25], [47.0, 15.72727272727273], [48.0, 86.44444444444444], [49.0, 56.350000000000016], [50.0, 23.48], [51.0, 15.11111111111111], [52.0, 36.99999999999999], [53.0, 25.44444444444445], [54.0, 41.85714285714286], [55.0, 80.25], [56.0, 35.93333333333333], [57.0, 26.538461538461537], [58.0, 38.09090909090909], [59.0, 30.681818181818176], [60.0, 63.96000000000001], [61.0, 57.032258064516135], [62.0, 29.7], [63.0, 57.714285714285715], [64.0, 60.74999999999998], [65.0, 36.05], [66.0, 30.234042553191497], [67.0, 36.89473684210527], [68.0, 36.550000000000004], [69.0, 66.08333333333334], [70.0, 35.0], [71.0, 113.25000000000001], [72.0, 74.88235294117646], [73.0, 81.46153846153845], [74.0, 86.0], [75.0, 69.57894736842104], [76.0, 110.44444444444444], [77.0, 35.83870967741935], [78.0, 48.99999999999999], [79.0, 73.19999999999999], [80.0, 52.85714285714286], [81.0, 50.529411764705884], [82.0, 37.650000000000006], [83.0, 99.7272727272727], [84.0, 64.33333333333334], [85.0, 61.81818181818181], [86.0, 93.26666666666668], [87.0, 81.18181818181819], [88.0, 57.44444444444444], [89.0, 86.0], [90.0, 55.1], [91.0, 54.25000000000001], [92.0, 44.64285714285714], [93.0, 47.857142857142854], [94.0, 88.29729729729733], [95.0, 30.166666666666668], [96.0, 28.17241379310345], [97.0, 60.269230769230774], [98.0, 138.0], [99.0, 59.28571428571429], [100.0, 55.642857142857146], [101.0, 90.8], [103.0, 75.00000000000001], [104.0, 117.14285714285714], [105.0, 43.26315789473684], [106.0, 64.47619047619047], [107.0, 48.87500000000001], [108.0, 80.38888888888889], [109.0, 108.06666666666666], [110.0, 124.64999999999999], [111.0, 76.38888888888889], [112.0, 60.25], [113.0, 58.29411764705881], [114.0, 149.9], [115.0, 66.73913043478261], [116.0, 121.0], [117.0, 76.58333333333333], [118.0, 85.91666666666667], [119.0, 135.13333333333333], [120.0, 149.85714285714286], [121.0, 62.80769230769231], [122.0, 129.41666666666666], [123.0, 84.89473684210527], [124.0, 57.07692307692308], [125.0, 68.85714285714288], [126.0, 52.53846153846153], [127.0, 101.81818181818181], [128.0, 69.81249999999999], [129.0, 84.44444444444444], [130.0, 100.73684210526315], [131.0, 81.71428571428571], [132.0, 96.83333333333334], [133.0, 59.303030303030305], [135.0, 95.93750000000003], [134.0, 37.0], [136.0, 81.93333333333332], [137.0, 110.61111111111111], [138.0, 85.80645161290322], [139.0, 40.46875000000002], [140.0, 43.4], [141.0, 79.76923076923077], [142.0, 52.809523809523796], [143.0, 82.76923076923077], [144.0, 102.0], [145.0, 66.57142857142857], [146.0, 87.38888888888889], [147.0, 59.62500000000001], [148.0, 83.50000000000001], [149.0, 59.785714285714285], [150.0, 91.38461538461537], [151.0, 74.22727272727273], [152.0, 121.52631578947371], [153.0, 93.42857142857143], [154.0, 86.66666666666667], [155.0, 95.99999999999999], [156.0, 95.6153846153846], [157.0, 75.375], [158.0, 125.0], [159.0, 79.66666666666669], [160.0, 91.60869565217394], [161.0, 171.4], [162.0, 384.36842105263156], [163.0, 774.0952380952381], [164.0, 186.8125], [165.0, 84.21428571428572], [166.0, 81.86666666666665], [167.0, 101.52631578947367], [168.0, 126.17857142857142], [169.0, 81.44444444444446], [170.0, 66.16666666666667], [171.0, 101.0], [172.0, 220.0588235294117], [173.0, 126.77777777777777], [174.0, 85.66666666666669], [175.0, 90.57692307692304], [176.0, 207.15789473684208], [177.0, 156.58823529411765], [178.0, 159.5], [179.0, 83.38709677419355], [180.0, 90.375], [181.0, 287.0], [182.0, 174.05882352941177], [183.0, 171.0], [184.0, 78.02380952380953], [185.0, 130.57142857142856], [186.0, 155.83333333333331], [187.0, 134.2857142857143], [188.0, 76.31818181818181], [189.0, 79.78571428571428], [190.0, 98.19047619047618], [191.0, 115.54545454545452], [192.0, 68.40625], [193.0, 129.71428571428572], [194.0, 123.73333333333332], [195.0, 139.76923076923077], [196.0, 105.66666666666667], [197.0, 132.8], [198.0, 84.06250000000001], [199.0, 138.69230769230768], [200.0, 101.5], [201.0, 101.0], [202.0, 164.78260869565221], [203.0, 169.13636363636363], [204.0, 168.97500000000005], [205.0, 460.66666666666663], [206.0, 267.060606060606], [207.0, 329.7272727272727], [208.0, 101.85714285714286], [209.0, 86.14285714285714], [210.0, 118.9], [211.0, 152.80952380952382], [212.0, 97.54999999999995], [213.0, 63.3], [214.0, 77.04166666666667], [215.0, 86.38709677419354], [216.0, 144.88235294117644], [217.0, 215.66666666666666], [218.0, 332.99999999999994], [219.0, 135.4545454545454], [220.0, 174.60000000000005], [221.0, 72.45454545454545], [222.0, 139.62499999999997], [223.0, 419.00000000000006], [225.0, 84.04000000000002], [226.0, 192.46153846153845], [227.0, 153.85714285714286], [228.0, 84.89285714285714], [229.0, 166.3125], [230.0, 112.47540983606558], [231.0, 174.38461538461536], [224.0, 38.9], [232.0, 121.70370370370374], [233.0, 71.3], [234.0, 302.2777777777778], [235.0, 157.1142857142857], [236.0, 251.1904761904763], [237.0, 316.22222222222223], [238.0, 123.93103448275868], [239.0, 176.86666666666667], [240.0, 111.35714285714286], [241.0, 264.43750000000006], [242.0, 252.08695652173913], [243.0, 239.90000000000003], [244.0, 126.2954545454545], [245.0, 138.03846153846152], [246.0, 100.92857142857143], [247.0, 158.64285714285717], [248.0, 125.56250000000004], [249.0, 192.5], [250.0, 99.77272727272727], [251.0, 75.88095238095235], [252.0, 152.6071428571429], [253.0, 241.33333333333337], [254.0, 89.29629629629628], [255.0, 137.0], [257.0, 89.6190476190476], [256.0, 119.40625000000001], [258.0, 99.125], [259.0, 84.77777777777777], [260.0, 154.21428571428572], [261.0, 204.3030303030303], [262.0, 114.65], [263.0, 171.8125], [264.0, 126.09677419354834], [270.0, 296.75], [271.0, 129.74509803921572], [268.0, 270.77551020408174], [269.0, 265.5], [265.0, 181.95238095238093], [266.0, 129.3076923076923], [267.0, 198.2777777777778], [273.0, 274.0625], [272.0, 169.48484848484847], [274.0, 165.25714285714287], [275.0, 195.38888888888889], [276.0, 88.3809523809524], [277.0, 130.75], [278.0, 266.1111111111111], [279.0, 106.88235294117646], [280.0, 357.8235294117647], [286.0, 191.63636363636363], [287.0, 147.6875], [284.0, 165.95238095238096], [285.0, 191.33333333333334], [281.0, 187.48275862068962], [282.0, 139.39024390243904], [283.0, 134.63636363636363], [289.0, 104.0952380952381], [288.0, 121.05555555555554], [290.0, 109.20833333333336], [291.0, 101.51612903225806], [292.0, 187.25], [293.0, 165.11764705882354], [294.0, 156.375], [295.0, 150.33333333333334], [296.0, 358.5], [302.0, 195.0714285714286], [303.0, 227.64999999999998], [300.0, 107.14473684210523], [301.0, 222.57894736842107], [297.0, 112.61538461538461], [298.0, 251.87499999999994], [299.0, 255.94117647058812], [305.0, 236.75862068965517], [304.0, 145.4492753623188], [306.0, 405.66666666666663], [307.0, 369.6666666666667], [308.0, 115.60000000000002], [309.0, 171.25925925925924], [310.0, 169.70370370370372], [311.0, 235.25000000000003], [312.0, 118.65909090909085], [318.0, 177.75757575757578], [319.0, 216.625], [316.0, 186.1764705882353], [317.0, 107.34375000000006], [313.0, 313.9], [314.0, 188.71428571428572], [315.0, 112.91891891891896], [321.0, 135.26315789473685], [320.0, 275.21428571428567], [323.0, 229.66666666666666], [322.0, 100.2], [332.0, 191.85714285714283], [333.0, 135.57142857142858], [334.0, 235.08333333333331], [335.0, 133.6341463414634], [324.0, 152.92000000000002], [325.0, 186.94117647058826], [326.0, 293.0], [327.0, 188.6060606060606], [328.0, 174.92682926829266], [329.0, 206.52380952380958], [330.0, 168.25], [331.0, 283.08333333333337], [337.0, 213.37499999999997], [336.0, 260.4545454545455], [338.0, 147.17391304347828], [339.0, 186.09090909090912], [340.0, 139.9102564102564], [341.0, 318.91666666666674], [342.0, 395.0], [343.0, 285.06451612903226], [344.0, 149.7407407407407], [350.0, 114.71111111111112], [351.0, 162.15151515151507], [348.0, 138.6], [349.0, 116.7297297297297], [345.0, 141.27272727272725], [346.0, 154.85000000000002], [347.0, 163.47058823529412], [353.0, 168.8108108108109], [352.0, 104.62765957446805], [354.0, 214.11538461538464], [355.0, 135.55263157894737], [356.0, 350.2], [357.0, 169.43181818181813], [358.0, 265.2941176470588], [359.0, 295.3636363636364], [360.0, 171.45161290322582], [366.0, 109.53846153846153], [367.0, 164.84444444444443], [364.0, 130.2051282051282], [365.0, 288.7692307692307], [361.0, 140.6379310344828], [362.0, 128.16417910447763], [363.0, 101.64], [369.0, 220.99999999999997], [368.0, 135.3131313131313], [370.0, 166.2162162162162], [371.0, 150.63414634146338], [372.0, 144.71698113207543], [373.0, 190.23809523809527], [374.0, 160.4642857142857], [375.0, 233.0], [376.0, 110.44897959183672], [382.0, 312.4375], [383.0, 277.55555555555554], [380.0, 244.91304347826087], [381.0, 183.30769230769226], [377.0, 117.75609756097563], [378.0, 186.22499999999994], [379.0, 158.7368421052632], [385.0, 190.79310344827587], [384.0, 234.0], [386.0, 325.5909090909091], [387.0, 123.1063829787234], [388.0, 150.5], [389.0, 331.6363636363636], [390.0, 129.62499999999994], [391.0, 123.59322033898304], [392.0, 232.55], [398.0, 257.0833333333333], [399.0, 132.69642857142856], [396.0, 196.96153846153845], [397.0, 252.08333333333334], [393.0, 173.6206896551724], [394.0, 123.18705035971223], [395.0, 172.5833333333334], [401.0, 136.76315789473688], [400.0, 150.54545454545453], [402.0, 123.08823529411761], [403.0, 240.88461538461536], [404.0, 280.0454545454546], [405.0, 191.63636363636365], [406.0, 225.38888888888889], [407.0, 278.23999999999995], [408.0, 163.50000000000003], [414.0, 157.48076923076917], [415.0, 228.64705882352942], [412.0, 152.38461538461544], [413.0, 147.37313432835825], [409.0, 247.26086956521738], [410.0, 180.16279069767444], [411.0, 211.47058823529414], [417.0, 144.66666666666663], [416.0, 131.9625], [418.0, 124.48148148148142], [419.0, 110.06060606060609], [420.0, 201.17777777777775], [421.0, 202.26666666666665], [422.0, 149.9333333333333], [423.0, 120.62857142857142], [424.0, 129.76923076923075], [430.0, 109.45333333333332], [431.0, 155.06451612903223], [428.0, 227.125], [429.0, 149.25000000000009], [425.0, 224.9], [426.0, 235.4375], [427.0, 124.60000000000004], [433.0, 151.92307692307693], [432.0, 142.46875000000003], [434.0, 139.93333333333337], [435.0, 196.00000000000003], [436.0, 491.94117647058823], [437.0, 222.58441558441564], [438.0, 467.7142857142858], [439.0, 217.08411214953261], [440.0, 402.3999999999999], [446.0, 139.30158730158735], [447.0, 207.8799999999999], [444.0, 152.29310344827587], [445.0, 157.03448275862073], [441.0, 128.71428571428572], [442.0, 385.99999999999994], [443.0, 267.83870967741944], [449.0, 110.66197183098588], [448.0, 237.10909090909098], [450.0, 120.20800000000004], [451.0, 423.77777777777777], [452.0, 180.65384615384613], [453.0, 136.56410256410257], [454.0, 190.38709677419354], [455.0, 109.57142857142861], [456.0, 313.8260869565218], [462.0, 140.13684210526313], [463.0, 123.42315369261483], [460.0, 249.42857142857142], [461.0, 319.0869565217391], [457.0, 119.8888888888889], [458.0, 59.67543859649122], [459.0, 153.26923076923072], [465.0, 145.86021505376343], [464.0, 195.15789473684214], [466.0, 377.3888888888889], [467.0, 162.3030303030303], [468.0, 127.89729729729724], [469.0, 147.05084745762713], [470.0, 129.74358974358984], [471.0, 141.95312499999997], [472.0, 154.86666666666667], [478.0, 127.38940809968851], [479.0, 146.90000000000006], [476.0, 192.3076923076923], [477.0, 308.8947368421052], [473.0, 133.768], [474.0, 134.69421487603307], [475.0, 177.6307692307692], [481.0, 204.69230769230774], [480.0, 144.43859649122805], [482.0, 140.06682027649762], [483.0, 128.954081632653], [484.0, 117.86363636363637], [485.0, 138.90449438202245], [486.0, 127.90330188679259], [487.0, 114.20629370629368], [488.0, 139.02521008403363], [494.0, 134.66025641025647], [495.0, 120.0506072874494], [492.0, 151.91025641025632], [493.0, 146.1770833333334], [489.0, 134.29591836734684], [490.0, 139.1713147410359], [491.0, 175.48837209302326], [497.0, 130.42811501597447], [498.0, 125.69879518072291], [499.0, 125.66195939982349], [500.0, 162.51199537234785], [496.0, 117.79523809523812], [1.0, 2.214285714285715]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[488.8378279999926, 160.28903200000312]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 1.596774193548387], [3.0, 1.6818181818181814], [4.0, 1.7586206896551722], [5.0, 1.4], [6.0, 1.75], [7.0, 1.8108108108108107], [8.0, 2.0], [9.0, 3.0], [10.0, 2.0], [11.0, 2.875], [12.0, 4.0], [13.0, 3.0], [14.0, 6.5], [15.0, 4.538461538461539], [16.0, 3.7], [17.0, 4.952380952380953], [18.0, 5.0], [19.0, 6.666666666666667], [20.0, 3.999999999999999], [21.0, 8.0], [22.0, 4.7777777777777795], [23.0, 5.122807017543859], [24.0, 5.517241379310345], [25.0, 6.555555555555555], [26.0, 5.849999999999999], [27.0, 6.1111111111111125], [28.0, 10.5], [29.0, 6.6000000000000005], [30.0, 8.933333333333334], [31.0, 12.5], [33.0, 7.657142857142859], [32.0, 7.37777777777778], [35.0, 23.0], [34.0, 9.083333333333334], [36.0, 35.86666666666667], [37.0, 10.6], [38.0, 31.526315789473692], [39.0, 34.34482758620689], [40.0, 27.214285714285715], [41.0, 24.647058823529417], [42.0, 47.22222222222222], [43.0, 33.5], [44.0, 39.57142857142857], [45.0, 22.333333333333332], [46.0, 13.45833333333333], [47.0, 14.954545454545453], [48.0, 31.888888888888896], [49.0, 36.849999999999994], [50.0, 25.719999999999995], [51.0, 22.33333333333333], [52.0, 66.8], [53.0, 21.88888888888889], [54.0, 25.928571428571427], [55.0, 28.25], [56.0, 25.599999999999998], [57.0, 21.692307692307697], [58.0, 21.999999999999996], [59.0, 20.136363636363633], [60.0, 21.120000000000005], [61.0, 30.129032258064516], [62.0, 63.0], [63.0, 41.857142857142854], [64.0, 38.1875], [65.0, 26.300000000000004], [66.0, 30.10638297872341], [67.0, 42.368421052631575], [68.0, 32.900000000000006], [69.0, 76.91666666666667], [70.0, 44.56249999999999], [71.0, 30.666666666666675], [72.0, 42.294117647058826], [73.0, 33.46153846153847], [74.0, 85.875], [75.0, 51.89473684210527], [76.0, 52.55555555555556], [77.0, 27.838709677419356], [78.0, 45.63636363636363], [79.0, 51.566666666666656], [80.0, 28.142857142857142], [81.0, 46.882352941176464], [82.0, 47.25000000000001], [83.0, 79.63636363636364], [84.0, 40.33333333333333], [85.0, 59.18181818181817], [86.0, 63.733333333333334], [87.0, 71.54545454545455], [88.0, 67.3888888888889], [89.0, 56.50000000000001], [90.0, 89.39999999999999], [91.0, 46.15], [92.0, 46.78571428571429], [93.0, 58.642857142857146], [94.0, 56.37837837837838], [95.0, 26.444444444444454], [96.0, 32.79310344827586], [97.0, 49.23076923076923], [98.0, 50.60869565217393], [99.0, 62.57142857142857], [100.0, 67.89285714285715], [101.0, 58.766666666666666], [103.0, 75.37499999999999], [104.0, 60.285714285714285], [105.0, 48.10526315789473], [106.0, 48.04761904761906], [107.0, 52.25], [108.0, 63.38888888888889], [109.0, 59.46666666666667], [110.0, 66.19999999999999], [111.0, 62.277777777777786], [112.0, 57.37500000000001], [113.0, 48.882352941176464], [114.0, 82.89999999999999], [115.0, 62.260869565217405], [116.0, 84.9090909090909], [117.0, 85.5], [118.0, 71.16666666666667], [119.0, 71.06666666666668], [120.0, 62.642857142857146], [121.0, 56.96153846153847], [122.0, 97.16666666666666], [123.0, 71.3157894736842], [124.0, 75.15384615384616], [125.0, 89.71428571428571], [126.0, 64.57692307692305], [127.0, 75.0], [128.0, 91.18750000000001], [129.0, 59.33333333333334], [130.0, 88.3157894736842], [131.0, 52.07142857142857], [132.0, 55.05555555555556], [133.0, 40.545454545454554], [135.0, 75.87500000000001], [134.0, 23.833333333333336], [136.0, 59.8], [137.0, 113.0], [138.0, 92.1935483870968], [139.0, 40.34374999999998], [140.0, 57.00000000000001], [141.0, 82.38461538461539], [142.0, 47.96825396825398], [143.0, 72.34615384615384], [144.0, 99.5], [145.0, 72.21428571428572], [146.0, 76.72222222222219], [147.0, 63.62500000000001], [148.0, 66.375], [149.0, 55.53571428571427], [150.0, 80.15384615384616], [151.0, 66.45454545454544], [152.0, 83.10526315789474], [153.0, 61.14285714285714], [154.0, 63.333333333333336], [155.0, 64.49999999999999], [156.0, 63.53846153846153], [157.0, 40.25000000000001], [158.0, 78.125], [159.0, 57.638888888888886], [160.0, 58.391304347826086], [161.0, 83.6], [162.0, 77.1578947368421], [163.0, 105.4761904761905], [164.0, 45.4375], [165.0, 71.28571428571429], [166.0, 121.53333333333333], [167.0, 88.94736842105264], [168.0, 95.71428571428571], [169.0, 265.55555555555554], [170.0, 75.61111111111113], [171.0, 144.83333333333331], [172.0, 72.11764705882354], [173.0, 111.44444444444446], [174.0, 88.6], [175.0, 76.03846153846152], [176.0, 114.10526315789473], [177.0, 155.64705882352945], [178.0, 109.0], [179.0, 66.25806451612901], [180.0, 61.625], [181.0, 91.08333333333334], [182.0, 71.41176470588236], [183.0, 77.3529411764706], [184.0, 58.69047619047619], [185.0, 116.92857142857142], [186.0, 113.5], [187.0, 93.07142857142858], [188.0, 78.68181818181817], [189.0, 70.14285714285712], [190.0, 110.52380952380949], [191.0, 128.72727272727272], [192.0, 65.68750000000001], [193.0, 116.42857142857142], [194.0, 149.26666666666668], [195.0, 117.00000000000001], [196.0, 96.20833333333334], [197.0, 74.8], [198.0, 64.5625], [199.0, 104.07692307692307], [200.0, 107.16666666666667], [201.0, 94.18749999999999], [202.0, 83.43478260869564], [203.0, 77.31818181818183], [204.0, 74.45000000000002], [205.0, 89.00000000000001], [206.0, 84.75757575757575], [207.0, 70.45454545454547], [208.0, 74.47619047619047], [209.0, 121.85714285714286], [210.0, 184.90000000000003], [211.0, 100.66666666666667], [212.0, 82.55], [213.0, 60.8], [214.0, 103.95833333333336], [215.0, 84.38709677419354], [216.0, 99.29411764705883], [217.0, 133.625], [218.0, 187.81250000000003], [219.0, 105.45454545454547], [220.0, 124.8], [221.0, 92.27272727272728], [222.0, 109.375], [223.0, 172.66666666666666], [225.0, 88.00000000000001], [226.0, 178.38461538461536], [227.0, 107.14285714285712], [228.0, 75.53571428571432], [229.0, 104.5625], [230.0, 66.08196721311478], [231.0, 136.15384615384616], [224.0, 74.0], [232.0, 107.70370370370374], [233.0, 67.275], [234.0, 124.49999999999999], [235.0, 100.25714285714288], [236.0, 139.0952380952381], [237.0, 188.38888888888889], [238.0, 103.51724137931035], [239.0, 99.33333333333333], [240.0, 96.53571428571426], [241.0, 98.96875000000001], [242.0, 191.3478260869565], [243.0, 188.50000000000003], [244.0, 99.29545454545458], [245.0, 94.65384615384613], [246.0, 161.35714285714286], [247.0, 273.50000000000006], [248.0, 83.62499999999999], [249.0, 150.83333333333334], [250.0, 107.27272727272727], [251.0, 75.47619047619047], [252.0, 134.74999999999994], [253.0, 169.44444444444446], [254.0, 92.18518518518518], [255.0, 129.15], [257.0, 94.85714285714286], [256.0, 120.50000000000006], [258.0, 125.125], [259.0, 174.55555555555554], [260.0, 147.92857142857142], [261.0, 151.36363636363635], [262.0, 160.54999999999995], [263.0, 225.25000000000003], [264.0, 126.4516129032258], [270.0, 139.625], [271.0, 82.45098039215688], [268.0, 123.12244897959181], [269.0, 74.0], [265.0, 179.52380952380952], [266.0, 99.42307692307692], [267.0, 116.9444444444444], [273.0, 137.9375], [272.0, 106.57575757575756], [274.0, 133.57142857142858], [275.0, 141.2222222222222], [276.0, 97.0952380952381], [277.0, 147.375], [278.0, 214.66666666666666], [279.0, 172.58823529411768], [280.0, 200.11764705882356], [286.0, 171.54545454545453], [287.0, 135.84375000000003], [284.0, 156.19047619047623], [285.0, 170.05555555555554], [281.0, 163.89655172413796], [282.0, 131.8780487804878], [283.0, 144.13636363636363], [289.0, 86.95238095238096], [288.0, 99.44444444444444], [290.0, 137.87499999999997], [291.0, 120.48387096774196], [292.0, 220.16666666666669], [293.0, 238.11764705882354], [294.0, 189.62499999999997], [295.0, 128.00000000000003], [296.0, 243.0], [302.0, 148.74999999999997], [303.0, 184.64999999999998], [300.0, 99.06578947368422], [301.0, 175.94736842105263], [297.0, 125.00000000000001], [298.0, 199.375], [299.0, 204.5294117647059], [305.0, 139.86206896551724], [304.0, 100.24637681159419], [306.0, 214.24999999999997], [307.0, 154.22222222222223], [308.0, 74.98333333333332], [309.0, 101.92592592592592], [310.0, 112.14814814814817], [311.0, 175.68749999999997], [312.0, 134.3181818181818], [318.0, 180.93939393939397], [319.0, 210.40624999999994], [316.0, 237.88235294117652], [317.0, 150.28125], [313.0, 211.50000000000003], [314.0, 218.0714285714286], [315.0, 179.0270270270271], [321.0, 125.26315789473685], [320.0, 310.3571428571429], [323.0, 152.77777777777777], [322.0, 59.6], [332.0, 189.47619047619048], [333.0, 144.0285714285714], [334.0, 200.08333333333334], [335.0, 148.8780487804878], [324.0, 120.60000000000002], [325.0, 233.26470588235296], [326.0, 336.7894736842105], [327.0, 181.5757575757576], [328.0, 176.21951219512195], [329.0, 215.71428571428572], [330.0, 180.29166666666669], [331.0, 295.25], [337.0, 211.5], [336.0, 281.09090909090907], [338.0, 161.82608695652178], [339.0, 163.9090909090909], [340.0, 125.66666666666664], [341.0, 186.83333333333334], [342.0, 331.125], [343.0, 166.74193548387106], [344.0, 158.8148148148148], [350.0, 118.0666666666667], [351.0, 149.1212121212121], [348.0, 126.56666666666666], [349.0, 106.18918918918921], [345.0, 114.57575757575758], [346.0, 130.25000000000003], [347.0, 160.11764705882354], [353.0, 165.32432432432432], [352.0, 119.35106382978717], [354.0, 167.42307692307696], [355.0, 137.0], [356.0, 261.1333333333334], [357.0, 120.74999999999999], [358.0, 263.47058823529414], [359.0, 257.4545454545454], [360.0, 99.99999999999999], [366.0, 117.84615384615387], [367.0, 166.28888888888886], [364.0, 136.92307692307693], [365.0, 206.69230769230768], [361.0, 93.63793103448276], [362.0, 105.88059701492543], [363.0, 112.77000000000001], [369.0, 224.0769230769231], [368.0, 108.18181818181822], [370.0, 178.918918918919], [371.0, 163.46341463414637], [372.0, 179.24528301886792], [373.0, 234.95238095238088], [374.0, 183.75000000000003], [375.0, 269.52631578947376], [376.0, 132.7755102040816], [382.0, 284.625], [383.0, 247.38888888888889], [380.0, 219.47826086956522], [381.0, 154.6538461538462], [377.0, 134.46341463414635], [378.0, 136.62500000000009], [379.0, 116.19298245614036], [385.0, 167.7586206896552], [384.0, 198.58333333333334], [386.0, 320.0909090909091], [387.0, 117.85106382978722], [388.0, 159.79999999999993], [389.0, 338.0], [390.0, 152.83333333333331], [391.0, 167.7118644067796], [392.0, 307.85], [398.0, 332.91666666666663], [399.0, 135.9642857142857], [396.0, 192.9615384615384], [397.0, 301.66666666666663], [393.0, 218.20689655172413], [394.0, 106.76978417266186], [395.0, 140.27777777777777], [401.0, 185.05263157894737], [400.0, 189.33333333333331], [402.0, 167.14705882352942], [403.0, 228.84615384615378], [404.0, 211.1363636363636], [405.0, 179.72727272727272], [406.0, 221.16666666666669], [407.0, 259.88], [408.0, 197.94444444444443], [414.0, 135.15384615384613], [415.0, 176.76470588235293], [412.0, 106.64835164835166], [413.0, 109.4179104477612], [409.0, 226.99999999999997], [410.0, 181.79069767441865], [411.0, 204.82352941176467], [417.0, 152.55555555555563], [416.0, 131.22500000000005], [418.0, 151.88888888888889], [419.0, 124.15151515151511], [420.0, 114.71111111111111], [421.0, 131.06666666666666], [422.0, 84.20000000000002], [423.0, 78.05714285714284], [424.0, 97.76923076923077], [430.0, 164.63999999999993], [431.0, 232.09677419354836], [428.0, 272.125], [429.0, 192.46428571428572], [425.0, 277.6499999999999], [426.0, 302.74999999999994], [427.0, 134.56470588235294], [433.0, 216.23076923076923], [432.0, 221.98437500000009], [434.0, 156.16666666666663], [435.0, 177.19148936170208], [436.0, 390.764705882353], [437.0, 149.16883116883122], [438.0, 332.60714285714283], [439.0, 162.67289719626157], [440.0, 238.9555555555556], [446.0, 109.95238095238096], [447.0, 170.06000000000003], [444.0, 151.49137931034488], [445.0, 98.7413793103448], [441.0, 145.5999999999999], [442.0, 356.6666666666667], [443.0, 257.61290322580646], [449.0, 117.11267605633806], [448.0, 202.0363636363637], [450.0, 90.63199999999996], [451.0, 294.2222222222222], [452.0, 132.5769230769231], [453.0, 49.55128205128205], [454.0, 98.29032258064518], [455.0, 40.138528138528166], [456.0, 159.43478260869566], [462.0, 146.06315789473683], [463.0, 126.12774451097799], [460.0, 225.17142857142852], [461.0, 292.13043478260863], [457.0, 239.72222222222223], [458.0, 41.16666666666668], [459.0, 173.61538461538458], [465.0, 133.3333333333334], [464.0, 251.47368421052636], [466.0, 260.49999999999994], [467.0, 144.84848484848484], [468.0, 132.11351351351348], [469.0, 160.08474576271186], [470.0, 127.66666666666663], [471.0, 127.71093749999996], [472.0, 152.68333333333334], [478.0, 128.38629283489107], [479.0, 114.53333333333336], [476.0, 147.51923076923075], [477.0, 208.10526315789474], [473.0, 141.10400000000007], [474.0, 121.31404958677687], [475.0, 132.3846153846154], [481.0, 175.19230769230768], [480.0, 106.59649122807018], [482.0, 134.93317972350235], [483.0, 127.48469387755105], [484.0, 139.4469696969696], [485.0, 134.8988764044944], [486.0, 130.11792452830178], [487.0, 129.53846153846152], [488.0, 164.44537815126054], [494.0, 121.32692307692314], [495.0, 123.7935222672064], [492.0, 149.5897435897435], [493.0, 161.671875], [489.0, 128.45153061224488], [490.0, 131.99203187251007], [491.0, 149.39534883720927], [497.0, 122.57188498402553], [498.0, 156.73493975903617], [499.0, 126.21800529567511], [500.0, 160.12227625020557], [496.0, 130.69047619047615], [1.0, 1.6428571428571428]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[488.8378279999925, 157.04410399999847]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 3.8064516129032255], [3.0, 3.681818181818182], [4.0, 3.724137931034482], [5.0, 3.8], [6.0, 4.0], [7.0, 4.000000000000001], [8.0, 4.0], [9.0, 5.0], [10.0, 5.0], [11.0, 5.625], [12.0, 7.25], [13.0, 6.0], [14.0, 10.625], [15.0, 9.461538461538462], [16.0, 7.533333333333333], [17.0, 9.428571428571432], [18.0, 13.0], [19.0, 13.333333333333334], [20.0, 9.166666666666666], [21.0, 14.0], [22.0, 9.63888888888889], [23.0, 10.491228070175438], [24.0, 11.137931034482758], [25.0, 14.444444444444445], [26.0, 11.7], [27.0, 12.222222222222221], [28.0, 20.25], [29.0, 13.049999999999999], [30.0, 15.999999999999998], [31.0, 27.0], [33.0, 16.314285714285713], [32.0, 15.8], [35.0, 38.714285714285715], [34.0, 16.083333333333336], [36.0, 65.13333333333334], [37.0, 23.8], [38.0, 64.94736842105264], [39.0, 79.89655172413794], [40.0, 68.07142857142857], [41.0, 46.1764705882353], [42.0, 80.44444444444444], [43.0, 54.5], [44.0, 72.85714285714286], [45.0, 51.916666666666664], [46.0, 32.75], [47.0, 30.68181818181818], [48.0, 118.66666666666667], [49.0, 93.30000000000001], [50.0, 49.199999999999996], [51.0, 37.55555555555556], [52.0, 103.89999999999999], [53.0, 47.5], [54.0, 67.85714285714285], [55.0, 108.75], [56.0, 61.633333333333326], [57.0, 48.307692307692314], [58.0, 60.18181818181818], [59.0, 50.81818181818181], [60.0, 85.16], [61.0, 87.22580645161294], [62.0, 92.9], [63.0, 99.57142857142857], [64.0, 99.00000000000001], [65.0, 62.349999999999994], [66.0, 60.4468085106383], [67.0, 79.3157894736842], [68.0, 69.45], [69.0, 143.08333333333331], [70.0, 79.625], [71.0, 144.25], [72.0, 117.23529411764706], [73.0, 114.9230769230769], [74.0, 172.125], [75.0, 121.57894736842101], [76.0, 163.0], [77.0, 63.74193548387096], [78.0, 94.66666666666664], [79.0, 124.80000000000001], [80.0, 81.0], [81.0, 97.47058823529412], [82.0, 84.89999999999999], [83.0, 179.54545454545453], [84.0, 104.66666666666667], [85.0, 121.00000000000004], [86.0, 157.0666666666667], [87.0, 152.72727272727272], [88.0, 124.88888888888891], [89.0, 142.625], [90.0, 144.5], [91.0, 100.39999999999999], [92.0, 91.42857142857143], [93.0, 106.64285714285714], [94.0, 144.7027027027027], [95.0, 56.72222222222223], [96.0, 60.9655172413793], [97.0, 109.5], [98.0, 188.65217391304347], [99.0, 121.92857142857143], [100.0, 123.64285714285715], [101.0, 149.59999999999997], [103.0, 150.375], [104.0, 177.42857142857144], [105.0, 91.39473684210529], [106.0, 112.5714285714286], [107.0, 101.25000000000001], [108.0, 143.83333333333334], [109.0, 167.53333333333333], [110.0, 190.85], [111.0, 138.7222222222222], [112.0, 117.68749999999999], [113.0, 107.17647058823529], [114.0, 233.0], [115.0, 129.04347826086956], [116.0, 206.0909090909091], [117.0, 162.25000000000003], [118.0, 157.16666666666666], [119.0, 206.2], [120.0, 212.57142857142856], [121.0, 119.8076923076923], [122.0, 226.58333333333334], [123.0, 156.21052631578942], [124.0, 132.23076923076923], [125.0, 158.57142857142858], [126.0, 117.15384615384612], [127.0, 176.8181818181818], [128.0, 161.0], [129.0, 143.77777777777777], [130.0, 189.1052631578947], [131.0, 133.78571428571428], [132.0, 151.94444444444446], [133.0, 99.84848484848486], [135.0, 171.875], [134.0, 60.833333333333336], [136.0, 141.8], [137.0, 223.66666666666666], [138.0, 178.06451612903226], [139.0, 80.81250000000001], [140.0, 100.39999999999999], [141.0, 162.23076923076923], [142.0, 101.07936507936506], [143.0, 155.11538461538456], [144.0, 201.5], [145.0, 138.85714285714283], [146.0, 164.11111111111111], [147.0, 123.37499999999999], [148.0, 149.91666666666666], [149.0, 115.32142857142858], [150.0, 171.69230769230768], [151.0, 140.72727272727272], [152.0, 204.68421052631578], [153.0, 154.57142857142853], [154.0, 150.0], [155.0, 160.5], [156.0, 159.15384615384613], [157.0, 115.75], [158.0, 203.125], [159.0, 137.33333333333334], [160.0, 149.99999999999997], [161.0, 255.2], [162.0, 461.5263157894737], [163.0, 879.6190476190477], [164.0, 232.25000000000003], [165.0, 155.57142857142856], [166.0, 203.40000000000003], [167.0, 190.47368421052636], [168.0, 221.89285714285703], [169.0, 347.1111111111111], [170.0, 141.83333333333337], [171.0, 245.8333333333333], [172.0, 292.17647058823536], [173.0, 238.22222222222223], [174.0, 174.33333333333334], [175.0, 166.69230769230768], [176.0, 321.2631578947368], [177.0, 312.29411764705884], [178.0, 268.50000000000006], [179.0, 149.64516129032256], [180.0, 152.0], [181.0, 378.0833333333333], [182.0, 245.52941176470588], [183.0, 248.35294117647064], [184.0, 136.83333333333334], [185.0, 247.5], [186.0, 269.3333333333333], [187.0, 227.49999999999997], [188.0, 155.13636363636363], [189.0, 149.92857142857144], [190.0, 208.80952380952377], [191.0, 244.36363636363637], [192.0, 134.09375], [193.0, 246.28571428571428], [194.0, 272.99999999999994], [195.0, 256.84615384615387], [196.0, 201.95833333333331], [197.0, 207.6], [198.0, 148.625], [199.0, 242.84615384615387], [200.0, 208.66666666666666], [201.0, 195.18750000000003], [202.0, 248.21739130434787], [203.0, 246.50000000000003], [204.0, 243.45], [205.0, 549.6666666666667], [206.0, 351.9090909090909], [207.0, 400.1818181818181], [208.0, 176.33333333333334], [209.0, 208.14285714285714], [210.0, 303.8], [211.0, 253.47619047619048], [212.0, 180.09999999999994], [213.0, 124.19999999999999], [214.0, 181.08333333333334], [215.0, 170.80645161290323], [216.0, 244.17647058823533], [217.0, 349.2916666666666], [218.0, 520.8125], [219.0, 240.95454545454544], [220.0, 299.3999999999999], [221.0, 164.77272727272728], [222.0, 249.125], [223.0, 591.7777777777778], [225.0, 172.04000000000005], [226.0, 370.9230769230769], [227.0, 261.0], [228.0, 160.49999999999997], [229.0, 270.93750000000006], [230.0, 178.57377049180323], [231.0, 310.53846153846155], [224.0, 113.0], [232.0, 229.40740740740748], [233.0, 138.65], [234.0, 426.7777777777777], [235.0, 257.3714285714285], [236.0, 390.3333333333333], [237.0, 504.7222222222222], [238.0, 227.48275862068965], [239.0, 276.20000000000005], [240.0, 207.92857142857144], [241.0, 363.40625], [242.0, 443.4347826086957], [243.0, 428.40000000000003], [244.0, 225.61363636363637], [245.0, 232.73076923076925], [246.0, 262.2857142857142], [247.0, 432.14285714285717], [248.0, 209.21874999999991], [249.0, 343.3333333333333], [250.0, 207.0454545454545], [251.0, 151.35714285714286], [252.0, 287.3928571428571], [253.0, 410.77777777777777], [254.0, 181.4814814814814], [255.0, 266.15000000000003], [257.0, 184.47619047619045], [256.0, 239.93749999999991], [258.0, 224.49999999999997], [259.0, 259.33333333333326], [260.0, 302.2142857142857], [261.0, 355.78787878787887], [262.0, 275.2], [263.0, 397.12499999999994], [264.0, 252.5483870967742], [270.0, 436.375], [271.0, 212.25490196078425], [268.0, 393.91836734693885], [269.0, 339.5], [265.0, 361.5238095238095], [266.0, 228.73076923076923], [267.0, 315.27777777777777], [273.0, 412.125], [272.0, 276.090909090909], [274.0, 298.8285714285715], [275.0, 336.61111111111114], [276.0, 185.49999999999997], [277.0, 278.18750000000006], [278.0, 480.77777777777777], [279.0, 279.47058823529414], [280.0, 557.9411764705883], [286.0, 363.1818181818182], [287.0, 283.5312499999999], [284.0, 322.1428571428571], [285.0, 361.38888888888886], [281.0, 351.37931034482756], [282.0, 271.39024390243895], [283.0, 278.77272727272725], [289.0, 191.0952380952381], [288.0, 220.5], [290.0, 247.08333333333326], [291.0, 222.03225806451616], [292.0, 407.4166666666667], [293.0, 403.23529411764713], [294.0, 346.125], [295.0, 278.3333333333333], [296.0, 601.5], [302.0, 343.8571428571428], [303.0, 412.2999999999999], [300.0, 206.21052631578937], [301.0, 398.52631578947376], [297.0, 237.69230769230768], [298.0, 451.25], [299.0, 460.58823529411757], [305.0, 376.655172413793], [304.0, 245.69565217391312], [306.0, 620.0], [307.0, 523.8888888888889], [308.0, 190.63333333333333], [309.0, 273.2962962962963], [310.0, 281.85185185185185], [311.0, 411.0000000000001], [312.0, 253.0], [318.0, 358.7272727272728], [319.0, 427.0625], [316.0, 424.1176470588236], [317.0, 257.65625], [313.0, 525.4], [314.0, 406.7857142857142], [315.0, 291.97297297297297], [321.0, 260.5789473684211], [320.0, 585.5714285714287], [323.0, 382.44444444444446], [322.0, 159.8], [332.0, 381.33333333333326], [333.0, 279.6], [334.0, 435.16666666666674], [335.0, 282.51219512195115], [324.0, 273.5200000000001], [325.0, 420.2058823529411], [326.0, 629.7894736842105], [327.0, 370.1818181818181], [328.0, 351.1951219512194], [329.0, 422.2380952380952], [330.0, 348.58333333333337], [331.0, 578.3333333333333], [337.0, 424.87499999999994], [336.0, 541.6363636363636], [338.0, 308.99999999999994], [339.0, 350.0], [340.0, 265.6025641025642], [341.0, 505.91666666666663], [342.0, 726.2499999999999], [343.0, 451.87096774193554], [344.0, 308.5555555555556], [350.0, 232.7777777777777], [351.0, 311.2727272727273], [348.0, 265.16666666666674], [349.0, 222.94594594594588], [345.0, 255.87878787878793], [346.0, 285.09999999999997], [347.0, 323.64705882352945], [353.0, 334.1351351351351], [352.0, 224.0000000000001], [354.0, 381.61538461538464], [355.0, 272.55263157894734], [356.0, 611.4000000000001], [357.0, 290.2045454545454], [358.0, 528.8235294117646], [359.0, 552.8181818181819], [360.0, 271.5161290322581], [366.0, 227.3974358974359], [367.0, 331.20000000000016], [364.0, 267.1794871794872], [365.0, 495.4615384615385], [361.0, 234.2931034482758], [362.0, 234.044776119403], [363.0, 214.44000000000005], [369.0, 445.07692307692315], [368.0, 243.51515151515147], [370.0, 345.2702702702702], [371.0, 314.0975609756098], [372.0, 323.9622641509434], [373.0, 425.19047619047626], [374.0, 344.2857142857143], [375.0, 502.5263157894736], [376.0, 243.2244897959184], [382.0, 597.0625000000001], [383.0, 525.0], [380.0, 464.391304347826], [381.0, 337.96153846153845], [377.0, 252.23170731707327], [378.0, 322.8499999999999], [379.0, 274.94736842105254], [385.0, 358.5862068965517], [384.0, 432.6666666666667], [386.0, 645.7272727272727], [387.0, 240.9787234042553], [388.0, 310.29999999999995], [389.0, 669.6363636363636], [390.0, 282.4791666666666], [391.0, 291.3220338983051], [392.0, 540.4000000000001], [398.0, 590.0833333333334], [399.0, 268.6964285714286], [396.0, 389.96153846153845], [397.0, 554.0], [393.0, 391.86206896551727], [394.0, 229.98561151079136], [395.0, 312.9722222222222], [401.0, 321.8421052631578], [400.0, 339.8787878787878], [402.0, 290.2941176470587], [403.0, 469.73076923076917], [404.0, 491.1818181818181], [405.0, 371.3636363636364], [406.0, 446.5555555555555], [407.0, 538.1200000000001], [408.0, 361.44444444444446], [414.0, 292.63461538461536], [415.0, 405.52941176470586], [412.0, 259.07692307692315], [413.0, 256.82089552238807], [409.0, 474.2608695652174], [410.0, 361.95348837209303], [411.0, 416.29411764705884], [417.0, 297.22222222222206], [416.0, 263.23749999999995], [418.0, 276.4074074074074], [419.0, 234.25252525252526], [420.0, 315.91111111111115], [421.0, 333.33333333333337], [422.0, 234.1333333333333], [423.0, 198.68571428571428], [424.0, 227.53846153846152], [430.0, 274.09333333333336], [431.0, 387.19354838709677], [428.0, 499.25000000000006], [429.0, 341.7142857142857], [425.0, 502.6], [426.0, 538.1875], [427.0, 259.16470588235285], [433.0, 368.1538461538461], [432.0, 364.50000000000006], [434.0, 296.16666666666663], [435.0, 373.23404255319144], [436.0, 882.7058823529412], [437.0, 371.79220779220793], [438.0, 800.3571428571425], [439.0, 379.7570093457946], [440.0, 641.3555555555556], [446.0, 249.3492063492064], [447.0, 377.98000000000013], [444.0, 303.8017241379311], [445.0, 255.79310344827599], [441.0, 274.3333333333333], [442.0, 742.6666666666666], [443.0, 525.4838709677421], [449.0, 227.79577464788736], [448.0, 439.1636363636362], [450.0, 210.864], [451.0, 718.0555555555555], [452.0, 313.2307692307693], [453.0, 190.06410256410254], [454.0, 288.6774193548386], [455.0, 149.7705627705627], [456.0, 473.2608695652173], [462.0, 374.7894736842105], [463.0, 249.57285429141717], [460.0, 547.2000000000002], [461.0, 644.5217391304349], [457.0, 359.61111111111114], [458.0, 103.76315789473688], [459.0, 363.2307692307693], [465.0, 279.21505376344095], [464.0, 446.6315789473684], [466.0, 637.9444444444443], [467.0, 307.1515151515152], [468.0, 260.03243243243253], [469.0, 307.15254237288144], [470.0, 257.4615384615385], [471.0, 269.671875], [472.0, 307.58333333333314], [478.0, 255.79127725856725], [479.0, 261.4555555555555], [476.0, 339.84615384615387], [477.0, 517.0], [473.0, 274.912], [474.0, 256.02892561983464], [475.0, 310.0153846153845], [481.0, 379.8846153846155], [480.0, 251.07894736842107], [482.0, 274.5737327188942], [483.0, 256.36224489795904], [484.0, 257.3257575757577], [485.0, 273.83146067415737], [486.0, 258.0400943396222], [487.0, 243.7587412587412], [488.0, 303.4789915966387], [494.0, 256.00000000000006], [495.0, 243.8603238866396], [492.0, 301.5], [493.0, 307.88541666666663], [489.0, 262.7678571428575], [490.0, 271.1792828685261], [491.0, 324.90697674418624], [497.0, 253.04153354632587], [498.0, 282.44578313253015], [499.0, 251.90467784642556], [500.0, 322.65901479631566], [496.0, 248.5142857142857], [1.0, 3.9285714285714284]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[488.83782799999256, 317.4106559999976]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 165960.66666666666, "minX": 1.64821266E12, "maxY": 1.4305042766666668E7, "series": [{"data": [[1.64821284E12, 4906088.133333334], [1.64821266E12, 2095580.6], [1.64821278E12, 1.4305042766666668E7], [1.64821272E12, 1.12547885E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64821284E12, 386038.4], [1.64821266E12, 165960.66666666666], [1.64821278E12, 1127467.7333333334], [1.64821272E12, 887199.8666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64821284E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 111.2976568970591, "minX": 1.64821266E12, "maxY": 673.9653136072634, "series": [{"data": [[1.64821284E12, 112.41929917706427], [1.64821266E12, 354.1485050040402], [1.64821278E12, 136.77951780901793], [1.64821272E12, 174.94842091863325]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.64821284E12, 111.2976568970591], [1.64821266E12, 319.28459657701666], [1.64821278E12, 136.2883389200614], [1.64821272E12, 172.50964397699997]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.64821284E12, 224.18739049641567], [1.64821266E12, 673.9653136072634], [1.64821278E12, 273.1231426178136], [1.64821272E12, 347.96245848329204]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64821284E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 111.29712255203214, "minX": 1.64821266E12, "maxY": 354.14048610679384, "series": [{"data": [[1.64821284E12, 112.40860100876026], [1.64821266E12, 354.14048610679384], [1.64821278E12, 136.77318996285373], [1.64821272E12, 174.9422527224527]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.64821284E12, 111.29712255203214], [1.64821266E12, 319.2838630806864], [1.64821278E12, 136.28802011221865], [1.64821272E12, 172.50926215187383]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.64821284E12, 111.39461109636238], [1.64821266E12, 319.78367626033634], [1.64821278E12, 136.31874135042688], [1.64821272E12, 172.9892143361368]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64821284E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64821266E12, "maxY": 0.14869149002299853, "series": [{"data": [[1.64821284E12, 0.0], [1.64821266E12, 0.0], [1.64821278E12, 0.0], [1.64821272E12, 0.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.64821284E12, 0.03043094926393962], [1.64821266E12, 0.14651589242053664], [1.64821278E12, 0.04328499599212969], [1.64821272E12, 0.04636282643155522]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.64821284E12, 0.030289354924342787], [1.64821266E12, 0.14869149002299853], [1.64821278E12, 0.0435119090975311], [1.64821272E12, 0.0460936686301515]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64821284E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.64821266E12, "maxY": 1146.0, "series": [{"data": [[1.64821284E12, 500.0], [1.64821266E12, 1146.0], [1.64821278E12, 500.0], [1.64821272E12, 982.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64821284E12, 2.0], [1.64821266E12, 38.00899523139], [1.64821278E12, 115.0], [1.64821272E12, 37.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64821284E12, 2.0], [1.64821266E12, 41.0], [1.64821278E12, 115.0], [1.64821272E12, 61.009901907444004]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64821284E12, 2.0], [1.64821266E12, 41.0], [1.64821278E12, 115.0], [1.64821272E12, 51.00949761569498]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64821284E12, 1.0], [1.64821266E12, 2.0], [1.64821278E12, 2.0], [1.64821272E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64821284E12, 79.0], [1.64821266E12, 344.0], [1.64821278E12, 128.0], [1.64821272E12, 150.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64821284E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 12.0, "minX": 371.0, "maxY": 884.0, "series": [{"data": [[371.0, 48.0], [1272.0, 86.0], [1420.0, 118.0], [1433.0, 267.0], [1512.0, 150.0], [1498.0, 220.5], [1542.0, 307.0], [1571.0, 343.0], [1637.0, 370.0], [1726.0, 457.0], [1764.0, 341.0], [1758.0, 411.0], [1789.0, 428.0], [1749.0, 419.0], [1784.0, 375.0], [1851.0, 429.5], [1962.0, 337.0], [1959.0, 377.0], [1945.0, 416.0], [2046.0, 395.0], [2060.0, 385.0], [2222.0, 353.0], [2282.0, 307.0], [2211.0, 333.0], [2300.0, 336.0], [2378.0, 312.0], [2492.0, 305.0], [2541.0, 300.5], [2529.0, 290.0], [2835.0, 269.0], [2853.0, 258.0], [2868.0, 258.0], [3189.0, 248.0], [3144.0, 244.0], [3212.0, 245.0], [3446.0, 245.0], [3411.0, 232.0], [3419.0, 230.0], [3494.0, 237.0], [3691.0, 220.0], [3988.0, 200.0], [4070.0, 12.0], [4239.0, 182.0], [4314.0, 178.0], [4347.0, 177.0], [4378.0, 177.0], [4490.0, 191.0], [4588.0, 168.0], [4480.0, 177.0], [4511.0, 170.0], [4517.0, 168.0], [4542.0, 168.0], [4373.0, 174.0], [4374.0, 169.0], [4367.0, 175.0], [4359.0, 191.0], [4469.0, 180.0], [4358.0, 184.0], [4405.0, 179.0], [4433.0, 175.0], [4443.0, 173.0], [4393.0, 178.0], [4381.0, 172.0], [4402.0, 175.0], [4399.0, 173.0], [4623.0, 163.0], [4633.0, 165.0], [4731.0, 161.0], [4649.0, 163.0], [4726.0, 162.0], [4761.0, 162.0], [4729.0, 163.0], [4769.0, 160.0], [4815.0, 159.0], [4927.0, 156.0], [4903.0, 154.0], [4915.0, 153.0], [4940.0, 153.0], [4973.0, 154.0], [4964.0, 152.0], [5115.0, 155.0], [5092.0, 150.0], [4993.0, 154.0], [5024.0, 153.0], [5026.0, 150.0], [5179.0, 154.0], [5166.0, 154.0], [5141.0, 151.0], [5230.0, 151.0], [5223.0, 118.0], [5137.0, 141.0], [5156.0, 153.0], [5147.0, 154.0], [5314.0, 149.0], [5328.0, 149.0], [5347.0, 151.0], [5331.0, 149.0], [5283.0, 152.0], [5295.0, 150.0], [5280.0, 149.0], [5350.0, 150.0], [5277.0, 149.0], [5255.0, 152.0], [5259.0, 137.0], [5372.0, 147.0], [5355.0, 150.0], [5357.0, 147.0], [5399.0, 145.0], [5452.0, 151.0], [5450.0, 139.0], [5422.0, 145.0], [5458.0, 142.0], [5460.0, 139.0], [5475.0, 138.0], [5406.0, 141.0], [5434.0, 141.0], [5438.0, 141.0], [5548.0, 137.0], [5606.0, 135.0], [5607.0, 135.0], [5553.0, 137.0], [5568.0, 137.0], [5555.0, 136.0], [5562.0, 137.0], [5393.0, 141.0], [5499.0, 139.0], [5503.0, 138.0], [5478.0, 138.0], [5454.0, 140.0], [5664.0, 134.0], [5766.0, 139.0], [5771.0, 141.0], [5784.0, 131.0], [5778.0, 138.0], [5803.0, 131.0], [5768.0, 132.0], [5749.0, 136.0], [5730.0, 132.0], [5694.0, 134.0], [5883.0, 128.0], [5872.0, 136.0], [5830.0, 134.0], [5870.0, 132.0], [5667.0, 134.0], [5725.0, 134.0], [5638.0, 135.0], [5716.0, 133.0], [5905.0, 128.0], [5923.0, 127.0], [6015.0, 126.0], [5962.0, 133.0], [6063.0, 133.0], [6028.0, 131.0], [6139.0, 127.0], [6136.0, 125.0], [6264.0, 130.0], [6207.0, 131.0], [6199.0, 130.0], [6214.0, 127.0], [6269.0, 122.0], [6297.0, 102.0], [6333.0, 67.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1272.0, 546.0], [1420.0, 570.5], [1433.0, 614.5], [1512.0, 862.5], [1498.0, 671.5], [1542.0, 637.0], [1571.0, 684.0], [1637.0, 716.0], [1726.0, 884.0], [1764.0, 670.0], [1758.0, 830.5], [1789.0, 868.0], [1749.0, 840.0], [1784.0, 764.0], [1851.0, 832.0], [1962.0, 678.0], [1959.0, 831.0], [1945.0, 768.0], [2046.0, 726.0], [2060.0, 773.0], [2222.0, 739.0], [2282.0, 605.0], [2211.0, 678.0], [2300.0, 659.0], [2378.0, 639.0], [2492.0, 624.0], [2541.0, 592.0], [2529.0, 582.0], [2835.0, 551.0], [2853.0, 529.0], [2868.0, 520.0], [3189.0, 531.5], [3144.0, 557.0], [3212.0, 537.0], [3446.0, 575.0], [3411.0, 565.0], [3419.0, 602.0], [3494.0, 592.5], [3691.0, 567.0], [3988.0, 535.0], [4239.0, 539.0], [4314.0, 528.5], [4347.0, 522.0], [4378.0, 589.0], [4490.0, 530.0], [4588.0, 642.0], [4480.0, 665.0], [4511.0, 669.0], [4517.0, 662.0], [4542.0, 657.0], [4373.0, 510.0], [4374.0, 642.5], [4367.0, 509.0], [4359.0, 559.0], [4469.0, 595.0], [4358.0, 515.5], [4405.0, 524.0], [4433.0, 668.5], [4443.0, 537.0], [4393.0, 672.0], [4381.0, 590.5], [4402.0, 511.0], [4399.0, 677.0], [4623.0, 642.0], [4633.0, 641.0], [4731.0, 636.0], [4649.0, 633.0], [4726.0, 642.0], [4761.0, 626.0], [4729.0, 628.0], [4769.0, 628.5], [4815.0, 620.0], [4927.0, 597.0], [4903.0, 603.0], [4915.0, 604.0], [4940.0, 605.0], [4973.0, 604.0], [4964.0, 595.5], [5115.0, 596.5], [5092.0, 587.0], [4993.0, 599.0], [5024.0, 594.0], [5026.0, 584.0], [5179.0, 578.0], [5166.0, 529.0], [5141.0, 577.0], [5230.0, 563.0], [5223.0, 519.0], [5137.0, 546.0], [5156.0, 572.0], [5147.0, 581.0], [5314.0, 563.0], [5328.0, 559.0], [5347.0, 562.0], [5331.0, 557.0], [5283.0, 563.0], [5295.0, 566.0], [5280.0, 561.5], [5350.0, 560.0], [5277.0, 558.0], [5255.0, 560.0], [5259.0, 529.0], [5372.0, 553.0], [5355.0, 562.0], [5357.0, 556.0], [5399.0, 549.0], [5452.0, 537.0], [5450.0, 545.0], [5422.0, 548.0], [5458.0, 523.0], [5460.0, 547.0], [5475.0, 538.0], [5406.0, 551.0], [5434.0, 550.0], [5438.0, 551.0], [5548.0, 538.0], [5606.0, 532.0], [5607.0, 528.0], [5553.0, 537.0], [5568.0, 534.0], [5555.0, 541.0], [5562.0, 535.0], [5393.0, 551.5], [5499.0, 539.0], [5503.0, 537.0], [5478.0, 540.0], [5454.0, 545.0], [5664.0, 529.0], [5766.0, 541.0], [5771.0, 508.0], [5784.0, 513.0], [5778.0, 511.0], [5803.0, 513.0], [5768.0, 520.5], [5749.0, 551.0], [5730.0, 520.0], [5694.0, 520.0], [5883.0, 507.0], [5872.0, 509.0], [5830.0, 510.5], [5870.0, 505.0], [5667.0, 523.0], [5725.0, 522.0], [5638.0, 525.0], [5716.0, 520.0], [5905.0, 508.0], [6015.0, 502.0], [5962.0, 505.0], [6139.0, 511.0], [6264.0, 587.0], [6199.0, 507.0], [6214.0, 510.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 6333.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 10.0, "minX": 371.0, "maxY": 456.0, "series": [{"data": [[371.0, 35.0], [1272.0, 59.0], [1420.0, 94.0], [1433.0, 238.0], [1512.0, 110.5], [1498.0, 168.0], [1542.0, 295.0], [1571.0, 342.0], [1637.0, 370.0], [1726.0, 456.0], [1764.0, 339.0], [1758.0, 409.0], [1789.0, 428.0], [1749.0, 418.0], [1784.0, 372.0], [1851.0, 423.0], [1962.0, 335.0], [1959.0, 376.0], [1945.0, 412.0], [2046.0, 394.0], [2060.0, 369.0], [2222.0, 353.0], [2282.0, 278.0], [2211.0, 332.0], [2300.0, 336.0], [2378.0, 312.0], [2492.0, 305.0], [2541.0, 300.5], [2529.0, 289.0], [2835.0, 269.0], [2853.0, 258.0], [2868.0, 257.0], [3189.0, 236.0], [3144.0, 228.0], [3212.0, 230.0], [3446.0, 214.0], [3411.0, 215.0], [3419.0, 216.0], [3494.0, 203.0], [3691.0, 208.0], [3988.0, 194.0], [4070.0, 10.0], [4239.0, 171.0], [4314.0, 174.0], [4347.0, 169.0], [4378.0, 172.0], [4490.0, 172.0], [4588.0, 162.0], [4480.0, 165.0], [4511.0, 166.0], [4517.0, 165.0], [4542.0, 164.0], [4373.0, 168.0], [4374.0, 160.0], [4367.0, 170.0], [4359.0, 172.0], [4469.0, 170.0], [4358.0, 171.0], [4405.0, 169.0], [4433.0, 168.0], [4443.0, 169.0], [4393.0, 169.0], [4381.0, 168.0], [4402.0, 171.0], [4399.0, 169.0], [4623.0, 160.0], [4633.0, 161.0], [4731.0, 158.0], [4649.0, 160.0], [4726.0, 157.0], [4761.0, 157.0], [4729.0, 159.0], [4769.0, 156.0], [4815.0, 155.0], [4927.0, 149.0], [4903.0, 151.0], [4915.0, 151.0], [4940.0, 151.0], [4973.0, 150.0], [4964.0, 149.0], [5115.0, 147.0], [5092.0, 146.0], [4993.0, 150.0], [5024.0, 150.0], [5026.0, 147.0], [5179.0, 145.0], [5166.0, 139.0], [5141.0, 147.0], [5230.0, 142.0], [5223.0, 108.0], [5137.0, 137.0], [5156.0, 145.0], [5147.0, 144.0], [5314.0, 140.0], [5328.0, 142.0], [5347.0, 140.0], [5331.0, 140.0], [5283.0, 141.0], [5295.0, 139.0], [5280.0, 142.0], [5350.0, 141.0], [5277.0, 139.0], [5255.0, 140.0], [5259.0, 133.0], [5372.0, 139.0], [5355.0, 139.0], [5357.0, 137.0], [5399.0, 137.0], [5452.0, 138.0], [5450.0, 136.0], [5422.0, 137.0], [5458.0, 134.0], [5460.0, 136.0], [5475.0, 135.0], [5406.0, 138.0], [5434.0, 137.0], [5438.0, 138.0], [5548.0, 134.0], [5606.0, 132.0], [5607.0, 133.0], [5553.0, 135.0], [5568.0, 135.0], [5555.0, 134.0], [5562.0, 134.0], [5393.0, 137.0], [5499.0, 135.0], [5503.0, 134.0], [5478.0, 135.0], [5454.0, 136.0], [5664.0, 131.0], [5766.0, 134.0], [5771.0, 127.0], [5784.0, 128.0], [5778.0, 128.0], [5803.0, 127.0], [5768.0, 129.0], [5749.0, 133.0], [5730.0, 129.0], [5694.0, 130.0], [5883.0, 126.0], [5872.0, 127.0], [5830.0, 127.0], [5870.0, 126.0], [5667.0, 131.0], [5725.0, 129.0], [5638.0, 131.0], [5716.0, 130.0], [5905.0, 125.0], [5923.0, 124.0], [6015.0, 124.0], [5962.0, 124.0], [6063.0, 124.0], [6028.0, 123.0], [6139.0, 120.0], [6136.0, 116.0], [6264.0, 121.0], [6207.0, 119.0], [6199.0, 125.0], [6214.0, 119.0], [6269.0, 100.0], [6297.0, 87.0], [6333.0, 54.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1272.0, 319.5], [1420.0, 281.5], [1433.0, 258.0], [1512.0, 91.0], [1498.0, 145.0], [1542.0, 292.0], [1571.0, 332.0], [1637.0, 355.5], [1726.0, 426.0], [1764.0, 335.0], [1758.0, 342.0], [1789.0, 414.0], [1749.0, 421.0], [1784.0, 366.0], [1851.0, 413.0], [1962.0, 335.0], [1959.0, 393.0], [1945.0, 397.5], [2046.0, 430.0], [2060.0, 375.0], [2222.0, 363.5], [2282.0, 289.0], [2211.0, 341.0], [2300.0, 325.0], [2378.0, 327.0], [2492.0, 313.0], [2541.0, 291.0], [2529.0, 293.0], [2835.0, 269.0], [2853.0, 268.0], [2868.0, 265.0], [3189.0, 263.0], [3144.0, 310.0], [3212.0, 276.0], [3446.0, 252.0], [3411.0, 350.0], [3419.0, 348.0], [3494.0, 229.5], [3691.0, 301.0], [3988.0, 198.0], [4239.0, 182.0], [4314.0, 344.0], [4347.0, 337.0], [4378.0, 330.0], [4490.0, 189.0], [4588.0, 317.0], [4480.0, 342.5], [4511.0, 335.0], [4517.0, 332.0], [4542.0, 325.0], [4373.0, 232.0], [4374.0, 326.5], [4367.0, 340.0], [4359.0, 234.5], [4469.0, 331.0], [4358.0, 317.5], [4405.0, 340.0], [4433.0, 333.0], [4443.0, 334.0], [4393.0, 338.5], [4381.0, 325.0], [4402.0, 338.0], [4399.0, 337.5], [4623.0, 324.0], [4633.0, 321.0], [4731.0, 319.0], [4649.0, 318.0], [4726.0, 319.0], [4761.0, 315.0], [4729.0, 317.5], [4769.0, 316.0], [4815.0, 310.0], [4927.0, 298.0], [4903.0, 300.0], [4915.0, 302.0], [4940.0, 302.0], [4973.0, 302.5], [4964.0, 298.5], [5115.0, 296.5], [5092.0, 292.0], [4993.0, 298.0], [5024.0, 296.0], [5026.0, 296.0], [5179.0, 288.0], [5166.0, 209.0], [5141.0, 289.5], [5230.0, 282.0], [5223.0, 122.0], [5137.0, 271.0], [5156.0, 289.0], [5147.0, 290.0], [5314.0, 282.0], [5328.0, 280.0], [5347.0, 278.5], [5331.0, 275.0], [5283.0, 280.0], [5295.0, 282.0], [5280.0, 277.5], [5350.0, 280.0], [5277.0, 278.0], [5255.0, 280.0], [5259.0, 264.0], [5372.0, 278.5], [5355.0, 281.0], [5357.0, 279.5], [5399.0, 274.0], [5452.0, 287.0], [5450.0, 273.0], [5422.0, 276.0], [5458.0, 245.0], [5460.0, 274.0], [5475.0, 271.0], [5406.0, 275.0], [5434.0, 273.0], [5438.0, 277.0], [5548.0, 268.5], [5606.0, 265.0], [5607.0, 265.0], [5553.0, 267.0], [5568.0, 267.0], [5555.0, 268.0], [5562.0, 267.5], [5393.0, 275.0], [5499.0, 269.0], [5503.0, 266.5], [5478.0, 272.0], [5454.0, 270.5], [5664.0, 265.0], [5766.0, 269.0], [5771.0, 212.5], [5784.0, 252.0], [5778.0, 258.0], [5803.0, 262.0], [5768.0, 259.5], [5749.0, 305.0], [5730.0, 263.0], [5694.0, 259.0], [5883.0, 253.5], [5872.0, 254.0], [5830.0, 257.0], [5870.0, 253.0], [5667.0, 262.0], [5725.0, 262.0], [5638.0, 261.0], [5716.0, 259.0], [5905.0, 249.0], [6015.0, 255.0], [5962.0, 258.0], [6139.0, 244.0], [6264.0, 452.0], [6199.0, 249.0], [6214.0, 235.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 6333.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 825.5666666666667, "minX": 1.64821266E12, "maxY": 5490.833333333333, "series": [{"data": [[1.64821284E12, 1862.8166666666666], [1.64821266E12, 825.5666666666667], [1.64821278E12, 5490.833333333333], [1.64821272E12, 4320.783333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64821284E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 272.6666666666667, "minX": 1.64821266E12, "maxY": 3661.0666666666666, "series": [{"data": [[1.64821284E12, 1255.6666666666667], [1.64821266E12, 536.2333333333333], [1.64821278E12, 3661.0666666666666], [1.64821272E12, 2880.366666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.64821284E12, 623.8166666666667], [1.64821266E12, 272.6666666666667], [1.64821278E12, 1829.7333333333333], [1.64821272E12, 1440.45]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64821284E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.35, "minX": 1.64821266E12, "maxY": 1830.5333333333333, "series": [{"data": [[1.64821284E12, 626.4833333333333], [1.64821266E12, 45.9], [1.64821278E12, 1820.6166666666666], [1.64821272E12, 1329.2333333333333]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.64821284E12, 1.35], [1.64821266E12, 222.21666666666667], [1.64821278E12, 9.916666666666666], [1.64821272E12, 110.95]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.64821284E12, 623.8166666666667], [1.64821266E12, 272.6666666666667], [1.64821278E12, 1829.7333333333333], [1.64821272E12, 1440.45]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.64821284E12, 627.8333333333334], [1.64821266E12, 268.1166666666667], [1.64821278E12, 1830.5333333333333], [1.64821272E12, 1440.1833333333334]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64821284E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.35, "minX": 1.64821266E12, "maxY": 5480.883333333333, "series": [{"data": [[1.64821284E12, 1878.1333333333334], [1.64821266E12, 586.6833333333333], [1.64821278E12, 5480.883333333333], [1.64821272E12, 4209.866666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.64821284E12, 1.35], [1.64821266E12, 222.21666666666667], [1.64821278E12, 9.916666666666666], [1.64821272E12, 110.95]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64821284E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

