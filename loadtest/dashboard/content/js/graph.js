/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 1950.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 4.0], [5.9, 4.0], [6.0, 4.0], [6.1, 4.0], [6.2, 4.0], [6.3, 4.0], [6.4, 4.0], [6.5, 4.0], [6.6, 5.0], [6.7, 5.0], [6.8, 5.0], [6.9, 5.0], [7.0, 5.0], [7.1, 5.0], [7.2, 5.0], [7.3, 5.0], [7.4, 6.0], [7.5, 6.0], [7.6, 6.0], [7.7, 6.0], [7.8, 6.0], [7.9, 6.0], [8.0, 6.0], [8.1, 6.0], [8.2, 7.0], [8.3, 7.0], [8.4, 7.0], [8.5, 7.0], [8.6, 7.0], [8.7, 7.0], [8.8, 8.0], [8.9, 8.0], [9.0, 8.0], [9.1, 8.0], [9.2, 8.0], [9.3, 8.0], [9.4, 9.0], [9.5, 9.0], [9.6, 9.0], [9.7, 9.0], [9.8, 9.0], [9.9, 10.0], [10.0, 10.0], [10.1, 10.0], [10.2, 10.0], [10.3, 10.0], [10.4, 10.0], [10.5, 11.0], [10.6, 11.0], [10.7, 11.0], [10.8, 11.0], [10.9, 12.0], [11.0, 12.0], [11.1, 12.0], [11.2, 12.0], [11.3, 12.0], [11.4, 13.0], [11.5, 13.0], [11.6, 13.0], [11.7, 13.0], [11.8, 14.0], [11.9, 14.0], [12.0, 14.0], [12.1, 14.0], [12.2, 15.0], [12.3, 15.0], [12.4, 15.0], [12.5, 15.0], [12.6, 16.0], [12.7, 16.0], [12.8, 16.0], [12.9, 16.0], [13.0, 16.0], [13.1, 17.0], [13.2, 17.0], [13.3, 17.0], [13.4, 17.0], [13.5, 18.0], [13.6, 18.0], [13.7, 18.0], [13.8, 18.0], [13.9, 19.0], [14.0, 19.0], [14.1, 19.0], [14.2, 19.0], [14.3, 20.0], [14.4, 20.0], [14.5, 20.0], [14.6, 20.0], [14.7, 21.0], [14.8, 21.0], [14.9, 21.0], [15.0, 21.0], [15.1, 22.0], [15.2, 22.0], [15.3, 22.0], [15.4, 22.0], [15.5, 22.0], [15.6, 23.0], [15.7, 23.0], [15.8, 23.0], [15.9, 23.0], [16.0, 24.0], [16.1, 24.0], [16.2, 24.0], [16.3, 24.0], [16.4, 24.0], [16.5, 25.0], [16.6, 25.0], [16.7, 25.0], [16.8, 25.0], [16.9, 25.0], [17.0, 26.0], [17.1, 26.0], [17.2, 26.0], [17.3, 26.0], [17.4, 27.0], [17.5, 27.0], [17.6, 27.0], [17.7, 27.0], [17.8, 27.0], [17.9, 28.0], [18.0, 28.0], [18.1, 28.0], [18.2, 28.0], [18.3, 29.0], [18.4, 29.0], [18.5, 29.0], [18.6, 29.0], [18.7, 30.0], [18.8, 30.0], [18.9, 30.0], [19.0, 30.0], [19.1, 30.0], [19.2, 31.0], [19.3, 31.0], [19.4, 31.0], [19.5, 31.0], [19.6, 32.0], [19.7, 32.0], [19.8, 32.0], [19.9, 32.0], [20.0, 33.0], [20.1, 33.0], [20.2, 33.0], [20.3, 33.0], [20.4, 33.0], [20.5, 34.0], [20.6, 34.0], [20.7, 34.0], [20.8, 34.0], [20.9, 35.0], [21.0, 35.0], [21.1, 35.0], [21.2, 35.0], [21.3, 35.0], [21.4, 36.0], [21.5, 36.0], [21.6, 36.0], [21.7, 36.0], [21.8, 37.0], [21.9, 37.0], [22.0, 37.0], [22.1, 37.0], [22.2, 38.0], [22.3, 38.0], [22.4, 38.0], [22.5, 38.0], [22.6, 39.0], [22.7, 39.0], [22.8, 39.0], [22.9, 39.0], [23.0, 39.0], [23.1, 40.0], [23.2, 40.0], [23.3, 40.0], [23.4, 40.0], [23.5, 41.0], [23.6, 41.0], [23.7, 41.0], [23.8, 41.0], [23.9, 41.0], [24.0, 42.0], [24.1, 42.0], [24.2, 42.0], [24.3, 42.0], [24.4, 43.0], [24.5, 43.0], [24.6, 43.0], [24.7, 43.0], [24.8, 44.0], [24.9, 44.0], [25.0, 44.0], [25.1, 44.0], [25.2, 45.0], [25.3, 45.0], [25.4, 45.0], [25.5, 45.0], [25.6, 46.0], [25.7, 46.0], [25.8, 46.0], [25.9, 46.0], [26.0, 46.0], [26.1, 47.0], [26.2, 47.0], [26.3, 47.0], [26.4, 47.0], [26.5, 48.0], [26.6, 48.0], [26.7, 48.0], [26.8, 48.0], [26.9, 48.0], [27.0, 49.0], [27.1, 49.0], [27.2, 49.0], [27.3, 49.0], [27.4, 49.0], [27.5, 50.0], [27.6, 50.0], [27.7, 50.0], [27.8, 50.0], [27.9, 51.0], [28.0, 51.0], [28.1, 51.0], [28.2, 51.0], [28.3, 51.0], [28.4, 52.0], [28.5, 52.0], [28.6, 52.0], [28.7, 52.0], [28.8, 53.0], [28.9, 53.0], [29.0, 53.0], [29.1, 53.0], [29.2, 54.0], [29.3, 54.0], [29.4, 54.0], [29.5, 54.0], [29.6, 54.0], [29.7, 55.0], [29.8, 55.0], [29.9, 55.0], [30.0, 55.0], [30.1, 55.0], [30.2, 56.0], [30.3, 56.0], [30.4, 56.0], [30.5, 56.0], [30.6, 56.0], [30.7, 57.0], [30.8, 57.0], [30.9, 57.0], [31.0, 57.0], [31.1, 57.0], [31.2, 58.0], [31.3, 58.0], [31.4, 58.0], [31.5, 58.0], [31.6, 58.0], [31.7, 59.0], [31.8, 59.0], [31.9, 59.0], [32.0, 59.0], [32.1, 59.0], [32.2, 60.0], [32.3, 60.0], [32.4, 60.0], [32.5, 60.0], [32.6, 60.0], [32.7, 61.0], [32.8, 61.0], [32.9, 61.0], [33.0, 61.0], [33.1, 62.0], [33.2, 62.0], [33.3, 62.0], [33.4, 62.0], [33.5, 62.0], [33.6, 63.0], [33.7, 63.0], [33.8, 63.0], [33.9, 63.0], [34.0, 63.0], [34.1, 64.0], [34.2, 64.0], [34.3, 64.0], [34.4, 64.0], [34.5, 64.0], [34.6, 64.0], [34.7, 65.0], [34.8, 65.0], [34.9, 65.0], [35.0, 65.0], [35.1, 65.0], [35.2, 66.0], [35.3, 66.0], [35.4, 66.0], [35.5, 66.0], [35.6, 66.0], [35.7, 67.0], [35.8, 67.0], [35.9, 67.0], [36.0, 67.0], [36.1, 67.0], [36.2, 68.0], [36.3, 68.0], [36.4, 68.0], [36.5, 68.0], [36.6, 68.0], [36.7, 68.0], [36.8, 69.0], [36.9, 69.0], [37.0, 69.0], [37.1, 69.0], [37.2, 69.0], [37.3, 69.0], [37.4, 70.0], [37.5, 70.0], [37.6, 70.0], [37.7, 70.0], [37.8, 70.0], [37.9, 70.0], [38.0, 71.0], [38.1, 71.0], [38.2, 71.0], [38.3, 71.0], [38.4, 71.0], [38.5, 71.0], [38.6, 72.0], [38.7, 72.0], [38.8, 72.0], [38.9, 72.0], [39.0, 72.0], [39.1, 72.0], [39.2, 73.0], [39.3, 73.0], [39.4, 73.0], [39.5, 73.0], [39.6, 73.0], [39.7, 73.0], [39.8, 74.0], [39.9, 74.0], [40.0, 74.0], [40.1, 74.0], [40.2, 74.0], [40.3, 74.0], [40.4, 74.0], [40.5, 75.0], [40.6, 75.0], [40.7, 75.0], [40.8, 75.0], [40.9, 75.0], [41.0, 75.0], [41.1, 75.0], [41.2, 76.0], [41.3, 76.0], [41.4, 76.0], [41.5, 76.0], [41.6, 76.0], [41.7, 76.0], [41.8, 77.0], [41.9, 77.0], [42.0, 77.0], [42.1, 77.0], [42.2, 77.0], [42.3, 77.0], [42.4, 77.0], [42.5, 78.0], [42.6, 78.0], [42.7, 78.0], [42.8, 78.0], [42.9, 78.0], [43.0, 78.0], [43.1, 78.0], [43.2, 79.0], [43.3, 79.0], [43.4, 79.0], [43.5, 79.0], [43.6, 79.0], [43.7, 79.0], [43.8, 79.0], [43.9, 79.0], [44.0, 80.0], [44.1, 80.0], [44.2, 80.0], [44.3, 80.0], [44.4, 80.0], [44.5, 80.0], [44.6, 80.0], [44.7, 80.0], [44.8, 81.0], [44.9, 81.0], [45.0, 81.0], [45.1, 81.0], [45.2, 81.0], [45.3, 81.0], [45.4, 81.0], [45.5, 81.0], [45.6, 81.0], [45.7, 82.0], [45.8, 82.0], [45.9, 82.0], [46.0, 82.0], [46.1, 82.0], [46.2, 82.0], [46.3, 82.0], [46.4, 82.0], [46.5, 82.0], [46.6, 83.0], [46.7, 83.0], [46.8, 83.0], [46.9, 83.0], [47.0, 83.0], [47.1, 83.0], [47.2, 83.0], [47.3, 83.0], [47.4, 83.0], [47.5, 83.0], [47.6, 84.0], [47.7, 84.0], [47.8, 84.0], [47.9, 84.0], [48.0, 84.0], [48.1, 84.0], [48.2, 84.0], [48.3, 84.0], [48.4, 84.0], [48.5, 85.0], [48.6, 85.0], [48.7, 85.0], [48.8, 85.0], [48.9, 85.0], [49.0, 85.0], [49.1, 85.0], [49.2, 85.0], [49.3, 85.0], [49.4, 85.0], [49.5, 86.0], [49.6, 86.0], [49.7, 86.0], [49.8, 86.0], [49.9, 86.0], [50.0, 86.0], [50.1, 86.0], [50.2, 86.0], [50.3, 86.0], [50.4, 86.0], [50.5, 87.0], [50.6, 87.0], [50.7, 87.0], [50.8, 87.0], [50.9, 87.0], [51.0, 87.0], [51.1, 87.0], [51.2, 87.0], [51.3, 87.0], [51.4, 87.0], [51.5, 87.0], [51.6, 88.0], [51.7, 88.0], [51.8, 88.0], [51.9, 88.0], [52.0, 88.0], [52.1, 88.0], [52.2, 88.0], [52.3, 88.0], [52.4, 88.0], [52.5, 88.0], [52.6, 88.0], [52.7, 89.0], [52.8, 89.0], [52.9, 89.0], [53.0, 89.0], [53.1, 89.0], [53.2, 89.0], [53.3, 89.0], [53.4, 89.0], [53.5, 89.0], [53.6, 89.0], [53.7, 90.0], [53.8, 90.0], [53.9, 90.0], [54.0, 90.0], [54.1, 90.0], [54.2, 90.0], [54.3, 90.0], [54.4, 90.0], [54.5, 90.0], [54.6, 90.0], [54.7, 90.0], [54.8, 91.0], [54.9, 91.0], [55.0, 91.0], [55.1, 91.0], [55.2, 91.0], [55.3, 91.0], [55.4, 91.0], [55.5, 91.0], [55.6, 91.0], [55.7, 91.0], [55.8, 91.0], [55.9, 91.0], [56.0, 92.0], [56.1, 92.0], [56.2, 92.0], [56.3, 92.0], [56.4, 92.0], [56.5, 92.0], [56.6, 92.0], [56.7, 92.0], [56.8, 92.0], [56.9, 92.0], [57.0, 92.0], [57.1, 92.0], [57.2, 93.0], [57.3, 93.0], [57.4, 93.0], [57.5, 93.0], [57.6, 93.0], [57.7, 93.0], [57.8, 93.0], [57.9, 93.0], [58.0, 93.0], [58.1, 93.0], [58.2, 93.0], [58.3, 94.0], [58.4, 94.0], [58.5, 94.0], [58.6, 94.0], [58.7, 94.0], [58.8, 94.0], [58.9, 94.0], [59.0, 94.0], [59.1, 94.0], [59.2, 94.0], [59.3, 94.0], [59.4, 95.0], [59.5, 95.0], [59.6, 95.0], [59.7, 95.0], [59.8, 95.0], [59.9, 95.0], [60.0, 95.0], [60.1, 95.0], [60.2, 95.0], [60.3, 95.0], [60.4, 95.0], [60.5, 96.0], [60.6, 96.0], [60.7, 96.0], [60.8, 96.0], [60.9, 96.0], [61.0, 96.0], [61.1, 96.0], [61.2, 96.0], [61.3, 96.0], [61.4, 96.0], [61.5, 97.0], [61.6, 97.0], [61.7, 97.0], [61.8, 97.0], [61.9, 97.0], [62.0, 97.0], [62.1, 97.0], [62.2, 97.0], [62.3, 97.0], [62.4, 97.0], [62.5, 98.0], [62.6, 98.0], [62.7, 98.0], [62.8, 98.0], [62.9, 98.0], [63.0, 98.0], [63.1, 98.0], [63.2, 98.0], [63.3, 98.0], [63.4, 98.0], [63.5, 98.0], [63.6, 99.0], [63.7, 99.0], [63.8, 99.0], [63.9, 99.0], [64.0, 99.0], [64.1, 99.0], [64.2, 99.0], [64.3, 99.0], [64.4, 99.0], [64.5, 99.0], [64.6, 99.0], [64.7, 100.0], [64.8, 100.0], [64.9, 100.0], [65.0, 100.0], [65.1, 100.0], [65.2, 100.0], [65.3, 100.0], [65.4, 100.0], [65.5, 100.0], [65.6, 100.0], [65.7, 101.0], [65.8, 101.0], [65.9, 101.0], [66.0, 101.0], [66.1, 101.0], [66.2, 101.0], [66.3, 101.0], [66.4, 101.0], [66.5, 101.0], [66.6, 102.0], [66.7, 102.0], [66.8, 102.0], [66.9, 102.0], [67.0, 102.0], [67.1, 102.0], [67.2, 102.0], [67.3, 102.0], [67.4, 102.0], [67.5, 102.0], [67.6, 103.0], [67.7, 103.0], [67.8, 103.0], [67.9, 103.0], [68.0, 103.0], [68.1, 103.0], [68.2, 103.0], [68.3, 103.0], [68.4, 103.0], [68.5, 104.0], [68.6, 104.0], [68.7, 104.0], [68.8, 104.0], [68.9, 104.0], [69.0, 104.0], [69.1, 104.0], [69.2, 104.0], [69.3, 105.0], [69.4, 105.0], [69.5, 105.0], [69.6, 105.0], [69.7, 105.0], [69.8, 105.0], [69.9, 105.0], [70.0, 105.0], [70.1, 105.0], [70.2, 106.0], [70.3, 106.0], [70.4, 106.0], [70.5, 106.0], [70.6, 106.0], [70.7, 106.0], [70.8, 106.0], [70.9, 106.0], [71.0, 107.0], [71.1, 107.0], [71.2, 107.0], [71.3, 107.0], [71.4, 107.0], [71.5, 107.0], [71.6, 107.0], [71.7, 107.0], [71.8, 107.0], [71.9, 108.0], [72.0, 108.0], [72.1, 108.0], [72.2, 108.0], [72.3, 108.0], [72.4, 108.0], [72.5, 108.0], [72.6, 108.0], [72.7, 109.0], [72.8, 109.0], [72.9, 109.0], [73.0, 109.0], [73.1, 109.0], [73.2, 109.0], [73.3, 109.0], [73.4, 109.0], [73.5, 110.0], [73.6, 110.0], [73.7, 110.0], [73.8, 110.0], [73.9, 110.0], [74.0, 110.0], [74.1, 110.0], [74.2, 110.0], [74.3, 111.0], [74.4, 111.0], [74.5, 111.0], [74.6, 111.0], [74.7, 111.0], [74.8, 111.0], [74.9, 111.0], [75.0, 112.0], [75.1, 112.0], [75.2, 112.0], [75.3, 112.0], [75.4, 112.0], [75.5, 112.0], [75.6, 112.0], [75.7, 112.0], [75.8, 113.0], [75.9, 113.0], [76.0, 113.0], [76.1, 113.0], [76.2, 113.0], [76.3, 113.0], [76.4, 113.0], [76.5, 114.0], [76.6, 114.0], [76.7, 114.0], [76.8, 114.0], [76.9, 114.0], [77.0, 114.0], [77.1, 115.0], [77.2, 115.0], [77.3, 115.0], [77.4, 115.0], [77.5, 115.0], [77.6, 115.0], [77.7, 115.0], [77.8, 116.0], [77.9, 116.0], [78.0, 116.0], [78.1, 116.0], [78.2, 116.0], [78.3, 116.0], [78.4, 116.0], [78.5, 117.0], [78.6, 117.0], [78.7, 117.0], [78.8, 117.0], [78.9, 117.0], [79.0, 117.0], [79.1, 118.0], [79.2, 118.0], [79.3, 118.0], [79.4, 118.0], [79.5, 118.0], [79.6, 118.0], [79.7, 119.0], [79.8, 119.0], [79.9, 119.0], [80.0, 119.0], [80.1, 119.0], [80.2, 119.0], [80.3, 120.0], [80.4, 120.0], [80.5, 120.0], [80.6, 120.0], [80.7, 120.0], [80.8, 121.0], [80.9, 121.0], [81.0, 121.0], [81.1, 121.0], [81.2, 121.0], [81.3, 121.0], [81.4, 122.0], [81.5, 122.0], [81.6, 122.0], [81.7, 122.0], [81.8, 122.0], [81.9, 123.0], [82.0, 123.0], [82.1, 123.0], [82.2, 123.0], [82.3, 123.0], [82.4, 123.0], [82.5, 124.0], [82.6, 124.0], [82.7, 124.0], [82.8, 124.0], [82.9, 124.0], [83.0, 125.0], [83.1, 125.0], [83.2, 125.0], [83.3, 125.0], [83.4, 125.0], [83.5, 126.0], [83.6, 126.0], [83.7, 126.0], [83.8, 126.0], [83.9, 127.0], [84.0, 127.0], [84.1, 127.0], [84.2, 127.0], [84.3, 128.0], [84.4, 128.0], [84.5, 128.0], [84.6, 128.0], [84.7, 129.0], [84.8, 129.0], [84.9, 129.0], [85.0, 129.0], [85.1, 130.0], [85.2, 130.0], [85.3, 130.0], [85.4, 131.0], [85.5, 131.0], [85.6, 131.0], [85.7, 131.0], [85.8, 132.0], [85.9, 132.0], [86.0, 132.0], [86.1, 133.0], [86.2, 133.0], [86.3, 133.0], [86.4, 134.0], [86.5, 134.0], [86.6, 134.0], [86.7, 134.0], [86.8, 135.0], [86.9, 135.0], [87.0, 135.0], [87.1, 136.0], [87.2, 136.0], [87.3, 136.0], [87.4, 137.0], [87.5, 137.0], [87.6, 137.0], [87.7, 138.0], [87.8, 138.0], [87.9, 138.0], [88.0, 139.0], [88.1, 139.0], [88.2, 140.0], [88.3, 140.0], [88.4, 140.0], [88.5, 141.0], [88.6, 141.0], [88.7, 142.0], [88.8, 142.0], [88.9, 143.0], [89.0, 143.0], [89.1, 143.0], [89.2, 144.0], [89.3, 144.0], [89.4, 145.0], [89.5, 145.0], [89.6, 146.0], [89.7, 146.0], [89.8, 147.0], [89.9, 148.0], [90.0, 148.0], [90.1, 149.0], [90.2, 149.0], [90.3, 150.0], [90.4, 150.0], [90.5, 151.0], [90.6, 151.0], [90.7, 152.0], [90.8, 153.0], [90.9, 153.0], [91.0, 154.0], [91.1, 154.0], [91.2, 155.0], [91.3, 156.0], [91.4, 156.0], [91.5, 157.0], [91.6, 158.0], [91.7, 159.0], [91.8, 159.0], [91.9, 160.0], [92.0, 160.0], [92.1, 161.0], [92.2, 162.0], [92.3, 163.0], [92.4, 164.0], [92.5, 165.0], [92.6, 165.0], [92.7, 166.0], [92.8, 167.0], [92.9, 168.0], [93.0, 169.0], [93.1, 170.0], [93.2, 171.0], [93.3, 172.0], [93.4, 173.0], [93.5, 174.0], [93.6, 175.0], [93.7, 176.0], [93.8, 177.0], [93.9, 178.0], [94.0, 179.0], [94.1, 180.0], [94.2, 182.0], [94.3, 183.0], [94.4, 184.0], [94.5, 186.0], [94.6, 187.0], [94.7, 188.0], [94.8, 190.0], [94.9, 191.0], [95.0, 193.0], [95.1, 195.0], [95.2, 197.0], [95.3, 198.0], [95.4, 200.0], [95.5, 202.0], [95.6, 203.0], [95.7, 206.0], [95.8, 208.0], [95.9, 209.0], [96.0, 211.0], [96.1, 214.0], [96.2, 216.0], [96.3, 219.0], [96.4, 221.0], [96.5, 224.0], [96.6, 227.0], [96.7, 230.0], [96.8, 232.0], [96.9, 235.0], [97.0, 238.0], [97.1, 241.0], [97.2, 244.0], [97.3, 248.0], [97.4, 251.0], [97.5, 255.0], [97.6, 259.0], [97.7, 263.0], [97.8, 267.0], [97.9, 271.0], [98.0, 276.0], [98.1, 281.0], [98.2, 286.0], [98.3, 292.0], [98.4, 299.0], [98.5, 310.0], [98.6, 320.0], [98.7, 334.0], [98.8, 346.0], [98.9, 359.0], [99.0, 371.0], [99.1, 385.0], [99.2, 401.0], [99.3, 420.0], [99.4, 438.0], [99.5, 466.0], [99.6, 505.0], [99.7, 574.0], [99.8, 667.0], [99.9, 886.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 4.0], [6.0, 4.0], [6.1, 4.0], [6.2, 4.0], [6.3, 4.0], [6.4, 4.0], [6.5, 4.0], [6.6, 4.0], [6.7, 4.0], [6.8, 4.0], [6.9, 5.0], [7.0, 5.0], [7.1, 5.0], [7.2, 5.0], [7.3, 5.0], [7.4, 5.0], [7.5, 5.0], [7.6, 5.0], [7.7, 6.0], [7.8, 6.0], [7.9, 6.0], [8.0, 6.0], [8.1, 6.0], [8.2, 6.0], [8.3, 6.0], [8.4, 6.0], [8.5, 7.0], [8.6, 7.0], [8.7, 7.0], [8.8, 7.0], [8.9, 7.0], [9.0, 7.0], [9.1, 7.0], [9.2, 8.0], [9.3, 8.0], [9.4, 8.0], [9.5, 8.0], [9.6, 8.0], [9.7, 8.0], [9.8, 8.0], [9.9, 8.0], [10.0, 9.0], [10.1, 9.0], [10.2, 9.0], [10.3, 9.0], [10.4, 9.0], [10.5, 9.0], [10.6, 9.0], [10.7, 10.0], [10.8, 10.0], [10.9, 10.0], [11.0, 10.0], [11.1, 10.0], [11.2, 10.0], [11.3, 11.0], [11.4, 11.0], [11.5, 11.0], [11.6, 11.0], [11.7, 11.0], [11.8, 11.0], [11.9, 12.0], [12.0, 12.0], [12.1, 12.0], [12.2, 12.0], [12.3, 12.0], [12.4, 12.0], [12.5, 13.0], [12.6, 13.0], [12.7, 13.0], [12.8, 13.0], [12.9, 13.0], [13.0, 13.0], [13.1, 14.0], [13.2, 14.0], [13.3, 14.0], [13.4, 14.0], [13.5, 14.0], [13.6, 14.0], [13.7, 15.0], [13.8, 15.0], [13.9, 15.0], [14.0, 15.0], [14.1, 15.0], [14.2, 15.0], [14.3, 16.0], [14.4, 16.0], [14.5, 16.0], [14.6, 16.0], [14.7, 16.0], [14.8, 17.0], [14.9, 17.0], [15.0, 17.0], [15.1, 17.0], [15.2, 17.0], [15.3, 17.0], [15.4, 18.0], [15.5, 18.0], [15.6, 18.0], [15.7, 18.0], [15.8, 18.0], [15.9, 19.0], [16.0, 19.0], [16.1, 19.0], [16.2, 19.0], [16.3, 19.0], [16.4, 20.0], [16.5, 20.0], [16.6, 20.0], [16.7, 20.0], [16.8, 20.0], [16.9, 21.0], [17.0, 21.0], [17.1, 21.0], [17.2, 21.0], [17.3, 21.0], [17.4, 22.0], [17.5, 22.0], [17.6, 22.0], [17.7, 22.0], [17.8, 22.0], [17.9, 23.0], [18.0, 23.0], [18.1, 23.0], [18.2, 23.0], [18.3, 23.0], [18.4, 23.0], [18.5, 24.0], [18.6, 24.0], [18.7, 24.0], [18.8, 24.0], [18.9, 24.0], [19.0, 25.0], [19.1, 25.0], [19.2, 25.0], [19.3, 25.0], [19.4, 25.0], [19.5, 26.0], [19.6, 26.0], [19.7, 26.0], [19.8, 26.0], [19.9, 26.0], [20.0, 26.0], [20.1, 27.0], [20.2, 27.0], [20.3, 27.0], [20.4, 27.0], [20.5, 27.0], [20.6, 28.0], [20.7, 28.0], [20.8, 28.0], [20.9, 28.0], [21.0, 28.0], [21.1, 29.0], [21.2, 29.0], [21.3, 29.0], [21.4, 29.0], [21.5, 30.0], [21.6, 30.0], [21.7, 30.0], [21.8, 30.0], [21.9, 30.0], [22.0, 31.0], [22.1, 31.0], [22.2, 31.0], [22.3, 31.0], [22.4, 31.0], [22.5, 32.0], [22.6, 32.0], [22.7, 32.0], [22.8, 32.0], [22.9, 32.0], [23.0, 32.0], [23.1, 33.0], [23.2, 33.0], [23.3, 33.0], [23.4, 33.0], [23.5, 33.0], [23.6, 34.0], [23.7, 34.0], [23.8, 34.0], [23.9, 34.0], [24.0, 35.0], [24.1, 35.0], [24.2, 35.0], [24.3, 35.0], [24.4, 36.0], [24.5, 36.0], [24.6, 36.0], [24.7, 36.0], [24.8, 36.0], [24.9, 37.0], [25.0, 37.0], [25.1, 37.0], [25.2, 37.0], [25.3, 38.0], [25.4, 38.0], [25.5, 38.0], [25.6, 38.0], [25.7, 39.0], [25.8, 39.0], [25.9, 39.0], [26.0, 39.0], [26.1, 39.0], [26.2, 40.0], [26.3, 40.0], [26.4, 40.0], [26.5, 40.0], [26.6, 41.0], [26.7, 41.0], [26.8, 41.0], [26.9, 41.0], [27.0, 42.0], [27.1, 42.0], [27.2, 42.0], [27.3, 42.0], [27.4, 43.0], [27.5, 43.0], [27.6, 43.0], [27.7, 43.0], [27.8, 44.0], [27.9, 44.0], [28.0, 44.0], [28.1, 44.0], [28.2, 45.0], [28.3, 45.0], [28.4, 45.0], [28.5, 45.0], [28.6, 46.0], [28.7, 46.0], [28.8, 46.0], [28.9, 46.0], [29.0, 47.0], [29.1, 47.0], [29.2, 47.0], [29.3, 47.0], [29.4, 47.0], [29.5, 48.0], [29.6, 48.0], [29.7, 48.0], [29.8, 48.0], [29.9, 49.0], [30.0, 49.0], [30.1, 49.0], [30.2, 49.0], [30.3, 50.0], [30.4, 50.0], [30.5, 50.0], [30.6, 50.0], [30.7, 51.0], [30.8, 51.0], [30.9, 51.0], [31.0, 51.0], [31.1, 52.0], [31.2, 52.0], [31.3, 52.0], [31.4, 52.0], [31.5, 53.0], [31.6, 53.0], [31.7, 53.0], [31.8, 53.0], [31.9, 54.0], [32.0, 54.0], [32.1, 54.0], [32.2, 54.0], [32.3, 55.0], [32.4, 55.0], [32.5, 55.0], [32.6, 55.0], [32.7, 55.0], [32.8, 56.0], [32.9, 56.0], [33.0, 56.0], [33.1, 56.0], [33.2, 57.0], [33.3, 57.0], [33.4, 57.0], [33.5, 57.0], [33.6, 58.0], [33.7, 58.0], [33.8, 58.0], [33.9, 58.0], [34.0, 59.0], [34.1, 59.0], [34.2, 59.0], [34.3, 59.0], [34.4, 60.0], [34.5, 60.0], [34.6, 60.0], [34.7, 60.0], [34.8, 61.0], [34.9, 61.0], [35.0, 61.0], [35.1, 61.0], [35.2, 62.0], [35.3, 62.0], [35.4, 62.0], [35.5, 62.0], [35.6, 63.0], [35.7, 63.0], [35.8, 63.0], [35.9, 63.0], [36.0, 64.0], [36.1, 64.0], [36.2, 64.0], [36.3, 64.0], [36.4, 64.0], [36.5, 65.0], [36.6, 65.0], [36.7, 65.0], [36.8, 65.0], [36.9, 66.0], [37.0, 66.0], [37.1, 66.0], [37.2, 66.0], [37.3, 66.0], [37.4, 67.0], [37.5, 67.0], [37.6, 67.0], [37.7, 67.0], [37.8, 67.0], [37.9, 68.0], [38.0, 68.0], [38.1, 68.0], [38.2, 68.0], [38.3, 69.0], [38.4, 69.0], [38.5, 69.0], [38.6, 69.0], [38.7, 69.0], [38.8, 70.0], [38.9, 70.0], [39.0, 70.0], [39.1, 70.0], [39.2, 70.0], [39.3, 70.0], [39.4, 71.0], [39.5, 71.0], [39.6, 71.0], [39.7, 71.0], [39.8, 71.0], [39.9, 72.0], [40.0, 72.0], [40.1, 72.0], [40.2, 72.0], [40.3, 72.0], [40.4, 73.0], [40.5, 73.0], [40.6, 73.0], [40.7, 73.0], [40.8, 73.0], [40.9, 74.0], [41.0, 74.0], [41.1, 74.0], [41.2, 74.0], [41.3, 74.0], [41.4, 74.0], [41.5, 75.0], [41.6, 75.0], [41.7, 75.0], [41.8, 75.0], [41.9, 75.0], [42.0, 76.0], [42.1, 76.0], [42.2, 76.0], [42.3, 76.0], [42.4, 76.0], [42.5, 76.0], [42.6, 77.0], [42.7, 77.0], [42.8, 77.0], [42.9, 77.0], [43.0, 77.0], [43.1, 77.0], [43.2, 78.0], [43.3, 78.0], [43.4, 78.0], [43.5, 78.0], [43.6, 78.0], [43.7, 78.0], [43.8, 79.0], [43.9, 79.0], [44.0, 79.0], [44.1, 79.0], [44.2, 79.0], [44.3, 79.0], [44.4, 80.0], [44.5, 80.0], [44.6, 80.0], [44.7, 80.0], [44.8, 80.0], [44.9, 80.0], [45.0, 80.0], [45.1, 80.0], [45.2, 81.0], [45.3, 81.0], [45.4, 81.0], [45.5, 81.0], [45.6, 81.0], [45.7, 81.0], [45.8, 81.0], [45.9, 82.0], [46.0, 82.0], [46.1, 82.0], [46.2, 82.0], [46.3, 82.0], [46.4, 82.0], [46.5, 82.0], [46.6, 82.0], [46.7, 83.0], [46.8, 83.0], [46.9, 83.0], [47.0, 83.0], [47.1, 83.0], [47.2, 83.0], [47.3, 83.0], [47.4, 83.0], [47.5, 84.0], [47.6, 84.0], [47.7, 84.0], [47.8, 84.0], [47.9, 84.0], [48.0, 84.0], [48.1, 84.0], [48.2, 84.0], [48.3, 84.0], [48.4, 85.0], [48.5, 85.0], [48.6, 85.0], [48.7, 85.0], [48.8, 85.0], [48.9, 85.0], [49.0, 85.0], [49.1, 85.0], [49.2, 85.0], [49.3, 86.0], [49.4, 86.0], [49.5, 86.0], [49.6, 86.0], [49.7, 86.0], [49.8, 86.0], [49.9, 86.0], [50.0, 86.0], [50.1, 86.0], [50.2, 87.0], [50.3, 87.0], [50.4, 87.0], [50.5, 87.0], [50.6, 87.0], [50.7, 87.0], [50.8, 87.0], [50.9, 87.0], [51.0, 87.0], [51.1, 87.0], [51.2, 88.0], [51.3, 88.0], [51.4, 88.0], [51.5, 88.0], [51.6, 88.0], [51.7, 88.0], [51.8, 88.0], [51.9, 88.0], [52.0, 88.0], [52.1, 88.0], [52.2, 88.0], [52.3, 89.0], [52.4, 89.0], [52.5, 89.0], [52.6, 89.0], [52.7, 89.0], [52.8, 89.0], [52.9, 89.0], [53.0, 89.0], [53.1, 89.0], [53.2, 89.0], [53.3, 90.0], [53.4, 90.0], [53.5, 90.0], [53.6, 90.0], [53.7, 90.0], [53.8, 90.0], [53.9, 90.0], [54.0, 90.0], [54.1, 90.0], [54.2, 90.0], [54.3, 90.0], [54.4, 91.0], [54.5, 91.0], [54.6, 91.0], [54.7, 91.0], [54.8, 91.0], [54.9, 91.0], [55.0, 91.0], [55.1, 91.0], [55.2, 91.0], [55.3, 91.0], [55.4, 91.0], [55.5, 92.0], [55.6, 92.0], [55.7, 92.0], [55.8, 92.0], [55.9, 92.0], [56.0, 92.0], [56.1, 92.0], [56.2, 92.0], [56.3, 92.0], [56.4, 92.0], [56.5, 92.0], [56.6, 93.0], [56.7, 93.0], [56.8, 93.0], [56.9, 93.0], [57.0, 93.0], [57.1, 93.0], [57.2, 93.0], [57.3, 93.0], [57.4, 93.0], [57.5, 93.0], [57.6, 93.0], [57.7, 94.0], [57.8, 94.0], [57.9, 94.0], [58.0, 94.0], [58.1, 94.0], [58.2, 94.0], [58.3, 94.0], [58.4, 94.0], [58.5, 94.0], [58.6, 94.0], [58.7, 94.0], [58.8, 95.0], [58.9, 95.0], [59.0, 95.0], [59.1, 95.0], [59.2, 95.0], [59.3, 95.0], [59.4, 95.0], [59.5, 95.0], [59.6, 95.0], [59.7, 95.0], [59.8, 96.0], [59.9, 96.0], [60.0, 96.0], [60.1, 96.0], [60.2, 96.0], [60.3, 96.0], [60.4, 96.0], [60.5, 96.0], [60.6, 96.0], [60.7, 96.0], [60.8, 96.0], [60.9, 97.0], [61.0, 97.0], [61.1, 97.0], [61.2, 97.0], [61.3, 97.0], [61.4, 97.0], [61.5, 97.0], [61.6, 97.0], [61.7, 97.0], [61.8, 97.0], [61.9, 97.0], [62.0, 98.0], [62.1, 98.0], [62.2, 98.0], [62.3, 98.0], [62.4, 98.0], [62.5, 98.0], [62.6, 98.0], [62.7, 98.0], [62.8, 98.0], [62.9, 98.0], [63.0, 99.0], [63.1, 99.0], [63.2, 99.0], [63.3, 99.0], [63.4, 99.0], [63.5, 99.0], [63.6, 99.0], [63.7, 99.0], [63.8, 99.0], [63.9, 99.0], [64.0, 99.0], [64.1, 100.0], [64.2, 100.0], [64.3, 100.0], [64.4, 100.0], [64.5, 100.0], [64.6, 100.0], [64.7, 100.0], [64.8, 100.0], [64.9, 100.0], [65.0, 100.0], [65.1, 101.0], [65.2, 101.0], [65.3, 101.0], [65.4, 101.0], [65.5, 101.0], [65.6, 101.0], [65.7, 101.0], [65.8, 101.0], [65.9, 101.0], [66.0, 101.0], [66.1, 102.0], [66.2, 102.0], [66.3, 102.0], [66.4, 102.0], [66.5, 102.0], [66.6, 102.0], [66.7, 102.0], [66.8, 102.0], [66.9, 102.0], [67.0, 102.0], [67.1, 103.0], [67.2, 103.0], [67.3, 103.0], [67.4, 103.0], [67.5, 103.0], [67.6, 103.0], [67.7, 103.0], [67.8, 103.0], [67.9, 103.0], [68.0, 104.0], [68.1, 104.0], [68.2, 104.0], [68.3, 104.0], [68.4, 104.0], [68.5, 104.0], [68.6, 104.0], [68.7, 104.0], [68.8, 104.0], [68.9, 105.0], [69.0, 105.0], [69.1, 105.0], [69.2, 105.0], [69.3, 105.0], [69.4, 105.0], [69.5, 105.0], [69.6, 105.0], [69.7, 105.0], [69.8, 106.0], [69.9, 106.0], [70.0, 106.0], [70.1, 106.0], [70.2, 106.0], [70.3, 106.0], [70.4, 106.0], [70.5, 106.0], [70.6, 106.0], [70.7, 107.0], [70.8, 107.0], [70.9, 107.0], [71.0, 107.0], [71.1, 107.0], [71.2, 107.0], [71.3, 107.0], [71.4, 107.0], [71.5, 108.0], [71.6, 108.0], [71.7, 108.0], [71.8, 108.0], [71.9, 108.0], [72.0, 108.0], [72.1, 108.0], [72.2, 108.0], [72.3, 108.0], [72.4, 109.0], [72.5, 109.0], [72.6, 109.0], [72.7, 109.0], [72.8, 109.0], [72.9, 109.0], [73.0, 109.0], [73.1, 109.0], [73.2, 109.0], [73.3, 110.0], [73.4, 110.0], [73.5, 110.0], [73.6, 110.0], [73.7, 110.0], [73.8, 110.0], [73.9, 110.0], [74.0, 110.0], [74.1, 111.0], [74.2, 111.0], [74.3, 111.0], [74.4, 111.0], [74.5, 111.0], [74.6, 111.0], [74.7, 111.0], [74.8, 111.0], [74.9, 112.0], [75.0, 112.0], [75.1, 112.0], [75.2, 112.0], [75.3, 112.0], [75.4, 112.0], [75.5, 112.0], [75.6, 113.0], [75.7, 113.0], [75.8, 113.0], [75.9, 113.0], [76.0, 113.0], [76.1, 113.0], [76.2, 113.0], [76.3, 114.0], [76.4, 114.0], [76.5, 114.0], [76.6, 114.0], [76.7, 114.0], [76.8, 114.0], [76.9, 114.0], [77.0, 115.0], [77.1, 115.0], [77.2, 115.0], [77.3, 115.0], [77.4, 115.0], [77.5, 115.0], [77.6, 115.0], [77.7, 116.0], [77.8, 116.0], [77.9, 116.0], [78.0, 116.0], [78.1, 116.0], [78.2, 116.0], [78.3, 117.0], [78.4, 117.0], [78.5, 117.0], [78.6, 117.0], [78.7, 117.0], [78.8, 117.0], [78.9, 117.0], [79.0, 118.0], [79.1, 118.0], [79.2, 118.0], [79.3, 118.0], [79.4, 118.0], [79.5, 118.0], [79.6, 119.0], [79.7, 119.0], [79.8, 119.0], [79.9, 119.0], [80.0, 119.0], [80.1, 119.0], [80.2, 120.0], [80.3, 120.0], [80.4, 120.0], [80.5, 120.0], [80.6, 120.0], [80.7, 120.0], [80.8, 121.0], [80.9, 121.0], [81.0, 121.0], [81.1, 121.0], [81.2, 121.0], [81.3, 121.0], [81.4, 122.0], [81.5, 122.0], [81.6, 122.0], [81.7, 122.0], [81.8, 122.0], [81.9, 123.0], [82.0, 123.0], [82.1, 123.0], [82.2, 123.0], [82.3, 123.0], [82.4, 123.0], [82.5, 124.0], [82.6, 124.0], [82.7, 124.0], [82.8, 124.0], [82.9, 124.0], [83.0, 125.0], [83.1, 125.0], [83.2, 125.0], [83.3, 125.0], [83.4, 125.0], [83.5, 126.0], [83.6, 126.0], [83.7, 126.0], [83.8, 126.0], [83.9, 127.0], [84.0, 127.0], [84.1, 127.0], [84.2, 127.0], [84.3, 128.0], [84.4, 128.0], [84.5, 128.0], [84.6, 128.0], [84.7, 129.0], [84.8, 129.0], [84.9, 129.0], [85.0, 129.0], [85.1, 130.0], [85.2, 130.0], [85.3, 130.0], [85.4, 131.0], [85.5, 131.0], [85.6, 131.0], [85.7, 132.0], [85.8, 132.0], [85.9, 132.0], [86.0, 132.0], [86.1, 133.0], [86.2, 133.0], [86.3, 133.0], [86.4, 134.0], [86.5, 134.0], [86.6, 134.0], [86.7, 134.0], [86.8, 135.0], [86.9, 135.0], [87.0, 135.0], [87.1, 136.0], [87.2, 136.0], [87.3, 136.0], [87.4, 137.0], [87.5, 137.0], [87.6, 137.0], [87.7, 138.0], [87.8, 138.0], [87.9, 138.0], [88.0, 139.0], [88.1, 139.0], [88.2, 139.0], [88.3, 140.0], [88.4, 140.0], [88.5, 141.0], [88.6, 141.0], [88.7, 141.0], [88.8, 142.0], [88.9, 142.0], [89.0, 143.0], [89.1, 143.0], [89.2, 144.0], [89.3, 144.0], [89.4, 145.0], [89.5, 145.0], [89.6, 146.0], [89.7, 146.0], [89.8, 147.0], [89.9, 147.0], [90.0, 148.0], [90.1, 148.0], [90.2, 149.0], [90.3, 149.0], [90.4, 150.0], [90.5, 151.0], [90.6, 151.0], [90.7, 152.0], [90.8, 152.0], [90.9, 153.0], [91.0, 153.0], [91.1, 154.0], [91.2, 155.0], [91.3, 155.0], [91.4, 156.0], [91.5, 156.0], [91.6, 157.0], [91.7, 158.0], [91.8, 158.0], [91.9, 159.0], [92.0, 160.0], [92.1, 160.0], [92.2, 161.0], [92.3, 162.0], [92.4, 162.0], [92.5, 163.0], [92.6, 164.0], [92.7, 165.0], [92.8, 165.0], [92.9, 166.0], [93.0, 167.0], [93.1, 168.0], [93.2, 169.0], [93.3, 170.0], [93.4, 171.0], [93.5, 172.0], [93.6, 172.0], [93.7, 173.0], [93.8, 174.0], [93.9, 175.0], [94.0, 176.0], [94.1, 177.0], [94.2, 178.0], [94.3, 180.0], [94.4, 181.0], [94.5, 182.0], [94.6, 183.0], [94.7, 185.0], [94.8, 186.0], [94.9, 187.0], [95.0, 189.0], [95.1, 190.0], [95.2, 192.0], [95.3, 193.0], [95.4, 195.0], [95.5, 197.0], [95.6, 198.0], [95.7, 200.0], [95.8, 202.0], [95.9, 204.0], [96.0, 206.0], [96.1, 208.0], [96.2, 209.0], [96.3, 212.0], [96.4, 214.0], [96.5, 216.0], [96.6, 219.0], [96.7, 221.0], [96.8, 224.0], [96.9, 226.0], [97.0, 229.0], [97.1, 232.0], [97.2, 235.0], [97.3, 238.0], [97.4, 242.0], [97.5, 246.0], [97.6, 249.0], [97.7, 253.0], [97.8, 256.0], [97.9, 260.0], [98.0, 264.0], [98.1, 268.0], [98.2, 273.0], [98.3, 279.0], [98.4, 284.0], [98.5, 290.0], [98.6, 295.0], [98.7, 303.0], [98.8, 313.0], [98.9, 324.0], [99.0, 335.0], [99.1, 349.0], [99.2, 362.0], [99.3, 375.0], [99.4, 390.0], [99.5, 414.0], [99.6, 472.0], [99.7, 518.0], [99.8, 604.0], [99.9, 713.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 3.0], [2.0, 3.0], [2.1, 3.0], [2.2, 3.0], [2.3, 3.0], [2.4, 3.0], [2.5, 4.0], [2.6, 4.0], [2.7, 4.0], [2.8, 4.0], [2.9, 4.0], [3.0, 5.0], [3.1, 5.0], [3.2, 5.0], [3.3, 5.0], [3.4, 6.0], [3.5, 6.0], [3.6, 6.0], [3.7, 6.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 8.0], [4.2, 8.0], [4.3, 8.0], [4.4, 9.0], [4.5, 9.0], [4.6, 10.0], [4.7, 10.0], [4.8, 10.0], [4.9, 11.0], [5.0, 11.0], [5.1, 12.0], [5.2, 12.0], [5.3, 12.0], [5.4, 13.0], [5.5, 13.0], [5.6, 14.0], [5.7, 14.0], [5.8, 15.0], [5.9, 15.0], [6.0, 16.0], [6.1, 16.0], [6.2, 17.0], [6.3, 17.0], [6.4, 18.0], [6.5, 18.0], [6.6, 19.0], [6.7, 19.0], [6.8, 19.0], [6.9, 20.0], [7.0, 20.0], [7.1, 21.0], [7.2, 22.0], [7.3, 22.0], [7.4, 23.0], [7.5, 23.0], [7.6, 24.0], [7.7, 24.0], [7.8, 25.0], [7.9, 25.0], [8.0, 26.0], [8.1, 27.0], [8.2, 27.0], [8.3, 27.0], [8.4, 28.0], [8.5, 28.0], [8.6, 29.0], [8.7, 29.0], [8.8, 30.0], [8.9, 30.0], [9.0, 31.0], [9.1, 31.0], [9.2, 32.0], [9.3, 33.0], [9.4, 33.0], [9.5, 34.0], [9.6, 34.0], [9.7, 35.0], [9.8, 35.0], [9.9, 36.0], [10.0, 36.0], [10.1, 37.0], [10.2, 37.0], [10.3, 38.0], [10.4, 39.0], [10.5, 39.0], [10.6, 40.0], [10.7, 40.0], [10.8, 41.0], [10.9, 42.0], [11.0, 42.0], [11.1, 43.0], [11.2, 43.0], [11.3, 44.0], [11.4, 45.0], [11.5, 45.0], [11.6, 46.0], [11.7, 46.0], [11.8, 47.0], [11.9, 48.0], [12.0, 48.0], [12.1, 49.0], [12.2, 50.0], [12.3, 50.0], [12.4, 51.0], [12.5, 51.0], [12.6, 52.0], [12.7, 52.0], [12.8, 53.0], [12.9, 54.0], [13.0, 54.0], [13.1, 55.0], [13.2, 55.0], [13.3, 56.0], [13.4, 56.0], [13.5, 57.0], [13.6, 57.0], [13.7, 58.0], [13.8, 59.0], [13.9, 59.0], [14.0, 60.0], [14.1, 60.0], [14.2, 61.0], [14.3, 61.0], [14.4, 62.0], [14.5, 63.0], [14.6, 63.0], [14.7, 64.0], [14.8, 64.0], [14.9, 65.0], [15.0, 65.0], [15.1, 66.0], [15.2, 67.0], [15.3, 67.0], [15.4, 68.0], [15.5, 68.0], [15.6, 69.0], [15.7, 70.0], [15.8, 70.0], [15.9, 71.0], [16.0, 71.0], [16.1, 72.0], [16.2, 73.0], [16.3, 73.0], [16.4, 74.0], [16.5, 74.0], [16.6, 75.0], [16.7, 75.0], [16.8, 76.0], [16.9, 77.0], [17.0, 77.0], [17.1, 78.0], [17.2, 78.0], [17.3, 79.0], [17.4, 80.0], [17.5, 80.0], [17.6, 81.0], [17.7, 81.0], [17.8, 82.0], [17.9, 82.0], [18.0, 83.0], [18.1, 84.0], [18.2, 84.0], [18.3, 85.0], [18.4, 85.0], [18.5, 86.0], [18.6, 86.0], [18.7, 87.0], [18.8, 87.0], [18.9, 88.0], [19.0, 88.0], [19.1, 89.0], [19.2, 89.0], [19.3, 90.0], [19.4, 90.0], [19.5, 91.0], [19.6, 91.0], [19.7, 92.0], [19.8, 92.0], [19.9, 93.0], [20.0, 93.0], [20.1, 94.0], [20.2, 94.0], [20.3, 95.0], [20.4, 95.0], [20.5, 96.0], [20.6, 96.0], [20.7, 97.0], [20.8, 97.0], [20.9, 98.0], [21.0, 98.0], [21.1, 99.0], [21.2, 99.0], [21.3, 99.0], [21.4, 100.0], [21.5, 100.0], [21.6, 101.0], [21.7, 101.0], [21.8, 101.0], [21.9, 102.0], [22.0, 102.0], [22.1, 103.0], [22.2, 103.0], [22.3, 104.0], [22.4, 104.0], [22.5, 104.0], [22.6, 105.0], [22.7, 105.0], [22.8, 105.0], [22.9, 106.0], [23.0, 106.0], [23.1, 107.0], [23.2, 107.0], [23.3, 107.0], [23.4, 108.0], [23.5, 108.0], [23.6, 108.0], [23.7, 109.0], [23.8, 109.0], [23.9, 109.0], [24.0, 110.0], [24.1, 110.0], [24.2, 110.0], [24.3, 111.0], [24.4, 111.0], [24.5, 112.0], [24.6, 112.0], [24.7, 112.0], [24.8, 113.0], [24.9, 113.0], [25.0, 113.0], [25.1, 114.0], [25.2, 114.0], [25.3, 114.0], [25.4, 115.0], [25.5, 115.0], [25.6, 115.0], [25.7, 116.0], [25.8, 116.0], [25.9, 116.0], [26.0, 117.0], [26.1, 117.0], [26.2, 117.0], [26.3, 118.0], [26.4, 118.0], [26.5, 118.0], [26.6, 119.0], [26.7, 119.0], [26.8, 119.0], [26.9, 120.0], [27.0, 120.0], [27.1, 120.0], [27.2, 121.0], [27.3, 121.0], [27.4, 121.0], [27.5, 122.0], [27.6, 122.0], [27.7, 123.0], [27.8, 123.0], [27.9, 123.0], [28.0, 124.0], [28.1, 124.0], [28.2, 124.0], [28.3, 125.0], [28.4, 125.0], [28.5, 125.0], [28.6, 125.0], [28.7, 126.0], [28.8, 126.0], [28.9, 126.0], [29.0, 127.0], [29.1, 127.0], [29.2, 127.0], [29.3, 128.0], [29.4, 128.0], [29.5, 128.0], [29.6, 129.0], [29.7, 129.0], [29.8, 129.0], [29.9, 130.0], [30.0, 130.0], [30.1, 130.0], [30.2, 131.0], [30.3, 131.0], [30.4, 131.0], [30.5, 132.0], [30.6, 132.0], [30.7, 132.0], [30.8, 133.0], [30.9, 133.0], [31.0, 133.0], [31.1, 134.0], [31.2, 134.0], [31.3, 134.0], [31.4, 134.0], [31.5, 135.0], [31.6, 135.0], [31.7, 135.0], [31.8, 136.0], [31.9, 136.0], [32.0, 136.0], [32.1, 137.0], [32.2, 137.0], [32.3, 137.0], [32.4, 137.0], [32.5, 138.0], [32.6, 138.0], [32.7, 138.0], [32.8, 138.0], [32.9, 139.0], [33.0, 139.0], [33.1, 139.0], [33.2, 140.0], [33.3, 140.0], [33.4, 140.0], [33.5, 141.0], [33.6, 141.0], [33.7, 141.0], [33.8, 141.0], [33.9, 142.0], [34.0, 142.0], [34.1, 142.0], [34.2, 142.0], [34.3, 143.0], [34.4, 143.0], [34.5, 143.0], [34.6, 144.0], [34.7, 144.0], [34.8, 144.0], [34.9, 144.0], [35.0, 145.0], [35.1, 145.0], [35.2, 145.0], [35.3, 146.0], [35.4, 146.0], [35.5, 146.0], [35.6, 146.0], [35.7, 147.0], [35.8, 147.0], [35.9, 147.0], [36.0, 147.0], [36.1, 148.0], [36.2, 148.0], [36.3, 148.0], [36.4, 149.0], [36.5, 149.0], [36.6, 149.0], [36.7, 149.0], [36.8, 150.0], [36.9, 150.0], [37.0, 150.0], [37.1, 150.0], [37.2, 151.0], [37.3, 151.0], [37.4, 151.0], [37.5, 151.0], [37.6, 152.0], [37.7, 152.0], [37.8, 152.0], [37.9, 152.0], [38.0, 153.0], [38.1, 153.0], [38.2, 153.0], [38.3, 153.0], [38.4, 154.0], [38.5, 154.0], [38.6, 154.0], [38.7, 155.0], [38.8, 155.0], [38.9, 155.0], [39.0, 155.0], [39.1, 156.0], [39.2, 156.0], [39.3, 156.0], [39.4, 156.0], [39.5, 156.0], [39.6, 157.0], [39.7, 157.0], [39.8, 157.0], [39.9, 157.0], [40.0, 158.0], [40.1, 158.0], [40.2, 158.0], [40.3, 158.0], [40.4, 159.0], [40.5, 159.0], [40.6, 159.0], [40.7, 159.0], [40.8, 160.0], [40.9, 160.0], [41.0, 160.0], [41.1, 160.0], [41.2, 161.0], [41.3, 161.0], [41.4, 161.0], [41.5, 161.0], [41.6, 162.0], [41.7, 162.0], [41.8, 162.0], [41.9, 162.0], [42.0, 162.0], [42.1, 163.0], [42.2, 163.0], [42.3, 163.0], [42.4, 163.0], [42.5, 164.0], [42.6, 164.0], [42.7, 164.0], [42.8, 164.0], [42.9, 164.0], [43.0, 165.0], [43.1, 165.0], [43.2, 165.0], [43.3, 165.0], [43.4, 166.0], [43.5, 166.0], [43.6, 166.0], [43.7, 166.0], [43.8, 166.0], [43.9, 167.0], [44.0, 167.0], [44.1, 167.0], [44.2, 167.0], [44.3, 167.0], [44.4, 167.0], [44.5, 168.0], [44.6, 168.0], [44.7, 168.0], [44.8, 168.0], [44.9, 168.0], [45.0, 169.0], [45.1, 169.0], [45.2, 169.0], [45.3, 169.0], [45.4, 169.0], [45.5, 170.0], [45.6, 170.0], [45.7, 170.0], [45.8, 170.0], [45.9, 170.0], [46.0, 171.0], [46.1, 171.0], [46.2, 171.0], [46.3, 171.0], [46.4, 171.0], [46.5, 172.0], [46.6, 172.0], [46.7, 172.0], [46.8, 172.0], [46.9, 172.0], [47.0, 173.0], [47.1, 173.0], [47.2, 173.0], [47.3, 173.0], [47.4, 173.0], [47.5, 173.0], [47.6, 174.0], [47.7, 174.0], [47.8, 174.0], [47.9, 174.0], [48.0, 174.0], [48.1, 175.0], [48.2, 175.0], [48.3, 175.0], [48.4, 175.0], [48.5, 175.0], [48.6, 176.0], [48.7, 176.0], [48.8, 176.0], [48.9, 176.0], [49.0, 176.0], [49.1, 176.0], [49.2, 177.0], [49.3, 177.0], [49.4, 177.0], [49.5, 177.0], [49.6, 177.0], [49.7, 177.0], [49.8, 178.0], [49.9, 178.0], [50.0, 178.0], [50.1, 178.0], [50.2, 178.0], [50.3, 179.0], [50.4, 179.0], [50.5, 179.0], [50.6, 179.0], [50.7, 179.0], [50.8, 179.0], [50.9, 180.0], [51.0, 180.0], [51.1, 180.0], [51.2, 180.0], [51.3, 180.0], [51.4, 180.0], [51.5, 181.0], [51.6, 181.0], [51.7, 181.0], [51.8, 181.0], [51.9, 181.0], [52.0, 182.0], [52.1, 182.0], [52.2, 182.0], [52.3, 182.0], [52.4, 182.0], [52.5, 182.0], [52.6, 183.0], [52.7, 183.0], [52.8, 183.0], [52.9, 183.0], [53.0, 183.0], [53.1, 183.0], [53.2, 184.0], [53.3, 184.0], [53.4, 184.0], [53.5, 184.0], [53.6, 184.0], [53.7, 184.0], [53.8, 185.0], [53.9, 185.0], [54.0, 185.0], [54.1, 185.0], [54.2, 185.0], [54.3, 186.0], [54.4, 186.0], [54.5, 186.0], [54.6, 186.0], [54.7, 186.0], [54.8, 186.0], [54.9, 187.0], [55.0, 187.0], [55.1, 187.0], [55.2, 187.0], [55.3, 187.0], [55.4, 187.0], [55.5, 188.0], [55.6, 188.0], [55.7, 188.0], [55.8, 188.0], [55.9, 188.0], [56.0, 189.0], [56.1, 189.0], [56.2, 189.0], [56.3, 189.0], [56.4, 189.0], [56.5, 189.0], [56.6, 190.0], [56.7, 190.0], [56.8, 190.0], [56.9, 190.0], [57.0, 190.0], [57.1, 190.0], [57.2, 191.0], [57.3, 191.0], [57.4, 191.0], [57.5, 191.0], [57.6, 191.0], [57.7, 192.0], [57.8, 192.0], [57.9, 192.0], [58.0, 192.0], [58.1, 192.0], [58.2, 193.0], [58.3, 193.0], [58.4, 193.0], [58.5, 193.0], [58.6, 193.0], [58.7, 193.0], [58.8, 194.0], [58.9, 194.0], [59.0, 194.0], [59.1, 194.0], [59.2, 194.0], [59.3, 195.0], [59.4, 195.0], [59.5, 195.0], [59.6, 195.0], [59.7, 195.0], [59.8, 195.0], [59.9, 196.0], [60.0, 196.0], [60.1, 196.0], [60.2, 196.0], [60.3, 196.0], [60.4, 197.0], [60.5, 197.0], [60.6, 197.0], [60.7, 197.0], [60.8, 197.0], [60.9, 197.0], [61.0, 198.0], [61.1, 198.0], [61.2, 198.0], [61.3, 198.0], [61.4, 198.0], [61.5, 199.0], [61.6, 199.0], [61.7, 199.0], [61.8, 199.0], [61.9, 199.0], [62.0, 199.0], [62.1, 200.0], [62.2, 200.0], [62.3, 200.0], [62.4, 200.0], [62.5, 200.0], [62.6, 200.0], [62.7, 201.0], [62.8, 201.0], [62.9, 201.0], [63.0, 201.0], [63.1, 201.0], [63.2, 201.0], [63.3, 202.0], [63.4, 202.0], [63.5, 202.0], [63.6, 202.0], [63.7, 202.0], [63.8, 203.0], [63.9, 203.0], [64.0, 203.0], [64.1, 203.0], [64.2, 203.0], [64.3, 203.0], [64.4, 204.0], [64.5, 204.0], [64.6, 204.0], [64.7, 204.0], [64.8, 204.0], [64.9, 205.0], [65.0, 205.0], [65.1, 205.0], [65.2, 205.0], [65.3, 205.0], [65.4, 205.0], [65.5, 206.0], [65.6, 206.0], [65.7, 206.0], [65.8, 206.0], [65.9, 206.0], [66.0, 206.0], [66.1, 207.0], [66.2, 207.0], [66.3, 207.0], [66.4, 207.0], [66.5, 207.0], [66.6, 207.0], [66.7, 208.0], [66.8, 208.0], [66.9, 208.0], [67.0, 208.0], [67.1, 208.0], [67.2, 209.0], [67.3, 209.0], [67.4, 209.0], [67.5, 209.0], [67.6, 209.0], [67.7, 209.0], [67.8, 210.0], [67.9, 210.0], [68.0, 210.0], [68.1, 210.0], [68.2, 210.0], [68.3, 210.0], [68.4, 211.0], [68.5, 211.0], [68.6, 211.0], [68.7, 211.0], [68.8, 211.0], [68.9, 212.0], [69.0, 212.0], [69.1, 212.0], [69.2, 212.0], [69.3, 212.0], [69.4, 213.0], [69.5, 213.0], [69.6, 213.0], [69.7, 213.0], [69.8, 213.0], [69.9, 213.0], [70.0, 214.0], [70.1, 214.0], [70.2, 214.0], [70.3, 214.0], [70.4, 214.0], [70.5, 215.0], [70.6, 215.0], [70.7, 215.0], [70.8, 215.0], [70.9, 215.0], [71.0, 216.0], [71.1, 216.0], [71.2, 216.0], [71.3, 216.0], [71.4, 216.0], [71.5, 216.0], [71.6, 217.0], [71.7, 217.0], [71.8, 217.0], [71.9, 217.0], [72.0, 217.0], [72.1, 218.0], [72.2, 218.0], [72.3, 218.0], [72.4, 218.0], [72.5, 218.0], [72.6, 219.0], [72.7, 219.0], [72.8, 219.0], [72.9, 219.0], [73.0, 220.0], [73.1, 220.0], [73.2, 220.0], [73.3, 220.0], [73.4, 220.0], [73.5, 220.0], [73.6, 221.0], [73.7, 221.0], [73.8, 221.0], [73.9, 221.0], [74.0, 221.0], [74.1, 222.0], [74.2, 222.0], [74.3, 222.0], [74.4, 222.0], [74.5, 223.0], [74.6, 223.0], [74.7, 223.0], [74.8, 223.0], [74.9, 223.0], [75.0, 224.0], [75.1, 224.0], [75.2, 224.0], [75.3, 224.0], [75.4, 225.0], [75.5, 225.0], [75.6, 225.0], [75.7, 225.0], [75.8, 226.0], [75.9, 226.0], [76.0, 226.0], [76.1, 226.0], [76.2, 227.0], [76.3, 227.0], [76.4, 227.0], [76.5, 227.0], [76.6, 228.0], [76.7, 228.0], [76.8, 228.0], [76.9, 228.0], [77.0, 229.0], [77.1, 229.0], [77.2, 229.0], [77.3, 229.0], [77.4, 230.0], [77.5, 230.0], [77.6, 230.0], [77.7, 231.0], [77.8, 231.0], [77.9, 231.0], [78.0, 231.0], [78.1, 232.0], [78.2, 232.0], [78.3, 232.0], [78.4, 233.0], [78.5, 233.0], [78.6, 233.0], [78.7, 233.0], [78.8, 234.0], [78.9, 234.0], [79.0, 234.0], [79.1, 235.0], [79.2, 235.0], [79.3, 235.0], [79.4, 236.0], [79.5, 236.0], [79.6, 236.0], [79.7, 236.0], [79.8, 237.0], [79.9, 237.0], [80.0, 237.0], [80.1, 238.0], [80.2, 238.0], [80.3, 238.0], [80.4, 239.0], [80.5, 239.0], [80.6, 239.0], [80.7, 239.0], [80.8, 240.0], [80.9, 240.0], [81.0, 240.0], [81.1, 241.0], [81.2, 241.0], [81.3, 241.0], [81.4, 242.0], [81.5, 242.0], [81.6, 242.0], [81.7, 243.0], [81.8, 243.0], [81.9, 243.0], [82.0, 244.0], [82.1, 244.0], [82.2, 244.0], [82.3, 245.0], [82.4, 245.0], [82.5, 245.0], [82.6, 246.0], [82.7, 246.0], [82.8, 246.0], [82.9, 247.0], [83.0, 247.0], [83.1, 247.0], [83.2, 248.0], [83.3, 248.0], [83.4, 249.0], [83.5, 249.0], [83.6, 249.0], [83.7, 250.0], [83.8, 250.0], [83.9, 251.0], [84.0, 251.0], [84.1, 252.0], [84.2, 252.0], [84.3, 253.0], [84.4, 253.0], [84.5, 254.0], [84.6, 254.0], [84.7, 255.0], [84.8, 255.0], [84.9, 256.0], [85.0, 256.0], [85.1, 257.0], [85.2, 257.0], [85.3, 258.0], [85.4, 258.0], [85.5, 259.0], [85.6, 259.0], [85.7, 260.0], [85.8, 260.0], [85.9, 261.0], [86.0, 261.0], [86.1, 262.0], [86.2, 263.0], [86.3, 263.0], [86.4, 264.0], [86.5, 264.0], [86.6, 265.0], [86.7, 265.0], [86.8, 266.0], [86.9, 266.0], [87.0, 267.0], [87.1, 268.0], [87.2, 268.0], [87.3, 269.0], [87.4, 269.0], [87.5, 270.0], [87.6, 271.0], [87.7, 271.0], [87.8, 272.0], [87.9, 272.0], [88.0, 273.0], [88.1, 273.0], [88.2, 274.0], [88.3, 275.0], [88.4, 275.0], [88.5, 276.0], [88.6, 277.0], [88.7, 277.0], [88.8, 278.0], [88.9, 279.0], [89.0, 280.0], [89.1, 280.0], [89.2, 281.0], [89.3, 282.0], [89.4, 282.0], [89.5, 283.0], [89.6, 284.0], [89.7, 284.0], [89.8, 285.0], [89.9, 286.0], [90.0, 287.0], [90.1, 287.0], [90.2, 288.0], [90.3, 289.0], [90.4, 290.0], [90.5, 291.0], [90.6, 292.0], [90.7, 293.0], [90.8, 294.0], [90.9, 294.0], [91.0, 295.0], [91.1, 296.0], [91.2, 297.0], [91.3, 298.0], [91.4, 299.0], [91.5, 300.0], [91.6, 301.0], [91.7, 302.0], [91.8, 303.0], [91.9, 304.0], [92.0, 305.0], [92.1, 306.0], [92.2, 307.0], [92.3, 309.0], [92.4, 310.0], [92.5, 311.0], [92.6, 312.0], [92.7, 314.0], [92.8, 315.0], [92.9, 317.0], [93.0, 318.0], [93.1, 319.0], [93.2, 320.0], [93.3, 321.0], [93.4, 323.0], [93.5, 324.0], [93.6, 325.0], [93.7, 327.0], [93.8, 328.0], [93.9, 330.0], [94.0, 332.0], [94.1, 334.0], [94.2, 335.0], [94.3, 338.0], [94.4, 340.0], [94.5, 342.0], [94.6, 344.0], [94.7, 346.0], [94.8, 349.0], [94.9, 352.0], [95.0, 354.0], [95.1, 357.0], [95.2, 359.0], [95.3, 362.0], [95.4, 364.0], [95.5, 367.0], [95.6, 370.0], [95.7, 372.0], [95.8, 375.0], [95.9, 378.0], [96.0, 382.0], [96.1, 385.0], [96.2, 389.0], [96.3, 393.0], [96.4, 396.0], [96.5, 399.0], [96.6, 403.0], [96.7, 407.0], [96.8, 411.0], [96.9, 416.0], [97.0, 421.0], [97.1, 426.0], [97.2, 431.0], [97.3, 438.0], [97.4, 443.0], [97.5, 447.0], [97.6, 452.0], [97.7, 458.0], [97.8, 465.0], [97.9, 472.0], [98.0, 481.0], [98.1, 490.0], [98.2, 499.0], [98.3, 508.0], [98.4, 517.0], [98.5, 528.0], [98.6, 540.0], [98.7, 553.0], [98.8, 568.0], [98.9, 584.0], [99.0, 603.0], [99.1, 623.0], [99.2, 645.0], [99.3, 672.0], [99.4, 695.0], [99.5, 728.0], [99.6, 781.0], [99.7, 851.0], [99.8, 971.0], [99.9, 1090.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 161544.0, "series": [{"data": [[0.0, 161544.0], [600.0, 210.0], [700.0, 94.0], [200.0, 7588.0], [800.0, 170.0], [900.0, 136.0], [1000.0, 12.0], [1100.0, 59.0], [300.0, 1988.0], [1200.0, 4.0], [100.0, 76874.0], [400.0, 985.0], [1600.0, 2.0], [500.0, 334.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 160143.0], [600.0, 249.0], [700.0, 65.0], [200.0, 7460.0], [800.0, 83.0], [900.0, 54.0], [1000.0, 17.0], [1100.0, 33.0], [300.0, 1966.0], [1200.0, 6.0], [100.0, 79038.0], [400.0, 555.0], [1600.0, 2.0], [500.0, 329.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 53327.0], [600.0, 1068.0], [700.0, 539.0], [200.0, 73516.0], [800.0, 305.0], [900.0, 197.0], [1000.0, 185.0], [1100.0, 145.0], [300.0, 12575.0], [1200.0, 63.0], [1400.0, 5.0], [1500.0, 13.0], [100.0, 101864.0], [400.0, 4246.0], [1600.0, 4.0], [1700.0, 1.0], [1800.0, 4.0], [1900.0, 1.0], [500.0, 1942.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 743699.0, "series": [{"data": [[0.0, 743699.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1850.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 4.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 4447.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 93.7199947930227, "minX": 1.646352E12, "maxY": 498.9491786148477, "series": [{"data": [[1.64635206E12, 498.9491786148477], [1.646352E12, 219.72630016696579], [1.64635218E12, 93.7199947930227], [1.64635212E12, 487.44394473412365]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64635218E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 492.8842592592593, "series": [{"data": [[2.0, 0.0], [3.0, 1.1666666666666665], [4.0, 1.0000000000000002], [5.0, 1.0], [6.0, 1.625], [7.0, 1.25], [8.0, 1.8518518518518516], [9.0, 0.6666666666666667], [10.0, 1.0], [11.0, 3.3888888888888884], [12.0, 1.5882352941176467], [13.0, 11.0], [14.0, 5.25], [15.0, 0.7692307692307693], [16.0, 0.6], [17.0, 0.6666666666666666], [18.0, 1.6249999999999993], [19.0, 2.8947368421052637], [20.0, 3.6], [21.0, 3.6153846153846154], [22.0, 5.666666666666667], [23.0, 5.0], [24.0, 3.3404255319148954], [25.0, 7.0], [26.0, 8.049999999999999], [27.0, 6.344827586206897], [28.0, 5.857142857142857], [29.0, 8.333333333333332], [30.0, 8.533333333333333], [31.0, 11.142857142857142], [33.0, 3.0], [32.0, 10.90909090909091], [35.0, 4.0], [34.0, 5.84], [36.0, 7.851851851851851], [37.0, 8.57142857142857], [38.0, 13.605633802816902], [39.0, 17.357142857142854], [40.0, 9.314285714285715], [41.0, 5.625], [42.0, 12.018867924528305], [43.0, 10.70689655172414], [44.0, 5.7142857142857135], [45.0, 3.444444444444444], [46.0, 25.4], [47.0, 23.866666666666664], [48.0, 24.904761904761905], [49.0, 29.0], [50.0, 26.259259259259256], [51.0, 23.533333333333335], [52.0, 27.481481481481477], [53.0, 30.531249999999996], [54.0, 4.63157894736842], [55.0, 4.523809523809524], [56.0, 5.0588235294117645], [57.0, 1.6], [58.0, 32.14285714285714], [59.0, 52.84615384615386], [60.0, 3.733333333333333], [61.0, 6.428571428571428], [62.0, 13.090909090909088], [63.0, 15.79310344827586], [64.0, 25.0], [65.0, 19.875], [66.0, 12.17647058823529], [67.0, 18.615384615384613], [68.0, 20.272727272727277], [69.0, 18.87878787878789], [70.0, 31.904761904761916], [71.0, 14.044444444444444], [72.0, 8.452830188679245], [73.0, 24.92], [74.0, 24.636363636363633], [75.0, 7.3999999999999995], [76.0, 5.241379310344828], [77.0, 13.12121212121212], [78.0, 25.476190476190474], [79.0, 11.434782608695652], [80.0, 23.054054054054053], [81.0, 14.611111111111107], [82.0, 55.64000000000001], [83.0, 18.39285714285714], [84.0, 11.3125], [85.0, 16.5], [86.0, 32.0], [87.0, 27.41176470588235], [89.0, 3.9999999999999987], [88.0, 22.750000000000004], [90.0, 41.84615384615385], [91.0, 54.58333333333334], [92.0, 11.407894736842108], [94.0, 29.866666666666664], [93.0, 28.76923076923077], [95.0, 24.125], [96.0, 39.42105263157895], [97.0, 22.249999999999996], [98.0, 43.82608695652174], [99.0, 51.878048780487816], [100.0, 37.972972972972975], [102.0, 16.9375], [101.0, 40.800000000000004], [103.0, 21.599999999999998], [104.0, 56.83333333333333], [105.0, 5.076923076923078], [106.0, 44.47619047619047], [107.0, 11.542372881355936], [108.0, 58.666666666666664], [110.0, 51.55555555555554], [109.0, 32.88], [111.0, 11.125], [112.0, 25.310344827586206], [115.0, 24.599999999999998], [113.0, 29.8], [114.0, 24.499999999999996], [116.0, 23.36734693877551], [117.0, 37.91764705882351], [118.0, 53.086956521739125], [119.0, 65.3529411764706], [120.0, 31.17647058823529], [121.0, 43.1875], [122.0, 35.72727272727273], [123.0, 32.17499999999998], [124.0, 28.42857142857143], [125.0, 41.86206896551723], [127.0, 43.29166666666667], [126.0, 18.225352112676052], [128.0, 23.750000000000007], [129.0, 24.0], [130.0, 19.86842105263158], [131.0, 41.27272727272727], [132.0, 24.3030303030303], [133.0, 26.441176470588232], [134.0, 34.85714285714287], [135.0, 49.090909090909086], [136.0, 31.022222222222222], [137.0, 22.529411764705884], [138.0, 36.099999999999994], [139.0, 45.05357142857141], [140.0, 51.18181818181818], [141.0, 29.18181818181818], [142.0, 22.950000000000003], [143.0, 38.86666666666667], [144.0, 24.49242424242424], [145.0, 29.173913043478258], [146.0, 30.096774193548384], [147.0, 29.129629629629623], [150.0, 47.127659574468076], [148.0, 13.11111111111111], [151.0, 36.51428571428572], [149.0, 16.551724137931032], [153.0, 26.166666666666668], [152.0, 66.49999999999999], [154.0, 20.942857142857143], [155.0, 29.186440677966093], [159.0, 37.730769230769226], [158.0, 23.34782608695652], [156.0, 46.38333333333333], [157.0, 70.26666666666667], [161.0, 56.81818181818182], [163.0, 89.49999999999999], [164.0, 25.0], [165.0, 18.596491228070178], [166.0, 78.58823529411764], [167.0, 35.666666666666664], [162.0, 29.5], [160.0, 20.0], [168.0, 39.33333333333333], [169.0, 30.95652173913043], [170.0, 16.83333333333334], [171.0, 9.000000000000002], [172.0, 18.6], [173.0, 40.60919540229882], [174.0, 87.0238095238095], [175.0, 52.95], [176.0, 27.41176470588235], [177.0, 30.9], [178.0, 86.48275862068962], [179.0, 104.91304347826087], [180.0, 88.91666666666666], [181.0, 87.2], [182.0, 70.25], [183.0, 35.612903225806456], [184.0, 85.67857142857142], [185.0, 54.28125], [186.0, 59.478260869565226], [187.0, 28.206896551724135], [188.0, 21.0], [189.0, 39.0], [190.0, 50.85714285714285], [191.0, 64.82894736842107], [192.0, 22.76470588235295], [195.0, 27.641509433962263], [196.0, 17.864864864864863], [197.0, 17.71830985915492], [194.0, 58.333333333333336], [198.0, 17.464285714285708], [199.0, 19.175], [193.0, 29.688888888888883], [202.0, 8.419642857142858], [203.0, 11.666666666666666], [204.0, 15.761904761904766], [205.0, 8.526315789473685], [207.0, 36.368421052631575], [206.0, 20.470588235294116], [201.0, 11.071428571428571], [200.0, 16.22222222222222], [208.0, 44.03124999999999], [211.0, 40.124999999999986], [210.0, 21.459459459459456], [212.0, 20.902439024390244], [209.0, 24.7], [213.0, 1.875], [214.0, 28.789473684210524], [215.0, 39.73333333333334], [216.0, 21.4], [217.0, 42.55555555555555], [218.0, 65.8021978021978], [219.0, 82.17543859649126], [220.0, 45.28571428571428], [221.0, 56.64], [222.0, 51.07692307692308], [223.0, 54.45454545454545], [224.0, 108.06666666666665], [225.0, 62.23076923076924], [230.0, 101.04999999999998], [231.0, 59.92452830188681], [227.0, 56.78947368421052], [228.0, 98.50704225352106], [226.0, 92.14999999999999], [229.0, 12.875000000000002], [232.0, 12.03030303030303], [233.0, 48.842857142857135], [234.0, 68.59322033898306], [235.0, 58.891891891891866], [236.0, 36.97142857142857], [237.0, 8.26315789473684], [238.0, 3.1578947368421053], [239.0, 2.8607594936708867], [240.0, 23.666666666666668], [241.0, 10.0], [243.0, 55.416666666666664], [244.0, 45.87499999999999], [245.0, 29.272727272727277], [246.0, 74.4736842105263], [242.0, 43.54545454545454], [247.0, 30.26], [251.0, 85.49999999999997], [252.0, 69.66666666666666], [253.0, 31.29411764705883], [254.0, 96.85074626865672], [250.0, 43.500000000000014], [255.0, 98.27551020408163], [249.0, 20.366666666666674], [248.0, 49.45], [257.0, 48.80434782608697], [256.0, 75.70270270270268], [258.0, 43.145833333333336], [259.0, 99.03333333333336], [260.0, 39.440000000000005], [261.0, 47.88888888888889], [262.0, 43.79545454545454], [263.0, 90.76923076923077], [264.0, 58.5121951219512], [268.0, 89.79166666666667], [269.0, 82.875], [271.0, 137.7037037037037], [270.0, 42.51724137931034], [267.0, 70.53571428571428], [266.0, 61.85714285714286], [265.0, 66.46153846153847], [272.0, 239.59615384615387], [274.0, 186.41666666666666], [275.0, 145.42857142857144], [285.0, 124.27906976744187], [284.0, 7.333333333333333], [273.0, 225.17777777777775], [277.0, 185.125], [276.0, 95.15625000000004], [278.0, 72.38888888888889], [287.0, 67.27272727272728], [281.0, 120.96703296703295], [282.0, 47.33333333333333], [283.0, 142.60784313725492], [280.0, 33.25], [286.0, 46.923076923076906], [279.0, 33.92857142857142], [295.0, 49.06666666666667], [288.0, 74.07894736842104], [290.0, 81.1904761904762], [291.0, 75.90566037735847], [300.0, 16.6], [301.0, 6.217391304347825], [302.0, 10.093750000000002], [303.0, 14.285714285714292], [292.0, 42.21739130434783], [293.0, 34.60869565217392], [294.0, 50.94871794871796], [296.0, 4.923076923076923], [297.0, 25.47058823529412], [298.0, 16.23684210526316], [299.0, 17.666666666666664], [289.0, 15.625], [307.0, 18.33333333333334], [305.0, 5.788461538461537], [304.0, 33.13333333333335], [311.0, 45.04687500000001], [306.0, 16.115384615384613], [309.0, 65.5], [308.0, 55.99999999999999], [312.0, 78.72727272727273], [319.0, 7.375], [317.0, 33.77777777777778], [316.0, 47.956521739130444], [318.0, 9.971428571428572], [310.0, 47.84210526315791], [313.0, 21.717948717948723], [314.0, 8.620253164556962], [315.0, 17.453124999999996], [323.0, 9.896551724137934], [321.0, 8.190476190476192], [320.0, 8.020000000000001], [322.0, 6.833333333333332], [324.0, 39.93406593406592], [326.0, 12.999999999999996], [325.0, 8.222222222222221], [327.0, 96.46153846153848], [328.0, 30.973684210526322], [329.0, 93.77049180327873], [331.0, 24.511111111111113], [330.0, 6.6], [332.0, 28.2051282051282], [333.0, 18.650000000000002], [334.0, 21.228571428571428], [335.0, 21.185185185185183], [350.0, 131.12499999999997], [338.0, 29.148148148148145], [337.0, 49.02631578947367], [336.0, 12.187499999999998], [339.0, 73.26530612244896], [349.0, 125.84523809523813], [348.0, 105.24475524475518], [351.0, 97.24305555555554], [340.0, 83.96666666666667], [342.0, 55.00000000000001], [341.0, 88.8736842105263], [343.0, 112.40740740740743], [344.0, 236.0], [345.0, 71.94000000000001], [346.0, 74.95867768595043], [347.0, 138.0338983050847], [355.0, 70.10389610389612], [353.0, 140.46666666666667], [352.0, 92.85714285714286], [354.0, 98.27118644067797], [356.0, 84.07142857142857], [358.0, 128.0], [357.0, 53.333333333333336], [359.0, 150.375], [360.0, 104.58333333333334], [366.0, 160.0], [367.0, 130.98275862068962], [365.0, 96.62962962962962], [364.0, 98.1311475409836], [361.0, 24.230769230769226], [362.0, 35.384615384615394], [363.0, 121.94871794871793], [369.0, 51.80645161290323], [368.0, 69.67647058823529], [370.0, 22.682352941176465], [371.0, 13.470588235294118], [372.0, 7.9090909090909145], [373.0, 19.116666666666667], [374.0, 67.27210884353738], [375.0, 138.10062893081766], [376.0, 71.96666666666667], [383.0, 74.42857142857147], [381.0, 42.12820512820512], [380.0, 56.699999999999996], [382.0, 90.68421052631578], [377.0, 100.19999999999999], [378.0, 62.6], [379.0, 53.083333333333336], [386.0, 188.26190476190473], [387.0, 39.53246753246755], [396.0, 1.4444444444444446], [397.0, 11.666666666666666], [398.0, 6.636363636363635], [399.0, 65.72340425531917], [385.0, 80.10382513661204], [384.0, 68.5925925925926], [388.0, 4.923076923076923], [389.0, 14.833333333333334], [390.0, 17.68309859154929], [391.0, 20.3953488372093], [392.0, 8.039215686274511], [393.0, 60.23588039867104], [394.0, 22.162162162162165], [395.0, 9.35294117647059], [401.0, 71.75609756097563], [400.0, 21.358974358974358], [402.0, 27.9375], [403.0, 66.50515463917526], [404.0, 52.567901234567906], [405.0, 49.669724770642205], [408.0, 114.32407407407405], [409.0, 69.66666666666666], [410.0, 108.08421052631576], [411.0, 110.60975609756096], [406.0, 96.18918918918921], [407.0, 93.92857142857143], [413.0, 59.84615384615384], [412.0, 100.04651162790697], [414.0, 59.45070422535211], [415.0, 105.71428571428571], [430.0, 36.35294117647059], [416.0, 122.05511811023622], [417.0, 160.34375000000003], [418.0, 104.29729729729726], [422.0, 28.695652173913043], [421.0, 1.3333333333333333], [420.0, 41.85294117647059], [423.0, 41.0], [424.0, 16.612903225806452], [425.0, 64.54918032786885], [426.0, 76.29807692307693], [427.0, 101.72727272727272], [431.0, 23.999999999999996], [429.0, 83.68115942028984], [428.0, 139.38461538461536], [419.0, 101.06976744186049], [439.0, 77.55263157894743], [436.0, 93.49822064056936], [437.0, 70.76190476190479], [438.0, 64.36206896551724], [440.0, 98.54065040650406], [435.0, 93.07142857142857], [444.0, 85.09790209790215], [445.0, 84.98305084745763], [446.0, 41.30434782608695], [447.0, 83.33333333333333], [441.0, 54.75000000000001], [442.0, 82.25688073394493], [443.0, 55.133333333333326], [432.0, 87.3974358974359], [433.0, 159.8695652173913], [434.0, 89.30555555555559], [461.0, 88.343023255814], [449.0, 80.75464684014868], [448.0, 104.87697160883279], [450.0, 62.2790697674419], [460.0, 61.5], [451.0, 89.47872340425533], [453.0, 41.666666666666664], [452.0, 87.25685785536166], [455.0, 90.97590361445786], [457.0, 156.7194244604315], [459.0, 30.23762376237624], [458.0, 204.39473684210526], [463.0, 85.40594059405936], [456.0, 123.26086956521738], [454.0, 202.35937499999994], [462.0, 37.82500000000001], [477.0, 51.71755725190834], [472.0, 64.3836276083467], [473.0, 100.53703703703708], [471.0, 72.41541755888655], [470.0, 282.7818181818182], [469.0, 157.72222222222237], [468.0, 108.65822784810128], [474.0, 58.006211180124296], [475.0, 202.5121951219512], [479.0, 10.666666666666666], [478.0, 87.79032258064518], [476.0, 97.73936170212772], [467.0, 70.82467532467537], [466.0, 77.7001647446457], [465.0, 89.79591836734696], [464.0, 32.458333333333336], [494.0, 96.64048165137604], [483.0, 88.76972281449895], [484.0, 96.58471760797346], [493.0, 99.68518518518516], [495.0, 78.61764705882354], [492.0, 99.50616016427111], [491.0, 92.16393442622947], [489.0, 100.87679083094558], [490.0, 139.12499999999997], [488.0, 112.36589403973512], [481.0, 36.83999999999999], [480.0, 1.0000000000000002], [482.0, 97.1107544141252], [487.0, 91.28726287262884], [486.0, 96.55397148676177], [485.0, 107.54678168546783], [496.0, 100.0835913312694], [499.0, 99.89090909090912], [500.0, 90.97717323765525], [498.0, 89.91366120218574], [497.0, 86.74358974358975], [1.0, 0.33333333333333337]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[481.58913599999363, 88.50004400000134]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 1.0], [3.0, 1.1666666666666665], [4.0, 0.3333333333333334], [5.0, 1.0], [6.0, 0.75], [7.0, 0.75], [8.0, 1.666666666666667], [9.0, 3.0], [10.0, 0.5], [11.0, 1.166666666666667], [12.0, 7.0588235294117645], [13.0, 12.0], [14.0, 1.25], [15.0, 2.230769230769231], [16.0, 1.5], [17.0, 1.3333333333333335], [18.0, 1.875], [19.0, 3.6842105263157894], [20.0, 4.4], [21.0, 4.384615384615385], [22.0, 3.0], [23.0, 10.0], [24.0, 4.659574468085108], [25.0, 4.0], [26.0, 4.449999999999999], [27.0, 6.0], [28.0, 4.428571428571429], [29.0, 10.166666666666668], [30.0, 11.133333333333335], [31.0, 13.571428571428571], [33.0, 5.0], [32.0, 11.136363636363635], [35.0, 31.333333333333336], [34.0, 12.92], [36.0, 23.481481481481485], [37.0, 70.14285714285715], [38.0, 35.7323943661972], [39.0, 40.857142857142854], [40.0, 12.828571428571435], [41.0, 16.874999999999996], [42.0, 43.84905660377359], [43.0, 13.603448275862073], [44.0, 5.428571428571429], [45.0, 4.388888888888888], [46.0, 7.45], [47.0, 11.266666666666667], [48.0, 44.904761904761905], [49.0, 29.5], [50.0, 16.62962962962963], [51.0, 14.733333333333333], [52.0, 46.44444444444445], [53.0, 9.5], [54.0, 5.2105263157894735], [55.0, 4.380952380952382], [56.0, 2.88235294117647], [57.0, 4.8], [58.0, 5.428571428571429], [59.0, 11.999999999999998], [60.0, 54.866666666666674], [61.0, 29.190476190476186], [62.0, 10.318181818181818], [63.0, 14.931034482758625], [64.0, 37.45833333333332], [65.0, 29.91666666666666], [66.0, 12.882352941176471], [67.0, 19.307692307692307], [68.0, 16.40909090909091], [69.0, 8.484848484848483], [70.0, 21.523809523809526], [71.0, 18.644444444444446], [72.0, 12.396226415094342], [73.0, 28.640000000000004], [74.0, 23.86363636363636], [75.0, 14.969230769230764], [76.0, 7.068965517241378], [77.0, 14.54545454545455], [78.0, 19.38095238095238], [79.0, 38.21739130434782], [80.0, 16.513513513513512], [81.0, 14.999999999999998], [82.0, 24.64], [83.0, 18.321428571428573], [84.0, 8.062500000000002], [85.0, 14.45], [86.0, 23.526315789473678], [87.0, 27.941176470588243], [89.0, 15.857142857142856], [88.0, 21.875000000000004], [90.0, 21.692307692307693], [91.0, 35.416666666666664], [92.0, 10.63157894736842], [94.0, 57.033333333333324], [93.0, 39.46153846153845], [95.0, 16.0], [96.0, 29.473684210526315], [97.0, 36.5625], [98.0, 27.73913043478261], [99.0, 44.17073170731706], [100.0, 35.21621621621621], [102.0, 17.35416666666666], [101.0, 44.57142857142857], [103.0, 18.933333333333334], [104.0, 48.666666666666664], [105.0, 7.653846153846154], [106.0, 24.42857142857143], [107.0, 12.762711864406779], [108.0, 33.16666666666667], [110.0, 42.51851851851851], [109.0, 68.63999999999999], [111.0, 32.125], [112.0, 66.03448275862068], [115.0, 6.2], [113.0, 36.2], [114.0, 10.5], [116.0, 25.530612244897956], [117.0, 30.31764705882352], [118.0, 19.913043478260875], [119.0, 33.411764705882355], [120.0, 31.088235294117663], [121.0, 26.437499999999996], [122.0, 64.9090909090909], [123.0, 42.675], [124.0, 38.45714285714286], [125.0, 58.27586206896552], [127.0, 69.625], [126.0, 17.591549295774644], [128.0, 27.72222222222221], [129.0, 43.84615384615385], [130.0, 17.157894736842106], [131.0, 41.54545454545454], [132.0, 29.500000000000007], [133.0, 34.82352941176471], [134.0, 24.36734693877551], [135.0, 31.772727272727273], [136.0, 32.04444444444443], [137.0, 28.17647058823529], [138.0, 28.900000000000002], [139.0, 36.73214285714288], [140.0, 48.27272727272727], [141.0, 37.09090909090909], [142.0, 18.750000000000004], [143.0, 43.266666666666666], [144.0, 24.265151515151512], [145.0, 31.282608695652176], [146.0, 31.709677419354836], [147.0, 46.59259259259259], [150.0, 40.34042553191489], [148.0, 32.703703703703695], [151.0, 42.34285714285714], [149.0, 40.551724137931046], [153.0, 35.58333333333333], [152.0, 45.272727272727266], [154.0, 32.97142857142857], [155.0, 42.23728813559322], [159.0, 52.46153846153846], [158.0, 13.956521739130435], [156.0, 87.45], [157.0, 101.4888888888889], [161.0, 58.127272727272725], [163.0, 35.0], [164.0, 112.125], [165.0, 72.49122807017547], [166.0, 67.47058823529412], [167.0, 33.52380952380951], [162.0, 17.5], [160.0, 25.0], [168.0, 34.844444444444434], [169.0, 29.043478260869563], [170.0, 24.88333333333333], [171.0, 16.714285714285715], [172.0, 25.533333333333335], [173.0, 39.551724137931046], [174.0, 43.30952380952381], [175.0, 27.999999999999996], [176.0, 19.529411764705884], [177.0, 22.0], [178.0, 27.86206896551724], [179.0, 45.869565217391305], [180.0, 50.12499999999999], [181.0, 61.63333333333335], [182.0, 77.44999999999999], [183.0, 46.93548387096772], [184.0, 85.57142857142857], [185.0, 94.68750000000003], [186.0, 91.43478260869566], [187.0, 39.827586206896555], [188.0, 52.714285714285715], [189.0, 39.54545454545455], [190.0, 37.47619047619047], [191.0, 43.31578947368421], [192.0, 37.58823529411764], [195.0, 34.62264150943396], [196.0, 22.932432432432428], [197.0, 24.5774647887324], [194.0, 49.00000000000001], [198.0, 34.392857142857146], [199.0, 23.050000000000008], [193.0, 43.71111111111111], [202.0, 15.29464285714286], [203.0, 9.999999999999998], [204.0, 8.047619047619047], [205.0, 5.947368421052632], [207.0, 15.368421052631579], [206.0, 21.455882352941163], [201.0, 9.999999999999998], [200.0, 5.888888888888888], [208.0, 31.468750000000007], [211.0, 52.25000000000001], [210.0, 32.72972972972975], [212.0, 24.04878048780488], [209.0, 46.3], [213.0, 1.0], [214.0, 36.078947368421055], [215.0, 70.41111111111113], [216.0, 56.79999999999999], [217.0, 47.805555555555564], [218.0, 59.791208791208796], [219.0, 45.771929824561404], [220.0, 34.95238095238096], [221.0, 37.559999999999995], [222.0, 30.461538461538463], [223.0, 26.818181818181813], [224.0, 19.866666666666667], [225.0, 34.897435897435884], [230.0, 171.7], [231.0, 85.92452830188677], [227.0, 42.60526315789473], [228.0, 54.22535211267606], [226.0, 48.9], [229.0, 7.25], [232.0, 32.29292929292929], [233.0, 69.87142857142858], [234.0, 76.91525423728817], [235.0, 45.6891891891892], [236.0, 22.799999999999994], [237.0, 8.578947368421051], [238.0, 1.6842105263157892], [239.0, 9.291139240506334], [240.0, 21.166666666666664], [241.0, 3.875], [243.0, 11.166666666666668], [244.0, 20.750000000000004], [245.0, 18.840909090909086], [246.0, 22.736842105263158], [242.0, 9.818181818181818], [247.0, 27.100000000000005], [251.0, 50.115384615384606], [252.0, 64.58974358974362], [253.0, 18.294117647058822], [254.0, 62.13432835820896], [250.0, 48.40476190476192], [255.0, 71.46938775510205], [249.0, 26.966666666666665], [248.0, 40.99999999999999], [257.0, 66.41304347826085], [256.0, 106.24324324324321], [258.0, 51.875], [259.0, 142.4], [260.0, 62.24], [261.0, 43.388888888888886], [262.0, 46.840909090909086], [263.0, 99.88461538461539], [264.0, 112.51219512195122], [268.0, 250.3125], [269.0, 371.125], [271.0, 124.33333333333333], [270.0, 144.6896551724138], [267.0, 207.14285714285714], [266.0, 259.8571428571429], [265.0, 293.84615384615387], [272.0, 127.92307692307689], [274.0, 61.11666666666667], [275.0, 63.257142857142874], [285.0, 44.86046511627906], [284.0, 18.285714285714285], [273.0, 75.42222222222225], [277.0, 94.70833333333333], [276.0, 65.71875000000001], [278.0, 87.36111111111113], [287.0, 30.727272727272723], [281.0, 63.296703296703306], [282.0, 20.0], [283.0, 66.94117647058822], [280.0, 34.0], [286.0, 51.76923076923078], [279.0, 34.857142857142854], [295.0, 49.66666666666667], [288.0, 49.631578947368425], [290.0, 27.0], [291.0, 47.83018867924528], [300.0, 18.05], [301.0, 13.43478260869565], [302.0, 18.656250000000004], [303.0, 25.357142857142858], [292.0, 63.86956521739131], [293.0, 46.04347826086956], [294.0, 42.23076923076924], [296.0, 21.846153846153847], [297.0, 46.99999999999999], [298.0, 21.500000000000004], [299.0, 11.666666666666668], [289.0, 23.125], [307.0, 24.478260869565222], [305.0, 23.09615384615385], [304.0, 25.133333333333336], [311.0, 39.15624999999999], [306.0, 22.980769230769234], [309.0, 43.6], [308.0, 18.88235294117647], [312.0, 38.909090909090914], [319.0, 22.3125], [317.0, 49.77777777777778], [316.0, 154.56521739130434], [318.0, 35.50000000000001], [310.0, 44.80701754385967], [313.0, 39.38461538461538], [314.0, 58.11392405063288], [315.0, 41.0625], [323.0, 38.20689655172414], [321.0, 27.380952380952383], [320.0, 24.540000000000003], [322.0, 31.854166666666664], [324.0, 21.17582417582418], [326.0, 39.333333333333336], [325.0, 21.0], [327.0, 68.87179487179486], [328.0, 70.42105263157896], [329.0, 71.26229508196721], [331.0, 33.22222222222223], [330.0, 30.0], [332.0, 42.30769230769231], [333.0, 28.1], [334.0, 35.67142857142858], [335.0, 63.222222222222236], [350.0, 69.77777777777777], [338.0, 32.59259259259258], [337.0, 50.684210526315795], [336.0, 30.812500000000007], [339.0, 52.97959183673469], [349.0, 59.94047619047622], [348.0, 70.23776223776224], [351.0, 114.01388888888889], [340.0, 61.96666666666668], [342.0, 38.46666666666667], [341.0, 70.2421052631579], [343.0, 49.74074074074074], [344.0, 66.8], [345.0, 22.119999999999997], [346.0, 35.34710743801655], [347.0, 53.983050847457626], [355.0, 127.20779220779225], [353.0, 58.86666666666667], [352.0, 109.65306122448982], [354.0, 129.4067796610169], [356.0, 84.2142857142857], [358.0, 172.0], [357.0, 77.14814814814812], [359.0, 117.37500000000001], [360.0, 47.5], [366.0, 158.0], [367.0, 131.96551724137933], [365.0, 87.83333333333334], [364.0, 69.44262295081965], [361.0, 13.67692307692308], [362.0, 35.50769230769232], [363.0, 53.179487179487175], [369.0, 45.5483870967742], [368.0, 67.54411764705883], [370.0, 35.41176470588235], [371.0, 6.294117647058823], [372.0, 13.386363636363635], [373.0, 43.933333333333344], [374.0, 109.23129251700679], [375.0, 106.01257861635219], [376.0, 64.73333333333333], [383.0, 130.5079365079365], [381.0, 79.3076923076923], [380.0, 47.13333333333333], [382.0, 131.57894736842107], [377.0, 93.47999999999998], [378.0, 88.4], [379.0, 83.54166666666667], [386.0, 89.9047619047619], [387.0, 37.389610389610404], [396.0, 2.2777777777777777], [397.0, 23.5], [398.0, 38.45454545454546], [399.0, 10.957446808510637], [385.0, 75.61202185792348], [384.0, 60.48148148148147], [388.0, 52.846153846153854], [389.0, 19.821428571428566], [390.0, 25.098591549295794], [391.0, 27.348837209302324], [392.0, 30.058823529411768], [393.0, 60.46179401993356], [394.0, 20.86486486486487], [395.0, 8.735294117647058], [401.0, 55.39024390243903], [400.0, 24.46153846153846], [402.0, 25.3125], [403.0, 70.20618556701031], [404.0, 52.814814814814824], [405.0, 89.20183486238531], [408.0, 158.12499999999997], [409.0, 102.85185185185186], [410.0, 117.25263157894739], [411.0, 153.9268292682927], [406.0, 95.21621621621621], [407.0, 76.64285714285714], [413.0, 169.79487179487174], [412.0, 185.90697674418604], [414.0, 85.46478873239438], [415.0, 54.285714285714285], [430.0, 47.294117647058826], [416.0, 118.02362204724409], [417.0, 77.85937499999997], [418.0, 60.51351351351351], [422.0, 82.43478260869564], [421.0, 9.066666666666666], [420.0, 35.70588235294118], [423.0, 40.6], [424.0, 33.145161290322584], [425.0, 51.97540983606558], [426.0, 60.673076923076934], [427.0, 78.77272727272727], [431.0, 23.800000000000004], [429.0, 69.21739130434784], [428.0, 104.38461538461539], [419.0, 73.93023255813955], [439.0, 101.50877192982456], [436.0, 82.66192170818503], [437.0, 65.63095238095242], [438.0, 87.86206896551725], [440.0, 84.3861788617886], [435.0, 73.05714285714284], [444.0, 67.82517482517483], [445.0, 80.6271186440678], [446.0, 40.91304347826087], [447.0, 110.33333333333333], [441.0, 38.5], [442.0, 73.34862385321102], [443.0, 47.3], [432.0, 39.14102564102563], [433.0, 61.478260869565204], [434.0, 80.70833333333337], [461.0, 47.88662790697671], [449.0, 58.73977695167286], [448.0, 100.54258675078866], [450.0, 63.60132890365442], [460.0, 50.852941176470594], [451.0, 81.23404255319151], [453.0, 58.71794871794872], [452.0, 99.87531172069824], [455.0, 105.3012048192771], [457.0, 126.8273381294965], [459.0, 27.782178217821787], [458.0, 60.44736842105263], [463.0, 74.2244224422442], [456.0, 165.69565217391303], [454.0, 140.34375], [462.0, 56.35833333333334], [477.0, 30.053435114503834], [472.0, 53.59390048154095], [473.0, 37.17901234567904], [471.0, 50.385438972162724], [470.0, 102.78181818181818], [469.0, 157.74722222222212], [468.0, 131.48101265822785], [474.0, 127.56521739130433], [475.0, 102.14634146341461], [479.0, 2.3333333333333335], [478.0, 121.85483870967738], [476.0, 79.6631205673759], [467.0, 85.77272727272725], [466.0, 65.96210873146622], [465.0, 112.46938775510202], [464.0, 52.066666666666656], [494.0, 91.00458715596329], [483.0, 85.81663113006391], [484.0, 125.78737541528227], [493.0, 96.9444444444444], [495.0, 111.5294117647059], [492.0, 89.24743326488698], [491.0, 99.25573770491805], [489.0, 97.31518624641834], [490.0, 97.66071428571432], [488.0, 82.54139072847678], [481.0, 105.77333333333335], [480.0, 5.818181818181819], [482.0, 101.82825040128412], [487.0, 98.1734417344174], [486.0, 81.7820773930754], [485.0, 96.87325812873245], [496.0, 81.49380804953557], [499.0, 71.16363636363634], [500.0, 88.65138030432634], [498.0, 88.71912568306016], [497.0, 43.358974358974365], [1.0, 0.16666666666666666]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[481.5891359999937, 85.93531200000174]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 1.0], [3.0, 2.3333333333333335], [4.0, 1.3333333333333333], [5.0, 2.0], [6.0, 2.375], [7.0, 2.0], [8.0, 3.518518518518518], [9.0, 3.666666666666667], [10.0, 1.5], [11.0, 4.5555555555555545], [12.0, 8.647058823529411], [13.0, 23.0], [14.0, 6.5], [15.0, 3.0], [16.0, 2.1], [17.0, 2.0], [18.0, 3.5833333333333326], [19.0, 6.631578947368421], [20.0, 8.0], [21.0, 8.076923076923077], [22.0, 8.666666666666666], [23.0, 15.0], [24.0, 8.02127659574468], [25.0, 11.0], [26.0, 12.55], [27.0, 12.379310344827585], [28.0, 10.428571428571429], [29.0, 18.5], [30.0, 19.733333333333334], [31.0, 24.714285714285715], [33.0, 8.0], [32.0, 22.090909090909093], [35.0, 35.333333333333336], [34.0, 18.76], [36.0, 32.62962962962963], [37.0, 78.85714285714286], [38.0, 50.154929577464785], [39.0, 66.35714285714285], [40.0, 23.999999999999993], [41.0, 27.375], [42.0, 56.056603773584904], [43.0, 24.46551724137931], [44.0, 12.714285714285717], [45.0, 8.444444444444443], [46.0, 33.849999999999994], [47.0, 35.86666666666666], [48.0, 76.52380952380952], [49.0, 60.45], [50.0, 45.592592592592595], [51.0, 40.26666666666667], [52.0, 74.33333333333333], [53.0, 45.59375], [54.0, 11.052631578947368], [55.0, 9.95238095238095], [56.0, 18.235294117647058], [57.0, 6.4], [58.0, 37.714285714285715], [59.0, 68.43589743589742], [60.0, 74.39999999999999], [61.0, 53.61904761904763], [62.0, 32.86363636363637], [63.0, 35.758620689655174], [64.0, 66.20833333333334], [65.0, 54.62500000000001], [66.0, 25.294117647058822], [67.0, 39.84615384615385], [68.0, 41.63636363636364], [69.0, 28.939393939393938], [70.0, 57.14285714285715], [71.0, 36.13333333333333], [72.0, 21.301886792452834], [73.0, 59.03999999999998], [74.0, 50.68181818181818], [75.0, 23.338461538461537], [76.0, 13.068965517241377], [77.0, 28.696969696969692], [78.0, 45.85714285714286], [79.0, 50.391304347826086], [80.0, 45.37837837837837], [81.0, 35.94444444444445], [82.0, 90.0], [83.0, 36.92857142857142], [84.0, 20.187499999999996], [85.0, 31.800000000000004], [86.0, 60.526315789473685], [87.0, 56.05882352941177], [89.0, 23.928571428571427], [88.0, 47.156249999999986], [90.0, 65.56410256410258], [91.0, 97.1666666666667], [92.0, 22.039473684210535], [94.0, 92.80000000000001], [93.0, 74.61538461538463], [95.0, 44.125], [96.0, 73.99999999999999], [97.0, 62.68749999999999], [98.0, 77.91304347826087], [99.0, 100.51219512195124], [100.0, 77.27027027027026], [102.0, 36.31250000000001], [101.0, 89.54285714285714], [103.0, 41.666666666666664], [104.0, 110.91666666666667], [105.0, 14.230769230769228], [106.0, 73.7142857142857], [107.0, 24.338983050847443], [108.0, 100.50000000000001], [110.0, 108.0], [109.0, 117.79999999999998], [111.0, 55.875], [112.0, 96.75862068965517], [115.0, 30.9], [113.0, 68.6], [114.0, 35.1], [116.0, 48.91836734693879], [117.0, 69.03529411764704], [118.0, 76.04347826086955], [119.0, 107.70588235294117], [120.0, 66.05882352941175], [121.0, 71.62500000000001], [122.0, 102.72727272727272], [123.0, 79.89999999999998], [124.0, 68.14285714285712], [125.0, 111.46551724137926], [127.0, 129.25], [126.0, 35.830985915492974], [128.0, 54.611111111111114], [129.0, 79.15384615384616], [130.0, 37.72368421052631], [131.0, 91.09090909090908], [132.0, 55.25757575757575], [133.0, 67.85294117647058], [134.0, 62.22448979591835], [135.0, 89.45454545454544], [136.0, 66.6222222222222], [137.0, 55.235294117647065], [138.0, 70.9], [139.0, 83.60714285714285], [140.0, 108.84848484848484], [141.0, 72.68181818181819], [142.0, 47.449999999999996], [143.0, 86.13333333333333], [144.0, 50.63636363636363], [145.0, 68.69565217391306], [146.0, 67.12903225806454], [147.0, 76.12962962962963], [150.0, 93.74468085106386], [148.0, 91.29629629629626], [151.0, 81.15714285714289], [149.0, 170.68965517241384], [153.0, 82.125], [152.0, 121.22727272727272], [154.0, 60.79999999999998], [155.0, 85.66101694915258], [159.0, 90.5], [158.0, 38.95652173913043], [156.0, 133.86666666666667], [157.0, 171.75555555555553], [161.0, 116.27272727272727], [163.0, 124.5], [164.0, 137.12500000000003], [165.0, 96.40350877192981], [166.0, 155.01960784313727], [167.0, 76.6190476190476], [162.0, 47.0], [160.0, 45.0], [168.0, 85.3111111111111], [169.0, 68.56521739130433], [170.0, 43.93333333333335], [171.0, 29.714285714285715], [172.0, 44.4], [173.0, 81.67816091954025], [174.0, 133.09523809523813], [175.0, 85.25], [176.0, 47.00000000000001], [177.0, 53.199999999999996], [178.0, 119.93103448275862], [179.0, 167.0434782608696], [180.0, 140.95833333333334], [181.0, 152.13333333333335], [182.0, 151.8], [183.0, 88.33870967741935], [184.0, 192.2857142857143], [185.0, 169.68750000000003], [186.0, 160.60869565217394], [187.0, 71.75862068965517], [188.0, 76.0], [189.0, 78.72727272727273], [190.0, 90.33333333333336], [191.0, 111.88157894736848], [192.0, 64.35294117647057], [195.0, 63.05660377358491], [196.0, 41.48648648648647], [197.0, 42.605633802816904], [194.0, 115.73333333333333], [198.0, 56.25], [199.0, 42.67500000000001], [193.0, 81.86666666666666], [202.0, 23.75892857142857], [203.0, 21.80952380952381], [204.0, 24.33333333333333], [205.0, 14.631578947368421], [207.0, 54.789473684210535], [206.0, 42.02941176470588], [201.0, 21.892857142857142], [200.0, 22.388888888888893], [208.0, 78.4375], [211.0, 106.875], [210.0, 55.270270270270274], [212.0, 44.975609756097576], [209.0, 72.10000000000001], [213.0, 3.125], [214.0, 64.89473684210529], [215.0, 110.16666666666667], [216.0, 79.60000000000001], [217.0, 90.56944444444444], [218.0, 125.75824175824177], [219.0, 128.05263157894737], [220.0, 80.23809523809523], [221.0, 94.36], [222.0, 83.53846153846153], [223.0, 82.12121212121214], [224.0, 138.73333333333335], [225.0, 97.66666666666664], [230.0, 290.7], [231.0, 153.28301886792448], [227.0, 118.1578947368421], [228.0, 159.59154929577463], [226.0, 150.75000000000006], [229.0, 20.125], [232.0, 46.82828282828282], [233.0, 123.3], [234.0, 153.0677966101695], [235.0, 105.972972972973], [236.0, 60.214285714285715], [237.0, 18.210526315789473], [238.0, 4.842105263157895], [239.0, 12.202531645569625], [240.0, 44.833333333333336], [241.0, 14.125], [243.0, 71.41666666666666], [244.0, 66.80000000000001], [245.0, 49.43181818181819], [246.0, 102.02631578947367], [242.0, 58.727272727272734], [247.0, 57.84], [251.0, 144.92307692307693], [252.0, 138.35897435897436], [253.0, 93.58823529411765], [254.0, 168.73880597014931], [250.0, 93.48412698412697], [255.0, 176.01020408163262], [249.0, 47.9], [248.0, 92.75], [257.0, 115.4130434782609], [256.0, 200.18918918918925], [258.0, 100.99999999999999], [259.0, 250.06666666666675], [260.0, 107.22000000000001], [261.0, 102.16666666666667], [262.0, 94.68181818181819], [263.0, 203.88461538461536], [264.0, 171.02439024390247], [268.0, 342.6666666666667], [269.0, 454.0], [271.0, 263.59259259259267], [270.0, 187.2413793103448], [267.0, 278.2857142857143], [266.0, 321.7142857142857], [265.0, 360.3076923076923], [272.0, 370.17307692307685], [274.0, 257.70000000000005], [275.0, 225.82857142857142], [285.0, 170.1627906976744], [284.0, 26.66666666666666], [273.0, 303.4444444444444], [277.0, 319.20833333333337], [276.0, 189.62499999999997], [278.0, 164.22222222222223], [287.0, 110.31818181818181], [281.0, 184.8901098901099], [282.0, 67.66666666666667], [283.0, 209.5686274509804], [280.0, 72.25], [286.0, 104.98461538461541], [279.0, 75.28571428571428], [295.0, 105.93333333333332], [288.0, 128.60526315789468], [290.0, 113.33333333333334], [291.0, 134.45283018867926], [300.0, 35.75], [301.0, 19.91304347826087], [302.0, 28.875000000000004], [303.0, 40.37662337662338], [292.0, 107.82608695652173], [293.0, 91.5217391304348], [294.0, 106.1025641025641], [296.0, 26.76923076923077], [297.0, 72.58823529411765], [298.0, 39.49999999999999], [299.0, 29.333333333333332], [289.0, 41.0], [307.0, 43.79710144927536], [305.0, 31.326923076923073], [304.0, 58.38333333333335], [311.0, 89.54687499999997], [306.0, 40.538461538461526], [309.0, 119.44999999999999], [308.0, 78.5294117647059], [312.0, 122.38636363636363], [319.0, 29.75], [317.0, 87.55555555555557], [316.0, 213.2173913043478], [318.0, 45.82857142857142], [310.0, 97.89473684210529], [313.0, 62.66666666666668], [314.0, 69.46835443037973], [315.0, 59.265625], [323.0, 48.241379310344826], [321.0, 36.19047619047618], [320.0, 32.720000000000006], [322.0, 38.770833333333336], [324.0, 64.25274725274728], [326.0, 52.333333333333336], [325.0, 29.333333333333332], [327.0, 171.07692307692307], [328.0, 112.21052631578951], [329.0, 180.37704918032782], [331.0, 57.73333333333334], [330.0, 36.6], [332.0, 73.1794871794872], [333.0, 46.75], [334.0, 56.900000000000006], [335.0, 85.85185185185186], [350.0, 220.98611111111111], [338.0, 61.77777777777777], [337.0, 99.73684210526312], [336.0, 42.99999999999999], [339.0, 126.48979591836738], [349.0, 219.8095238095238], [348.0, 189.83916083916088], [351.0, 215.81250000000003], [340.0, 146.23333333333332], [342.0, 93.46666666666667], [341.0, 159.13684210526318], [343.0, 162.5925925925926], [344.0, 302.8], [345.0, 94.19999999999999], [346.0, 110.62809917355371], [347.0, 210.69491525423726], [355.0, 197.32467532467535], [353.0, 237.73333333333332], [352.0, 209.32653061224488], [354.0, 230.6779661016949], [356.0, 170.64285714285714], [358.0, 300.0], [357.0, 130.48148148148147], [359.0, 267.875], [360.0, 152.24999999999997], [366.0, 318.0555555555555], [367.0, 262.9827586206896], [365.0, 191.64814814814815], [364.0, 171.93442622950818], [361.0, 37.90769230769231], [362.0, 71.70769230769231], [363.0, 181.025641025641], [369.0, 98.38709677419355], [368.0, 137.2205882352941], [370.0, 58.10588235294119], [371.0, 19.823529411764707], [372.0, 21.409090909090903], [373.0, 110.18333333333334], [374.0, 196.93197278911563], [375.0, 270.09433962264154], [376.0, 309.0000000000001], [383.0, 208.39682539682534], [381.0, 128.23076923076925], [380.0, 115.19999999999999], [382.0, 231.36842105263156], [377.0, 322.2800000000001], [378.0, 151.2], [379.0, 136.66666666666669], [386.0, 278.2142857142857], [387.0, 76.97402597402602], [396.0, 3.833333333333334], [397.0, 35.16666666666667], [398.0, 68.72727272727272], [399.0, 81.00000000000001], [385.0, 157.1147540983606], [384.0, 136.29629629629628], [388.0, 91.46153846153845], [389.0, 35.69047619047618], [390.0, 42.85211267605632], [391.0, 48.13953488372093], [392.0, 38.2156862745098], [393.0, 120.72093023255817], [394.0, 43.13513513513514], [395.0, 18.352941176470594], [401.0, 127.80487804878044], [400.0, 47.87179487179486], [402.0, 58.25], [403.0, 137.59793814432993], [404.0, 105.48148148148148], [405.0, 269.85321100917446], [408.0, 492.8842592592593], [409.0, 172.51851851851856], [410.0, 225.3368421052632], [411.0, 278.5365853658538], [406.0, 193.40540540540542], [407.0, 170.57142857142856], [413.0, 296.2307692307692], [412.0, 287.3255813953489], [414.0, 144.97183098591543], [415.0, 160.0], [430.0, 101.64705882352939], [416.0, 241.015748031496], [417.0, 238.234375], [418.0, 164.99999999999994], [422.0, 121.30434782608697], [421.0, 10.4], [420.0, 77.58823529411765], [423.0, 81.6], [424.0, 56.06451612903225], [425.0, 119.8360655737705], [426.0, 140.38461538461536], [427.0, 180.5151515151515], [431.0, 52.79999999999998], [429.0, 153.04347826086956], [428.0, 243.76923076923077], [419.0, 175.04651162790702], [439.0, 179.1929824561403], [436.0, 176.17793594306056], [437.0, 136.69345238095244], [438.0, 152.84482758620686], [440.0, 183.09349593495935], [435.0, 167.22857142857137], [444.0, 153.36363636363635], [445.0, 166.44067796610176], [446.0, 88.13043478260869], [447.0, 193.66666666666666], [441.0, 97.96428571428571], [442.0, 155.67889908256885], [443.0, 103.53333333333335], [432.0, 132.3461538461539], [433.0, 221.3913043478261], [434.0, 185.1180555555555], [461.0, 144.1686046511628], [449.0, 141.6654275092937], [448.0, 205.43848580441636], [450.0, 125.88372093023256], [460.0, 112.3529411764706], [451.0, 170.71276595744695], [453.0, 107.53846153846155], [452.0, 187.14962593516225], [455.0, 205.13253012048193], [457.0, 283.58992805755383], [459.0, 58.02970297029704], [458.0, 264.8421052631578], [463.0, 164.49504950495052], [456.0, 288.9565217391305], [454.0, 342.76562499999994], [462.0, 94.2], [477.0, 85.6030534351145], [472.0, 118.00160513643638], [473.0, 154.99382716049382], [471.0, 123.43897216274087], [470.0, 385.5999999999999], [469.0, 315.49444444444475], [468.0, 240.1708860759493], [474.0, 187.35403726708086], [475.0, 304.65853658536594], [479.0, 13.0], [478.0, 209.66129032258064], [476.0, 177.42907801418463], [467.0, 156.75974025974017], [466.0, 143.68039538714996], [465.0, 202.30612244897966], [464.0, 84.54166666666667], [494.0, 187.91227064220178], [483.0, 175.78038379530923], [484.0, 224.3355481727575], [493.0, 196.88271604938282], [495.0, 190.2352941176471], [492.0, 188.88295687885017], [491.0, 191.4426229508196], [489.0, 198.23495702005724], [490.0, 236.7857142857143], [488.0, 194.80132450331132], [481.0, 142.72000000000003], [480.0, 6.878787878787878], [482.0, 199.00642054574652], [487.0, 189.34823848238486], [486.0, 178.3503054989817], [485.0, 204.68944923689443], [496.0, 181.69040247678], [499.0, 171.0727272727273], [500.0, 184.29537905226547], [498.0, 178.65245901639358], [497.0, 130.10256410256406], [1.0, 0.5]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[481.5891359999937, 179.0787559999984]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 21634.066666666666, "minX": 1.646352E12, "maxY": 2.0342444833333332E7, "series": [{"data": [[1.64635206E12, 1.11633728E7], [1.646352E12, 695064.2], [1.64635218E12, 335618.1666666667], [1.64635212E12, 2.0342444833333332E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64635206E12, 723591.7666666667], [1.646352E12, 45348.96666666667], [1.64635218E12, 21634.066666666666], [1.64635212E12, 1317758.5333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64635218E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 18.142303218301656, "minX": 1.646352E12, "maxY": 184.3989072786262, "series": [{"data": [[1.64635206E12, 84.73177499271326], [1.646352E12, 62.88424798651445], [1.64635218E12, 18.142303218301656], [1.64635212E12, 92.60375415048769]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.64635206E12, 79.47826643844324], [1.646352E12, 54.40287638813038], [1.64635218E12, 21.41204437400957], [1.64635212E12, 91.64056834633699]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.64635206E12, 176.6880209851327], [1.646352E12, 127.90766061060117], [1.64635218E12, 42.08414113997673], [1.64635212E12, 184.3989072786262]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64635218E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 18.13687475765803, "minX": 1.646352E12, "maxY": 92.58790713147818, "series": [{"data": [[1.64635206E12, 83.92545613523711], [1.646352E12, 62.13504401573313], [1.64635218E12, 18.13687475765803], [1.64635212E12, 92.58790713147818]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.64635206E12, 79.44453371525776], [1.646352E12, 54.3300564354634], [1.64635218E12, 21.41204437400957], [1.64635212E12, 91.63981883640325]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.64635206E12, 79.62810842320053], [1.646352E12, 50.343697321595734], [1.64635218E12, 23.919348584722684], [1.64635212E12, 91.61355537499874]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64635218E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.646352E12, "maxY": 1.4041503934712944, "series": [{"data": [[1.64635206E12, 0.0], [1.646352E12, 0.0], [1.64635218E12, 0.0], [1.64635212E12, 0.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.64635206E12, 1.4039426648502025], [1.646352E12, 1.2849080648097544], [1.64635218E12, 0.0], [1.64635212E12, 0.04319611536046815]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.64635206E12, 1.4041503934712944], [1.646352E12, 1.3219704064431521], [1.64635218E12, 0.0], [1.64635212E12, 0.043977556987210266]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64635218E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.646352E12, "maxY": 1667.0, "series": [{"data": [[1.64635206E12, 1667.0], [1.646352E12, 626.0], [1.64635218E12, 467.0], [1.64635212E12, 917.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64635206E12, 8.0], [1.646352E12, 1.0], [1.64635218E12, 0.0], [1.64635212E12, 0.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64635206E12, 9.0], [1.646352E12, 1.0], [1.64635218E12, 0.0], [1.64635212E12, 0.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64635206E12, 9.0], [1.646352E12, 1.0], [1.64635218E12, 0.0], [1.64635212E12, 0.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64635206E12, 0.0], [1.646352E12, 0.0], [1.64635218E12, 0.0], [1.64635212E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64635206E12, 81.0], [1.646352E12, 49.0], [1.64635218E12, 9.0], [1.64635212E12, 26.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64635218E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 9.0, "minX": 331.0, "maxY": 1167.0, "series": [{"data": [[8677.0, 25.0], [9031.0, 57.0], [331.0, 15.0], [1929.0, 51.5], [2035.0, 39.0], [2170.0, 24.0], [2140.0, 54.0], [2242.0, 60.0], [2218.0, 35.0], [2405.0, 26.0], [2442.0, 59.0], [2593.0, 119.5], [2604.0, 161.0], [2766.0, 89.0], [2706.0, 91.0], [2698.0, 77.0], [2703.0, 74.0], [2762.0, 79.0], [2847.0, 56.0], [2922.0, 25.0], [2940.0, 44.0], [2948.0, 66.5], [3031.0, 39.0], [3050.0, 30.0], [3053.0, 41.0], [2954.0, 95.0], [3086.0, 66.5], [3165.0, 36.0], [3107.0, 34.0], [3256.0, 44.0], [3215.0, 61.0], [3269.0, 63.0], [3337.0, 34.0], [3386.0, 55.0], [3457.0, 34.0], [3473.0, 62.0], [3609.0, 70.0], [3901.0, 26.0], [3887.0, 76.0], [3939.0, 66.0], [4071.0, 33.0], [4276.0, 144.0], [4117.0, 72.0], [4302.0, 93.0], [4488.0, 44.0], [4497.0, 24.0], [4437.0, 62.0], [4637.0, 79.0], [4640.0, 50.0], [4634.0, 80.0], [4633.0, 41.0], [4874.0, 46.0], [5309.0, 74.0], [5442.0, 45.0], [5388.0, 108.0], [5575.0, 125.0], [5840.0, 85.0], [5977.0, 116.0], [6121.0, 106.0], [6026.0, 63.0], [6068.0, 60.0], [6133.0, 94.0], [6366.0, 74.0], [6327.0, 90.0], [6230.0, 94.0], [6454.0, 103.0], [6663.0, 87.0], [6725.0, 87.0], [6696.0, 98.0], [6862.0, 128.0], [7235.0, 94.0], [7303.0, 117.0], [7314.0, 112.0], [7390.0, 125.0], [7410.0, 111.0], [7269.0, 111.0], [7365.0, 120.0], [7628.0, 122.0], [7433.0, 98.0], [7541.0, 63.0], [7656.0, 85.0], [7559.0, 111.0], [7615.0, 118.0], [7605.0, 106.0], [7623.0, 108.0], [7627.0, 116.0], [7452.0, 115.0], [7637.0, 100.0], [7646.0, 112.0], [7632.0, 119.0], [7673.0, 117.0], [7527.0, 98.0], [7499.0, 115.0], [7889.0, 100.0], [7908.0, 104.0], [7861.0, 108.0], [7846.0, 109.0], [7864.0, 106.0], [7825.0, 111.0], [7891.0, 107.0], [7776.0, 102.0], [7793.0, 110.0], [7883.0, 115.0], [7721.0, 120.0], [7682.0, 9.0], [7875.0, 107.0], [7745.0, 108.0], [7751.0, 108.0], [7828.0, 119.0], [8135.0, 103.0], [7951.0, 96.0], [8165.0, 101.0], [8076.0, 99.0], [8160.0, 104.0], [8054.0, 107.0], [8061.0, 104.0], [8102.0, 99.0], [7944.0, 110.0], [8002.0, 106.0], [8014.0, 113.0], [8015.0, 85.0], [8028.0, 105.0], [7981.0, 110.0], [8105.0, 103.0], [8112.0, 112.0], [8438.0, 101.0], [9340.0, 29.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8677.0, 598.0], [9031.0, 511.0], [1929.0, 547.0], [2035.0, 562.5], [2218.0, 623.0], [2405.0, 784.0], [2442.0, 548.0], [2593.0, 520.0], [2604.0, 637.0], [2766.0, 561.5], [2706.0, 842.0], [2698.0, 698.0], [2703.0, 585.0], [2762.0, 622.0], [2847.0, 536.5], [2922.0, 618.0], [2940.0, 530.0], [2948.0, 572.5], [3031.0, 561.0], [3050.0, 602.5], [3053.0, 908.5], [2954.0, 552.0], [3086.0, 533.0], [3165.0, 555.0], [3107.0, 671.5], [3256.0, 546.0], [3215.0, 597.0], [3269.0, 700.0], [3337.0, 803.0], [3386.0, 521.5], [3457.0, 519.0], [3473.0, 976.0], [3609.0, 553.0], [3901.0, 1010.5], [3887.0, 531.5], [3939.0, 649.0], [4071.0, 609.0], [4276.0, 545.0], [4117.0, 634.0], [4302.0, 518.5], [4488.0, 875.0], [4497.0, 639.0], [4437.0, 547.0], [4637.0, 537.0], [4640.0, 562.0], [4634.0, 544.0], [4874.0, 557.0], [5309.0, 612.5], [5442.0, 1167.0], [5388.0, 575.0], [5575.0, 585.0], [5840.0, 536.0], [5977.0, 1127.0], [6121.0, 614.0], [6026.0, 683.0], [6068.0, 608.0], [6133.0, 534.0], [6366.0, 514.0], [6327.0, 519.0], [6230.0, 571.0], [6454.0, 523.0], [6663.0, 584.5], [6725.0, 579.0], [6696.0, 542.0], [7235.0, 632.0], [7314.0, 525.0], [7365.0, 668.5], [7628.0, 503.0], [7433.0, 527.0], [7541.0, 530.0], [7656.0, 530.0], [7559.0, 522.0], [7605.0, 516.0], [7623.0, 539.0], [7627.0, 569.5], [7637.0, 579.0], [7673.0, 518.0], [7527.0, 548.5], [7499.0, 613.0], [7875.0, 637.0], [7908.0, 589.0], [7889.0, 532.0], [7825.0, 513.0], [7776.0, 506.0], [7751.0, 503.0], [7864.0, 518.0], [7846.0, 521.0], [7721.0, 573.0], [7682.0, 558.0], [8135.0, 525.0], [7951.0, 532.0], [8165.0, 548.5], [7944.0, 522.0], [8112.0, 512.5], [8014.0, 644.0], [8076.0, 596.0], [8015.0, 561.0], [8438.0, 654.0], [9340.0, 572.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 9340.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 7.0, "minX": 331.0, "maxY": 605.0, "series": [{"data": [[8677.0, 19.0], [9031.0, 44.0], [331.0, 9.0], [1929.0, 30.0], [2035.0, 24.0], [2170.0, 17.0], [2140.0, 39.0], [2242.0, 45.0], [2218.0, 23.0], [2405.0, 14.0], [2442.0, 40.0], [2593.0, 63.0], [2604.0, 88.0], [2766.0, 57.0], [2706.0, 71.0], [2698.0, 46.0], [2703.0, 56.5], [2762.0, 60.0], [2847.0, 34.0], [2922.0, 19.0], [2940.0, 29.0], [2948.0, 43.0], [3031.0, 26.0], [3050.0, 19.0], [3053.0, 26.0], [2954.0, 56.0], [3086.0, 43.0], [3165.0, 22.0], [3107.0, 22.0], [3256.0, 26.0], [3215.0, 43.0], [3269.0, 37.0], [3337.0, 23.0], [3386.0, 39.0], [3457.0, 20.0], [3473.0, 43.0], [3609.0, 47.0], [3901.0, 20.0], [3887.0, 54.0], [3939.0, 44.0], [4071.0, 24.0], [4276.0, 93.0], [4117.0, 47.0], [4302.0, 65.0], [4488.0, 29.0], [4497.0, 17.0], [4437.0, 37.0], [4637.0, 62.0], [4640.0, 37.0], [4634.0, 61.0], [4633.0, 32.0], [4874.0, 34.0], [5309.0, 59.0], [5442.0, 32.0], [5388.0, 79.0], [5575.0, 110.0], [5840.0, 67.0], [5977.0, 96.0], [6121.0, 88.0], [6026.0, 50.0], [6068.0, 49.0], [6133.0, 76.0], [6366.0, 57.0], [6327.0, 72.0], [6230.0, 72.0], [6454.0, 83.0], [6663.0, 64.0], [6725.0, 73.0], [6696.0, 85.0], [6862.0, 106.0], [7235.0, 79.0], [7303.0, 108.0], [7314.0, 82.0], [7390.0, 102.0], [7410.0, 103.0], [7269.0, 103.0], [7365.0, 101.0], [7628.0, 103.0], [7433.0, 82.0], [7541.0, 46.0], [7656.0, 70.0], [7559.0, 91.0], [7615.0, 106.0], [7605.0, 94.0], [7623.0, 93.0], [7627.0, 103.0], [7452.0, 97.0], [7637.0, 90.0], [7646.0, 99.0], [7632.0, 106.0], [7673.0, 100.0], [7527.0, 87.0], [7499.0, 99.0], [7889.0, 87.0], [7908.0, 93.0], [7861.0, 93.0], [7846.0, 94.0], [7864.0, 93.0], [7825.0, 98.0], [7891.0, 92.0], [7776.0, 95.0], [7793.0, 100.0], [7883.0, 104.0], [7721.0, 112.0], [7682.0, 7.0], [7875.0, 96.0], [7745.0, 101.0], [7751.0, 97.0], [7828.0, 103.0], [8135.0, 86.0], [7951.0, 83.0], [8165.0, 88.0], [8076.0, 80.0], [8160.0, 95.0], [8054.0, 97.0], [8061.0, 95.0], [8102.0, 87.0], [7944.0, 95.0], [8002.0, 97.0], [8014.0, 102.0], [8015.0, 43.0], [8028.0, 92.0], [7981.0, 92.0], [8105.0, 92.0], [8112.0, 99.0], [8438.0, 87.0], [9340.0, 25.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8677.0, 170.5], [9031.0, 164.0], [1929.0, 59.0], [2035.0, 207.5], [2218.0, 110.0], [2405.0, 233.0], [2442.0, 229.0], [2593.0, 213.0], [2604.0, 230.0], [2766.0, 80.0], [2706.0, 483.0], [2698.0, 334.0], [2703.0, 377.0], [2762.0, 218.0], [2847.0, 41.0], [2922.0, 183.5], [2940.0, 343.5], [2948.0, 411.5], [3031.0, 206.0], [3050.0, 204.5], [3053.0, 185.0], [2954.0, 117.5], [3086.0, 401.0], [3165.0, 280.0], [3107.0, 84.0], [3256.0, 297.0], [3215.0, 212.5], [3269.0, 160.0], [3337.0, 131.5], [3386.0, 108.5], [3457.0, 76.0], [3473.0, 605.0], [3609.0, 190.0], [3901.0, 177.0], [3887.0, 280.5], [3939.0, 588.0], [4071.0, 180.5], [4276.0, 343.0], [4117.0, 33.0], [4302.0, 318.5], [4488.0, 102.5], [4497.0, 32.0], [4437.0, 177.5], [4637.0, 291.0], [4640.0, 384.0], [4634.0, 65.0], [4874.0, 126.5], [5309.0, 293.0], [5442.0, 433.0], [5388.0, 439.5], [5575.0, 524.0], [5840.0, 217.0], [5977.0, 284.0], [6121.0, 398.0], [6026.0, 66.0], [6068.0, 524.0], [6133.0, 300.0], [6366.0, 103.0], [6327.0, 350.0], [6230.0, 453.5], [6454.0, 423.0], [6663.0, 363.0], [6725.0, 507.0], [6696.0, 105.0], [7235.0, 383.0], [7314.0, 270.0], [7365.0, 131.0], [7628.0, 132.0], [7433.0, 228.5], [7541.0, 216.0], [7656.0, 176.5], [7559.0, 427.0], [7605.0, 127.0], [7623.0, 113.5], [7627.0, 121.0], [7637.0, 306.0], [7673.0, 149.0], [7527.0, 65.5], [7499.0, 180.0], [7875.0, 253.0], [7908.0, 242.0], [7889.0, 329.0], [7825.0, 354.0], [7776.0, 73.0], [7751.0, 154.0], [7864.0, 96.0], [7846.0, 123.0], [7721.0, 442.0], [7682.0, 124.0], [8135.0, 284.0], [7951.0, 141.5], [8165.0, 95.5], [7944.0, 155.0], [8112.0, 286.0], [8014.0, 160.0], [8076.0, 137.0], [8015.0, 125.0], [8438.0, 125.5], [9340.0, 239.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 9340.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 122.56666666666666, "minX": 1.646352E12, "maxY": 7800.733333333334, "series": [{"data": [[1.64635206E12, 4303.283333333334], [1.646352E12, 273.4166666666667], [1.64635218E12, 122.56666666666666], [1.64635212E12, 7800.733333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64635218E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 42.06666666666667, "minX": 1.646352E12, "maxY": 5210.233333333334, "series": [{"data": [[1.64635206E12, 2859.1666666666665], [1.646352E12, 177.96666666666667], [1.64635218E12, 85.96666666666667], [1.64635212E12, 5210.233333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.64635206E12, 1431.35], [1.646352E12, 91.55], [1.64635218E12, 42.06666666666667], [1.64635212E12, 2601.7]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64635218E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.646352E12, "maxY": 2605.116666666667, "series": [{"data": [[1.64635206E12, 1364.0166666666667], [1.646352E12, 88.1], [1.64635218E12, 42.96666666666667], [1.64635212E12, 2597.4666666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.64635206E12, 65.56666666666666], [1.646352E12, 0.8833333333333333], [1.64635218E12, 0.016666666666666666], [1.64635212E12, 7.65]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.64635206E12, 1431.35], [1.646352E12, 91.55], [1.64635218E12, 42.06666666666667], [1.64635212E12, 2601.7]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.64635206E12, 1429.5833333333333], [1.646352E12, 88.98333333333333], [1.64635218E12, 42.983333333333334], [1.64635212E12, 2605.116666666667]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64635218E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.646352E12, "maxY": 7804.283333333334, "series": [{"data": [[1.64635206E12, 4224.95], [1.646352E12, 268.6333333333333], [1.64635218E12, 128.01666666666668], [1.64635212E12, 7804.283333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.64635206E12, 65.56666666666666], [1.646352E12, 0.8833333333333333], [1.64635218E12, 0.016666666666666666], [1.64635212E12, 7.65]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64635218E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

