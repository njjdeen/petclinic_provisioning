/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 1294.0, "series": [{"data": [[0.0, 0.0], [0.1, 10.0], [0.2, 18.0], [0.3, 22.0], [0.4, 26.0], [0.5, 30.0], [0.6, 35.0], [0.7, 40.0], [0.8, 43.0], [0.9, 45.0], [1.0, 48.0], [1.1, 50.0], [1.2, 53.0], [1.3, 56.0], [1.4, 57.0], [1.5, 59.0], [1.6, 61.0], [1.7, 63.0], [1.8, 65.0], [1.9, 66.0], [2.0, 67.0], [2.1, 68.0], [2.2, 69.0], [2.3, 70.0], [2.4, 71.0], [2.5, 72.0], [2.6, 73.0], [2.7, 74.0], [2.8, 75.0], [2.9, 76.0], [3.0, 77.0], [3.1, 79.0], [3.2, 80.0], [3.3, 81.0], [3.4, 82.0], [3.5, 84.0], [3.6, 85.0], [3.7, 86.0], [3.8, 87.0], [3.9, 88.0], [4.0, 88.0], [4.1, 89.0], [4.2, 90.0], [4.3, 90.0], [4.4, 91.0], [4.5, 91.0], [4.6, 92.0], [4.7, 92.0], [4.8, 93.0], [4.9, 93.0], [5.0, 94.0], [5.1, 94.0], [5.2, 94.0], [5.3, 95.0], [5.4, 95.0], [5.5, 95.0], [5.6, 96.0], [5.7, 96.0], [5.8, 97.0], [5.9, 97.0], [6.0, 97.0], [6.1, 98.0], [6.2, 98.0], [6.3, 98.0], [6.4, 98.0], [6.5, 98.0], [6.6, 99.0], [6.7, 99.0], [6.8, 99.0], [6.9, 99.0], [7.0, 99.0], [7.1, 100.0], [7.2, 100.0], [7.3, 100.0], [7.4, 100.0], [7.5, 100.0], [7.6, 101.0], [7.7, 101.0], [7.8, 101.0], [7.9, 101.0], [8.0, 101.0], [8.1, 101.0], [8.2, 101.0], [8.3, 102.0], [8.4, 102.0], [8.5, 102.0], [8.6, 102.0], [8.7, 102.0], [8.8, 102.0], [8.9, 102.0], [9.0, 102.0], [9.1, 103.0], [9.2, 103.0], [9.3, 103.0], [9.4, 103.0], [9.5, 103.0], [9.6, 103.0], [9.7, 103.0], [9.8, 103.0], [9.9, 103.0], [10.0, 104.0], [10.1, 104.0], [10.2, 104.0], [10.3, 104.0], [10.4, 104.0], [10.5, 104.0], [10.6, 104.0], [10.7, 104.0], [10.8, 104.0], [10.9, 104.0], [11.0, 104.0], [11.1, 105.0], [11.2, 105.0], [11.3, 105.0], [11.4, 105.0], [11.5, 105.0], [11.6, 105.0], [11.7, 105.0], [11.8, 105.0], [11.9, 105.0], [12.0, 105.0], [12.1, 105.0], [12.2, 106.0], [12.3, 106.0], [12.4, 106.0], [12.5, 106.0], [12.6, 106.0], [12.7, 106.0], [12.8, 106.0], [12.9, 106.0], [13.0, 106.0], [13.1, 106.0], [13.2, 106.0], [13.3, 107.0], [13.4, 107.0], [13.5, 107.0], [13.6, 107.0], [13.7, 107.0], [13.8, 107.0], [13.9, 107.0], [14.0, 107.0], [14.1, 107.0], [14.2, 107.0], [14.3, 107.0], [14.4, 108.0], [14.5, 108.0], [14.6, 108.0], [14.7, 108.0], [14.8, 108.0], [14.9, 108.0], [15.0, 108.0], [15.1, 108.0], [15.2, 108.0], [15.3, 108.0], [15.4, 108.0], [15.5, 108.0], [15.6, 108.0], [15.7, 109.0], [15.8, 109.0], [15.9, 109.0], [16.0, 109.0], [16.1, 109.0], [16.2, 109.0], [16.3, 109.0], [16.4, 109.0], [16.5, 109.0], [16.6, 109.0], [16.7, 109.0], [16.8, 109.0], [16.9, 109.0], [17.0, 110.0], [17.1, 110.0], [17.2, 110.0], [17.3, 110.0], [17.4, 110.0], [17.5, 110.0], [17.6, 110.0], [17.7, 110.0], [17.8, 110.0], [17.9, 110.0], [18.0, 110.0], [18.1, 110.0], [18.2, 110.0], [18.3, 110.0], [18.4, 110.0], [18.5, 111.0], [18.6, 111.0], [18.7, 111.0], [18.8, 111.0], [18.9, 111.0], [19.0, 111.0], [19.1, 111.0], [19.2, 111.0], [19.3, 111.0], [19.4, 111.0], [19.5, 111.0], [19.6, 111.0], [19.7, 111.0], [19.8, 111.0], [19.9, 112.0], [20.0, 112.0], [20.1, 112.0], [20.2, 112.0], [20.3, 112.0], [20.4, 112.0], [20.5, 112.0], [20.6, 112.0], [20.7, 112.0], [20.8, 112.0], [20.9, 112.0], [21.0, 112.0], [21.1, 112.0], [21.2, 112.0], [21.3, 112.0], [21.4, 112.0], [21.5, 112.0], [21.6, 113.0], [21.7, 113.0], [21.8, 113.0], [21.9, 113.0], [22.0, 113.0], [22.1, 113.0], [22.2, 113.0], [22.3, 113.0], [22.4, 113.0], [22.5, 113.0], [22.6, 113.0], [22.7, 113.0], [22.8, 113.0], [22.9, 113.0], [23.0, 113.0], [23.1, 113.0], [23.2, 113.0], [23.3, 113.0], [23.4, 113.0], [23.5, 114.0], [23.6, 114.0], [23.7, 114.0], [23.8, 114.0], [23.9, 114.0], [24.0, 114.0], [24.1, 114.0], [24.2, 114.0], [24.3, 114.0], [24.4, 114.0], [24.5, 114.0], [24.6, 114.0], [24.7, 114.0], [24.8, 114.0], [24.9, 114.0], [25.0, 114.0], [25.1, 114.0], [25.2, 114.0], [25.3, 114.0], [25.4, 115.0], [25.5, 115.0], [25.6, 115.0], [25.7, 115.0], [25.8, 115.0], [25.9, 115.0], [26.0, 115.0], [26.1, 115.0], [26.2, 115.0], [26.3, 115.0], [26.4, 115.0], [26.5, 115.0], [26.6, 115.0], [26.7, 115.0], [26.8, 115.0], [26.9, 115.0], [27.0, 115.0], [27.1, 115.0], [27.2, 115.0], [27.3, 116.0], [27.4, 116.0], [27.5, 116.0], [27.6, 116.0], [27.7, 116.0], [27.8, 116.0], [27.9, 116.0], [28.0, 116.0], [28.1, 116.0], [28.2, 116.0], [28.3, 116.0], [28.4, 116.0], [28.5, 116.0], [28.6, 116.0], [28.7, 116.0], [28.8, 116.0], [28.9, 116.0], [29.0, 116.0], [29.1, 116.0], [29.2, 116.0], [29.3, 116.0], [29.4, 117.0], [29.5, 117.0], [29.6, 117.0], [29.7, 117.0], [29.8, 117.0], [29.9, 117.0], [30.0, 117.0], [30.1, 117.0], [30.2, 117.0], [30.3, 117.0], [30.4, 117.0], [30.5, 117.0], [30.6, 117.0], [30.7, 117.0], [30.8, 117.0], [30.9, 117.0], [31.0, 117.0], [31.1, 117.0], [31.2, 117.0], [31.3, 117.0], [31.4, 117.0], [31.5, 118.0], [31.6, 118.0], [31.7, 118.0], [31.8, 118.0], [31.9, 118.0], [32.0, 118.0], [32.1, 118.0], [32.2, 118.0], [32.3, 118.0], [32.4, 118.0], [32.5, 118.0], [32.6, 118.0], [32.7, 118.0], [32.8, 118.0], [32.9, 118.0], [33.0, 118.0], [33.1, 118.0], [33.2, 118.0], [33.3, 118.0], [33.4, 118.0], [33.5, 118.0], [33.6, 118.0], [33.7, 118.0], [33.8, 119.0], [33.9, 119.0], [34.0, 119.0], [34.1, 119.0], [34.2, 119.0], [34.3, 119.0], [34.4, 119.0], [34.5, 119.0], [34.6, 119.0], [34.7, 119.0], [34.8, 119.0], [34.9, 119.0], [35.0, 119.0], [35.1, 119.0], [35.2, 119.0], [35.3, 119.0], [35.4, 119.0], [35.5, 119.0], [35.6, 119.0], [35.7, 119.0], [35.8, 119.0], [35.9, 119.0], [36.0, 119.0], [36.1, 120.0], [36.2, 120.0], [36.3, 120.0], [36.4, 120.0], [36.5, 120.0], [36.6, 120.0], [36.7, 120.0], [36.8, 120.0], [36.9, 120.0], [37.0, 120.0], [37.1, 120.0], [37.2, 120.0], [37.3, 120.0], [37.4, 120.0], [37.5, 120.0], [37.6, 120.0], [37.7, 120.0], [37.8, 120.0], [37.9, 120.0], [38.0, 120.0], [38.1, 120.0], [38.2, 120.0], [38.3, 120.0], [38.4, 121.0], [38.5, 121.0], [38.6, 121.0], [38.7, 121.0], [38.8, 121.0], [38.9, 121.0], [39.0, 121.0], [39.1, 121.0], [39.2, 121.0], [39.3, 121.0], [39.4, 121.0], [39.5, 121.0], [39.6, 121.0], [39.7, 121.0], [39.8, 121.0], [39.9, 121.0], [40.0, 121.0], [40.1, 121.0], [40.2, 121.0], [40.3, 121.0], [40.4, 121.0], [40.5, 122.0], [40.6, 122.0], [40.7, 122.0], [40.8, 122.0], [40.9, 122.0], [41.0, 122.0], [41.1, 122.0], [41.2, 122.0], [41.3, 122.0], [41.4, 122.0], [41.5, 122.0], [41.6, 122.0], [41.7, 122.0], [41.8, 122.0], [41.9, 122.0], [42.0, 122.0], [42.1, 122.0], [42.2, 122.0], [42.3, 122.0], [42.4, 122.0], [42.5, 122.0], [42.6, 122.0], [42.7, 122.0], [42.8, 123.0], [42.9, 123.0], [43.0, 123.0], [43.1, 123.0], [43.2, 123.0], [43.3, 123.0], [43.4, 123.0], [43.5, 123.0], [43.6, 123.0], [43.7, 123.0], [43.8, 123.0], [43.9, 123.0], [44.0, 123.0], [44.1, 123.0], [44.2, 123.0], [44.3, 123.0], [44.4, 123.0], [44.5, 123.0], [44.6, 123.0], [44.7, 123.0], [44.8, 123.0], [44.9, 123.0], [45.0, 123.0], [45.1, 124.0], [45.2, 124.0], [45.3, 124.0], [45.4, 124.0], [45.5, 124.0], [45.6, 124.0], [45.7, 124.0], [45.8, 124.0], [45.9, 124.0], [46.0, 124.0], [46.1, 124.0], [46.2, 124.0], [46.3, 124.0], [46.4, 124.0], [46.5, 124.0], [46.6, 124.0], [46.7, 124.0], [46.8, 124.0], [46.9, 124.0], [47.0, 124.0], [47.1, 124.0], [47.2, 124.0], [47.3, 124.0], [47.4, 124.0], [47.5, 125.0], [47.6, 125.0], [47.7, 125.0], [47.8, 125.0], [47.9, 125.0], [48.0, 125.0], [48.1, 125.0], [48.2, 125.0], [48.3, 125.0], [48.4, 125.0], [48.5, 125.0], [48.6, 125.0], [48.7, 125.0], [48.8, 125.0], [48.9, 125.0], [49.0, 125.0], [49.1, 125.0], [49.2, 125.0], [49.3, 125.0], [49.4, 125.0], [49.5, 125.0], [49.6, 125.0], [49.7, 125.0], [49.8, 126.0], [49.9, 126.0], [50.0, 126.0], [50.1, 126.0], [50.2, 126.0], [50.3, 126.0], [50.4, 126.0], [50.5, 126.0], [50.6, 126.0], [50.7, 126.0], [50.8, 126.0], [50.9, 126.0], [51.0, 126.0], [51.1, 126.0], [51.2, 126.0], [51.3, 126.0], [51.4, 126.0], [51.5, 126.0], [51.6, 126.0], [51.7, 126.0], [51.8, 126.0], [51.9, 126.0], [52.0, 127.0], [52.1, 127.0], [52.2, 127.0], [52.3, 127.0], [52.4, 127.0], [52.5, 127.0], [52.6, 127.0], [52.7, 127.0], [52.8, 127.0], [52.9, 127.0], [53.0, 127.0], [53.1, 127.0], [53.2, 127.0], [53.3, 127.0], [53.4, 127.0], [53.5, 127.0], [53.6, 127.0], [53.7, 127.0], [53.8, 127.0], [53.9, 127.0], [54.0, 127.0], [54.1, 127.0], [54.2, 128.0], [54.3, 128.0], [54.4, 128.0], [54.5, 128.0], [54.6, 128.0], [54.7, 128.0], [54.8, 128.0], [54.9, 128.0], [55.0, 128.0], [55.1, 128.0], [55.2, 128.0], [55.3, 128.0], [55.4, 128.0], [55.5, 128.0], [55.6, 128.0], [55.7, 128.0], [55.8, 128.0], [55.9, 128.0], [56.0, 128.0], [56.1, 128.0], [56.2, 128.0], [56.3, 129.0], [56.4, 129.0], [56.5, 129.0], [56.6, 129.0], [56.7, 129.0], [56.8, 129.0], [56.9, 129.0], [57.0, 129.0], [57.1, 129.0], [57.2, 129.0], [57.3, 129.0], [57.4, 129.0], [57.5, 129.0], [57.6, 129.0], [57.7, 129.0], [57.8, 129.0], [57.9, 129.0], [58.0, 129.0], [58.1, 129.0], [58.2, 129.0], [58.3, 130.0], [58.4, 130.0], [58.5, 130.0], [58.6, 130.0], [58.7, 130.0], [58.8, 130.0], [58.9, 130.0], [59.0, 130.0], [59.1, 130.0], [59.2, 130.0], [59.3, 130.0], [59.4, 130.0], [59.5, 130.0], [59.6, 130.0], [59.7, 130.0], [59.8, 130.0], [59.9, 130.0], [60.0, 130.0], [60.1, 130.0], [60.2, 131.0], [60.3, 131.0], [60.4, 131.0], [60.5, 131.0], [60.6, 131.0], [60.7, 131.0], [60.8, 131.0], [60.9, 131.0], [61.0, 131.0], [61.1, 131.0], [61.2, 131.0], [61.3, 131.0], [61.4, 131.0], [61.5, 131.0], [61.6, 131.0], [61.7, 131.0], [61.8, 131.0], [61.9, 132.0], [62.0, 132.0], [62.1, 132.0], [62.2, 132.0], [62.3, 132.0], [62.4, 132.0], [62.5, 132.0], [62.6, 132.0], [62.7, 132.0], [62.8, 132.0], [62.9, 132.0], [63.0, 132.0], [63.1, 132.0], [63.2, 132.0], [63.3, 132.0], [63.4, 132.0], [63.5, 133.0], [63.6, 133.0], [63.7, 133.0], [63.8, 133.0], [63.9, 133.0], [64.0, 133.0], [64.1, 133.0], [64.2, 133.0], [64.3, 133.0], [64.4, 133.0], [64.5, 133.0], [64.6, 133.0], [64.7, 133.0], [64.8, 133.0], [64.9, 133.0], [65.0, 134.0], [65.1, 134.0], [65.2, 134.0], [65.3, 134.0], [65.4, 134.0], [65.5, 134.0], [65.6, 134.0], [65.7, 134.0], [65.8, 134.0], [65.9, 134.0], [66.0, 134.0], [66.1, 134.0], [66.2, 134.0], [66.3, 134.0], [66.4, 134.0], [66.5, 134.0], [66.6, 135.0], [66.7, 135.0], [66.8, 135.0], [66.9, 135.0], [67.0, 135.0], [67.1, 135.0], [67.2, 135.0], [67.3, 135.0], [67.4, 135.0], [67.5, 135.0], [67.6, 135.0], [67.7, 135.0], [67.8, 135.0], [67.9, 135.0], [68.0, 135.0], [68.1, 135.0], [68.2, 135.0], [68.3, 136.0], [68.4, 136.0], [68.5, 136.0], [68.6, 136.0], [68.7, 136.0], [68.8, 136.0], [68.9, 136.0], [69.0, 136.0], [69.1, 136.0], [69.2, 136.0], [69.3, 136.0], [69.4, 136.0], [69.5, 136.0], [69.6, 136.0], [69.7, 136.0], [69.8, 136.0], [69.9, 136.0], [70.0, 137.0], [70.1, 137.0], [70.2, 137.0], [70.3, 137.0], [70.4, 137.0], [70.5, 137.0], [70.6, 137.0], [70.7, 137.0], [70.8, 137.0], [70.9, 137.0], [71.0, 137.0], [71.1, 137.0], [71.2, 137.0], [71.3, 137.0], [71.4, 137.0], [71.5, 137.0], [71.6, 137.0], [71.7, 138.0], [71.8, 138.0], [71.9, 138.0], [72.0, 138.0], [72.1, 138.0], [72.2, 138.0], [72.3, 138.0], [72.4, 138.0], [72.5, 138.0], [72.6, 138.0], [72.7, 138.0], [72.8, 138.0], [72.9, 138.0], [73.0, 138.0], [73.1, 138.0], [73.2, 138.0], [73.3, 139.0], [73.4, 139.0], [73.5, 139.0], [73.6, 139.0], [73.7, 139.0], [73.8, 139.0], [73.9, 139.0], [74.0, 139.0], [74.1, 139.0], [74.2, 139.0], [74.3, 139.0], [74.4, 139.0], [74.5, 139.0], [74.6, 139.0], [74.7, 139.0], [74.8, 139.0], [74.9, 140.0], [75.0, 140.0], [75.1, 140.0], [75.2, 140.0], [75.3, 140.0], [75.4, 140.0], [75.5, 140.0], [75.6, 140.0], [75.7, 140.0], [75.8, 140.0], [75.9, 140.0], [76.0, 140.0], [76.1, 140.0], [76.2, 140.0], [76.3, 140.0], [76.4, 140.0], [76.5, 141.0], [76.6, 141.0], [76.7, 141.0], [76.8, 141.0], [76.9, 141.0], [77.0, 141.0], [77.1, 141.0], [77.2, 141.0], [77.3, 141.0], [77.4, 141.0], [77.5, 141.0], [77.6, 141.0], [77.7, 141.0], [77.8, 142.0], [77.9, 142.0], [78.0, 142.0], [78.1, 142.0], [78.2, 142.0], [78.3, 142.0], [78.4, 142.0], [78.5, 142.0], [78.6, 142.0], [78.7, 142.0], [78.8, 142.0], [78.9, 142.0], [79.0, 142.0], [79.1, 143.0], [79.2, 143.0], [79.3, 143.0], [79.4, 143.0], [79.5, 143.0], [79.6, 143.0], [79.7, 143.0], [79.8, 143.0], [79.9, 143.0], [80.0, 143.0], [80.1, 143.0], [80.2, 144.0], [80.3, 144.0], [80.4, 144.0], [80.5, 144.0], [80.6, 144.0], [80.7, 144.0], [80.8, 144.0], [80.9, 144.0], [81.0, 144.0], [81.1, 144.0], [81.2, 145.0], [81.3, 145.0], [81.4, 145.0], [81.5, 145.0], [81.6, 145.0], [81.7, 145.0], [81.8, 145.0], [81.9, 145.0], [82.0, 145.0], [82.1, 146.0], [82.2, 146.0], [82.3, 146.0], [82.4, 146.0], [82.5, 146.0], [82.6, 146.0], [82.7, 146.0], [82.8, 147.0], [82.9, 147.0], [83.0, 147.0], [83.1, 147.0], [83.2, 147.0], [83.3, 147.0], [83.4, 148.0], [83.5, 148.0], [83.6, 148.0], [83.7, 148.0], [83.8, 148.0], [83.9, 148.0], [84.0, 149.0], [84.1, 149.0], [84.2, 149.0], [84.3, 149.0], [84.4, 150.0], [84.5, 150.0], [84.6, 150.0], [84.7, 150.0], [84.8, 150.0], [84.9, 151.0], [85.0, 151.0], [85.1, 151.0], [85.2, 151.0], [85.3, 151.0], [85.4, 152.0], [85.5, 152.0], [85.6, 152.0], [85.7, 152.0], [85.8, 153.0], [85.9, 153.0], [86.0, 153.0], [86.1, 153.0], [86.2, 154.0], [86.3, 154.0], [86.4, 154.0], [86.5, 154.0], [86.6, 155.0], [86.7, 155.0], [86.8, 155.0], [86.9, 155.0], [87.0, 155.0], [87.1, 156.0], [87.2, 156.0], [87.3, 156.0], [87.4, 156.0], [87.5, 157.0], [87.6, 157.0], [87.7, 157.0], [87.8, 158.0], [87.9, 158.0], [88.0, 158.0], [88.1, 158.0], [88.2, 159.0], [88.3, 159.0], [88.4, 159.0], [88.5, 160.0], [88.6, 160.0], [88.7, 160.0], [88.8, 161.0], [88.9, 161.0], [89.0, 161.0], [89.1, 162.0], [89.2, 162.0], [89.3, 163.0], [89.4, 163.0], [89.5, 164.0], [89.6, 165.0], [89.7, 166.0], [89.8, 166.0], [89.9, 168.0], [90.0, 169.0], [90.1, 171.0], [90.2, 173.0], [90.3, 175.0], [90.4, 176.0], [90.5, 177.0], [90.6, 179.0], [90.7, 180.0], [90.8, 182.0], [90.9, 183.0], [91.0, 184.0], [91.1, 185.0], [91.2, 187.0], [91.3, 188.0], [91.4, 189.0], [91.5, 190.0], [91.6, 190.0], [91.7, 191.0], [91.8, 192.0], [91.9, 194.0], [92.0, 195.0], [92.1, 196.0], [92.2, 197.0], [92.3, 199.0], [92.4, 200.0], [92.5, 202.0], [92.6, 203.0], [92.7, 205.0], [92.8, 206.0], [92.9, 207.0], [93.0, 209.0], [93.1, 210.0], [93.2, 211.0], [93.3, 212.0], [93.4, 213.0], [93.5, 215.0], [93.6, 216.0], [93.7, 217.0], [93.8, 218.0], [93.9, 219.0], [94.0, 221.0], [94.1, 222.0], [94.2, 223.0], [94.3, 224.0], [94.4, 226.0], [94.5, 227.0], [94.6, 228.0], [94.7, 230.0], [94.8, 231.0], [94.9, 232.0], [95.0, 233.0], [95.1, 234.0], [95.2, 235.0], [95.3, 236.0], [95.4, 238.0], [95.5, 239.0], [95.6, 240.0], [95.7, 241.0], [95.8, 243.0], [95.9, 244.0], [96.0, 246.0], [96.1, 248.0], [96.2, 250.0], [96.3, 252.0], [96.4, 253.0], [96.5, 255.0], [96.6, 258.0], [96.7, 260.0], [96.8, 263.0], [96.9, 266.0], [97.0, 270.0], [97.1, 273.0], [97.2, 276.0], [97.3, 278.0], [97.4, 280.0], [97.5, 284.0], [97.6, 287.0], [97.7, 291.0], [97.8, 294.0], [97.9, 297.0], [98.0, 300.0], [98.1, 303.0], [98.2, 306.0], [98.3, 308.0], [98.4, 311.0], [98.5, 314.0], [98.6, 317.0], [98.7, 320.0], [98.8, 324.0], [98.9, 328.0], [99.0, 333.0], [99.1, 339.0], [99.2, 347.0], [99.3, 356.0], [99.4, 371.0], [99.5, 384.0], [99.6, 399.0], [99.7, 423.0], [99.8, 465.0], [99.9, 510.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 0.0], [0.1, 10.0], [0.2, 17.0], [0.3, 20.0], [0.4, 24.0], [0.5, 27.0], [0.6, 31.0], [0.7, 35.0], [0.8, 38.0], [0.9, 41.0], [1.0, 43.0], [1.1, 45.0], [1.2, 47.0], [1.3, 49.0], [1.4, 52.0], [1.5, 54.0], [1.6, 56.0], [1.7, 58.0], [1.8, 59.0], [1.9, 61.0], [2.0, 62.0], [2.1, 64.0], [2.2, 65.0], [2.3, 66.0], [2.4, 67.0], [2.5, 68.0], [2.6, 69.0], [2.7, 70.0], [2.8, 71.0], [2.9, 72.0], [3.0, 73.0], [3.1, 73.0], [3.2, 74.0], [3.3, 75.0], [3.4, 76.0], [3.5, 77.0], [3.6, 78.0], [3.7, 79.0], [3.8, 80.0], [3.9, 81.0], [4.0, 82.0], [4.1, 83.0], [4.2, 84.0], [4.3, 85.0], [4.4, 86.0], [4.5, 87.0], [4.6, 87.0], [4.7, 88.0], [4.8, 89.0], [4.9, 89.0], [5.0, 90.0], [5.1, 90.0], [5.2, 91.0], [5.3, 91.0], [5.4, 92.0], [5.5, 92.0], [5.6, 93.0], [5.7, 93.0], [5.8, 93.0], [5.9, 94.0], [6.0, 94.0], [6.1, 94.0], [6.2, 95.0], [6.3, 95.0], [6.4, 96.0], [6.5, 96.0], [6.6, 96.0], [6.7, 97.0], [6.8, 97.0], [6.9, 97.0], [7.0, 97.0], [7.1, 98.0], [7.2, 98.0], [7.3, 98.0], [7.4, 98.0], [7.5, 98.0], [7.6, 99.0], [7.7, 99.0], [7.8, 99.0], [7.9, 99.0], [8.0, 99.0], [8.1, 100.0], [8.2, 100.0], [8.3, 100.0], [8.4, 100.0], [8.5, 100.0], [8.6, 101.0], [8.7, 101.0], [8.8, 101.0], [8.9, 101.0], [9.0, 101.0], [9.1, 101.0], [9.2, 101.0], [9.3, 102.0], [9.4, 102.0], [9.5, 102.0], [9.6, 102.0], [9.7, 102.0], [9.8, 102.0], [9.9, 102.0], [10.0, 102.0], [10.1, 103.0], [10.2, 103.0], [10.3, 103.0], [10.4, 103.0], [10.5, 103.0], [10.6, 103.0], [10.7, 103.0], [10.8, 103.0], [10.9, 103.0], [11.0, 103.0], [11.1, 104.0], [11.2, 104.0], [11.3, 104.0], [11.4, 104.0], [11.5, 104.0], [11.6, 104.0], [11.7, 104.0], [11.8, 104.0], [11.9, 104.0], [12.0, 104.0], [12.1, 104.0], [12.2, 105.0], [12.3, 105.0], [12.4, 105.0], [12.5, 105.0], [12.6, 105.0], [12.7, 105.0], [12.8, 105.0], [12.9, 105.0], [13.0, 105.0], [13.1, 105.0], [13.2, 106.0], [13.3, 106.0], [13.4, 106.0], [13.5, 106.0], [13.6, 106.0], [13.7, 106.0], [13.8, 106.0], [13.9, 106.0], [14.0, 106.0], [14.1, 106.0], [14.2, 106.0], [14.3, 107.0], [14.4, 107.0], [14.5, 107.0], [14.6, 107.0], [14.7, 107.0], [14.8, 107.0], [14.9, 107.0], [15.0, 107.0], [15.1, 107.0], [15.2, 107.0], [15.3, 107.0], [15.4, 107.0], [15.5, 108.0], [15.6, 108.0], [15.7, 108.0], [15.8, 108.0], [15.9, 108.0], [16.0, 108.0], [16.1, 108.0], [16.2, 108.0], [16.3, 108.0], [16.4, 108.0], [16.5, 108.0], [16.6, 108.0], [16.7, 108.0], [16.8, 109.0], [16.9, 109.0], [17.0, 109.0], [17.1, 109.0], [17.2, 109.0], [17.3, 109.0], [17.4, 109.0], [17.5, 109.0], [17.6, 109.0], [17.7, 109.0], [17.8, 109.0], [17.9, 109.0], [18.0, 109.0], [18.1, 109.0], [18.2, 110.0], [18.3, 110.0], [18.4, 110.0], [18.5, 110.0], [18.6, 110.0], [18.7, 110.0], [18.8, 110.0], [18.9, 110.0], [19.0, 110.0], [19.1, 110.0], [19.2, 110.0], [19.3, 110.0], [19.4, 110.0], [19.5, 110.0], [19.6, 111.0], [19.7, 111.0], [19.8, 111.0], [19.9, 111.0], [20.0, 111.0], [20.1, 111.0], [20.2, 111.0], [20.3, 111.0], [20.4, 111.0], [20.5, 111.0], [20.6, 111.0], [20.7, 111.0], [20.8, 111.0], [20.9, 111.0], [21.0, 111.0], [21.1, 111.0], [21.2, 112.0], [21.3, 112.0], [21.4, 112.0], [21.5, 112.0], [21.6, 112.0], [21.7, 112.0], [21.8, 112.0], [21.9, 112.0], [22.0, 112.0], [22.1, 112.0], [22.2, 112.0], [22.3, 112.0], [22.4, 112.0], [22.5, 112.0], [22.6, 112.0], [22.7, 112.0], [22.8, 112.0], [22.9, 112.0], [23.0, 113.0], [23.1, 113.0], [23.2, 113.0], [23.3, 113.0], [23.4, 113.0], [23.5, 113.0], [23.6, 113.0], [23.7, 113.0], [23.8, 113.0], [23.9, 113.0], [24.0, 113.0], [24.1, 113.0], [24.2, 113.0], [24.3, 113.0], [24.4, 113.0], [24.5, 113.0], [24.6, 113.0], [24.7, 113.0], [24.8, 114.0], [24.9, 114.0], [25.0, 114.0], [25.1, 114.0], [25.2, 114.0], [25.3, 114.0], [25.4, 114.0], [25.5, 114.0], [25.6, 114.0], [25.7, 114.0], [25.8, 114.0], [25.9, 114.0], [26.0, 114.0], [26.1, 114.0], [26.2, 114.0], [26.3, 114.0], [26.4, 114.0], [26.5, 114.0], [26.6, 114.0], [26.7, 115.0], [26.8, 115.0], [26.9, 115.0], [27.0, 115.0], [27.1, 115.0], [27.2, 115.0], [27.3, 115.0], [27.4, 115.0], [27.5, 115.0], [27.6, 115.0], [27.7, 115.0], [27.8, 115.0], [27.9, 115.0], [28.0, 115.0], [28.1, 115.0], [28.2, 115.0], [28.3, 115.0], [28.4, 115.0], [28.5, 115.0], [28.6, 115.0], [28.7, 116.0], [28.8, 116.0], [28.9, 116.0], [29.0, 116.0], [29.1, 116.0], [29.2, 116.0], [29.3, 116.0], [29.4, 116.0], [29.5, 116.0], [29.6, 116.0], [29.7, 116.0], [29.8, 116.0], [29.9, 116.0], [30.0, 116.0], [30.1, 116.0], [30.2, 116.0], [30.3, 116.0], [30.4, 116.0], [30.5, 116.0], [30.6, 116.0], [30.7, 117.0], [30.8, 117.0], [30.9, 117.0], [31.0, 117.0], [31.1, 117.0], [31.2, 117.0], [31.3, 117.0], [31.4, 117.0], [31.5, 117.0], [31.6, 117.0], [31.7, 117.0], [31.8, 117.0], [31.9, 117.0], [32.0, 117.0], [32.1, 117.0], [32.2, 117.0], [32.3, 117.0], [32.4, 117.0], [32.5, 117.0], [32.6, 117.0], [32.7, 117.0], [32.8, 117.0], [32.9, 117.0], [33.0, 118.0], [33.1, 118.0], [33.2, 118.0], [33.3, 118.0], [33.4, 118.0], [33.5, 118.0], [33.6, 118.0], [33.7, 118.0], [33.8, 118.0], [33.9, 118.0], [34.0, 118.0], [34.1, 118.0], [34.2, 118.0], [34.3, 118.0], [34.4, 118.0], [34.5, 118.0], [34.6, 118.0], [34.7, 118.0], [34.8, 118.0], [34.9, 118.0], [35.0, 118.0], [35.1, 118.0], [35.2, 119.0], [35.3, 119.0], [35.4, 119.0], [35.5, 119.0], [35.6, 119.0], [35.7, 119.0], [35.8, 119.0], [35.9, 119.0], [36.0, 119.0], [36.1, 119.0], [36.2, 119.0], [36.3, 119.0], [36.4, 119.0], [36.5, 119.0], [36.6, 119.0], [36.7, 119.0], [36.8, 119.0], [36.9, 119.0], [37.0, 119.0], [37.1, 119.0], [37.2, 119.0], [37.3, 119.0], [37.4, 119.0], [37.5, 120.0], [37.6, 120.0], [37.7, 120.0], [37.8, 120.0], [37.9, 120.0], [38.0, 120.0], [38.1, 120.0], [38.2, 120.0], [38.3, 120.0], [38.4, 120.0], [38.5, 120.0], [38.6, 120.0], [38.7, 120.0], [38.8, 120.0], [38.9, 120.0], [39.0, 120.0], [39.1, 120.0], [39.2, 120.0], [39.3, 120.0], [39.4, 120.0], [39.5, 120.0], [39.6, 120.0], [39.7, 121.0], [39.8, 121.0], [39.9, 121.0], [40.0, 121.0], [40.1, 121.0], [40.2, 121.0], [40.3, 121.0], [40.4, 121.0], [40.5, 121.0], [40.6, 121.0], [40.7, 121.0], [40.8, 121.0], [40.9, 121.0], [41.0, 121.0], [41.1, 121.0], [41.2, 121.0], [41.3, 121.0], [41.4, 121.0], [41.5, 121.0], [41.6, 121.0], [41.7, 121.0], [41.8, 122.0], [41.9, 122.0], [42.0, 122.0], [42.1, 122.0], [42.2, 122.0], [42.3, 122.0], [42.4, 122.0], [42.5, 122.0], [42.6, 122.0], [42.7, 122.0], [42.8, 122.0], [42.9, 122.0], [43.0, 122.0], [43.1, 122.0], [43.2, 122.0], [43.3, 122.0], [43.4, 122.0], [43.5, 122.0], [43.6, 122.0], [43.7, 122.0], [43.8, 122.0], [43.9, 122.0], [44.0, 123.0], [44.1, 123.0], [44.2, 123.0], [44.3, 123.0], [44.4, 123.0], [44.5, 123.0], [44.6, 123.0], [44.7, 123.0], [44.8, 123.0], [44.9, 123.0], [45.0, 123.0], [45.1, 123.0], [45.2, 123.0], [45.3, 123.0], [45.4, 123.0], [45.5, 123.0], [45.6, 123.0], [45.7, 123.0], [45.8, 123.0], [45.9, 123.0], [46.0, 123.0], [46.1, 123.0], [46.2, 123.0], [46.3, 123.0], [46.4, 124.0], [46.5, 124.0], [46.6, 124.0], [46.7, 124.0], [46.8, 124.0], [46.9, 124.0], [47.0, 124.0], [47.1, 124.0], [47.2, 124.0], [47.3, 124.0], [47.4, 124.0], [47.5, 124.0], [47.6, 124.0], [47.7, 124.0], [47.8, 124.0], [47.9, 124.0], [48.0, 124.0], [48.1, 124.0], [48.2, 124.0], [48.3, 124.0], [48.4, 124.0], [48.5, 124.0], [48.6, 124.0], [48.7, 125.0], [48.8, 125.0], [48.9, 125.0], [49.0, 125.0], [49.1, 125.0], [49.2, 125.0], [49.3, 125.0], [49.4, 125.0], [49.5, 125.0], [49.6, 125.0], [49.7, 125.0], [49.8, 125.0], [49.9, 125.0], [50.0, 125.0], [50.1, 125.0], [50.2, 125.0], [50.3, 125.0], [50.4, 125.0], [50.5, 125.0], [50.6, 125.0], [50.7, 125.0], [50.8, 125.0], [50.9, 126.0], [51.0, 126.0], [51.1, 126.0], [51.2, 126.0], [51.3, 126.0], [51.4, 126.0], [51.5, 126.0], [51.6, 126.0], [51.7, 126.0], [51.8, 126.0], [51.9, 126.0], [52.0, 126.0], [52.1, 126.0], [52.2, 126.0], [52.3, 126.0], [52.4, 126.0], [52.5, 126.0], [52.6, 126.0], [52.7, 126.0], [52.8, 126.0], [52.9, 126.0], [53.0, 127.0], [53.1, 127.0], [53.2, 127.0], [53.3, 127.0], [53.4, 127.0], [53.5, 127.0], [53.6, 127.0], [53.7, 127.0], [53.8, 127.0], [53.9, 127.0], [54.0, 127.0], [54.1, 127.0], [54.2, 127.0], [54.3, 127.0], [54.4, 127.0], [54.5, 127.0], [54.6, 127.0], [54.7, 127.0], [54.8, 127.0], [54.9, 127.0], [55.0, 127.0], [55.1, 128.0], [55.2, 128.0], [55.3, 128.0], [55.4, 128.0], [55.5, 128.0], [55.6, 128.0], [55.7, 128.0], [55.8, 128.0], [55.9, 128.0], [56.0, 128.0], [56.1, 128.0], [56.2, 128.0], [56.3, 128.0], [56.4, 128.0], [56.5, 128.0], [56.6, 128.0], [56.7, 128.0], [56.8, 128.0], [56.9, 128.0], [57.0, 128.0], [57.1, 128.0], [57.2, 128.0], [57.3, 129.0], [57.4, 129.0], [57.5, 129.0], [57.6, 129.0], [57.7, 129.0], [57.8, 129.0], [57.9, 129.0], [58.0, 129.0], [58.1, 129.0], [58.2, 129.0], [58.3, 129.0], [58.4, 129.0], [58.5, 129.0], [58.6, 129.0], [58.7, 129.0], [58.8, 129.0], [58.9, 129.0], [59.0, 129.0], [59.1, 129.0], [59.2, 130.0], [59.3, 130.0], [59.4, 130.0], [59.5, 130.0], [59.6, 130.0], [59.7, 130.0], [59.8, 130.0], [59.9, 130.0], [60.0, 130.0], [60.1, 130.0], [60.2, 130.0], [60.3, 130.0], [60.4, 130.0], [60.5, 130.0], [60.6, 130.0], [60.7, 130.0], [60.8, 130.0], [60.9, 131.0], [61.0, 131.0], [61.1, 131.0], [61.2, 131.0], [61.3, 131.0], [61.4, 131.0], [61.5, 131.0], [61.6, 131.0], [61.7, 131.0], [61.8, 131.0], [61.9, 131.0], [62.0, 131.0], [62.1, 131.0], [62.2, 131.0], [62.3, 131.0], [62.4, 131.0], [62.5, 131.0], [62.6, 132.0], [62.7, 132.0], [62.8, 132.0], [62.9, 132.0], [63.0, 132.0], [63.1, 132.0], [63.2, 132.0], [63.3, 132.0], [63.4, 132.0], [63.5, 132.0], [63.6, 132.0], [63.7, 132.0], [63.8, 132.0], [63.9, 132.0], [64.0, 132.0], [64.1, 133.0], [64.2, 133.0], [64.3, 133.0], [64.4, 133.0], [64.5, 133.0], [64.6, 133.0], [64.7, 133.0], [64.8, 133.0], [64.9, 133.0], [65.0, 133.0], [65.1, 133.0], [65.2, 133.0], [65.3, 133.0], [65.4, 133.0], [65.5, 133.0], [65.6, 133.0], [65.7, 134.0], [65.8, 134.0], [65.9, 134.0], [66.0, 134.0], [66.1, 134.0], [66.2, 134.0], [66.3, 134.0], [66.4, 134.0], [66.5, 134.0], [66.6, 134.0], [66.7, 134.0], [66.8, 134.0], [66.9, 134.0], [67.0, 134.0], [67.1, 134.0], [67.2, 134.0], [67.3, 135.0], [67.4, 135.0], [67.5, 135.0], [67.6, 135.0], [67.7, 135.0], [67.8, 135.0], [67.9, 135.0], [68.0, 135.0], [68.1, 135.0], [68.2, 135.0], [68.3, 135.0], [68.4, 135.0], [68.5, 135.0], [68.6, 135.0], [68.7, 135.0], [68.8, 135.0], [68.9, 135.0], [69.0, 135.0], [69.1, 136.0], [69.2, 136.0], [69.3, 136.0], [69.4, 136.0], [69.5, 136.0], [69.6, 136.0], [69.7, 136.0], [69.8, 136.0], [69.9, 136.0], [70.0, 136.0], [70.1, 136.0], [70.2, 136.0], [70.3, 136.0], [70.4, 136.0], [70.5, 136.0], [70.6, 136.0], [70.7, 137.0], [70.8, 137.0], [70.9, 137.0], [71.0, 137.0], [71.1, 137.0], [71.2, 137.0], [71.3, 137.0], [71.4, 137.0], [71.5, 137.0], [71.6, 137.0], [71.7, 137.0], [71.8, 137.0], [71.9, 137.0], [72.0, 137.0], [72.1, 137.0], [72.2, 137.0], [72.3, 137.0], [72.4, 138.0], [72.5, 138.0], [72.6, 138.0], [72.7, 138.0], [72.8, 138.0], [72.9, 138.0], [73.0, 138.0], [73.1, 138.0], [73.2, 138.0], [73.3, 138.0], [73.4, 138.0], [73.5, 138.0], [73.6, 138.0], [73.7, 138.0], [73.8, 138.0], [73.9, 138.0], [74.0, 138.0], [74.1, 139.0], [74.2, 139.0], [74.3, 139.0], [74.4, 139.0], [74.5, 139.0], [74.6, 139.0], [74.7, 139.0], [74.8, 139.0], [74.9, 139.0], [75.0, 139.0], [75.1, 139.0], [75.2, 139.0], [75.3, 139.0], [75.4, 139.0], [75.5, 139.0], [75.6, 140.0], [75.7, 140.0], [75.8, 140.0], [75.9, 140.0], [76.0, 140.0], [76.1, 140.0], [76.2, 140.0], [76.3, 140.0], [76.4, 140.0], [76.5, 140.0], [76.6, 140.0], [76.7, 140.0], [76.8, 140.0], [76.9, 140.0], [77.0, 141.0], [77.1, 141.0], [77.2, 141.0], [77.3, 141.0], [77.4, 141.0], [77.5, 141.0], [77.6, 141.0], [77.7, 141.0], [77.8, 141.0], [77.9, 141.0], [78.0, 141.0], [78.1, 141.0], [78.2, 141.0], [78.3, 142.0], [78.4, 142.0], [78.5, 142.0], [78.6, 142.0], [78.7, 142.0], [78.8, 142.0], [78.9, 142.0], [79.0, 142.0], [79.1, 142.0], [79.2, 142.0], [79.3, 142.0], [79.4, 142.0], [79.5, 143.0], [79.6, 143.0], [79.7, 143.0], [79.8, 143.0], [79.9, 143.0], [80.0, 143.0], [80.1, 143.0], [80.2, 143.0], [80.3, 143.0], [80.4, 143.0], [80.5, 143.0], [80.6, 144.0], [80.7, 144.0], [80.8, 144.0], [80.9, 144.0], [81.0, 144.0], [81.1, 144.0], [81.2, 144.0], [81.3, 144.0], [81.4, 144.0], [81.5, 145.0], [81.6, 145.0], [81.7, 145.0], [81.8, 145.0], [81.9, 145.0], [82.0, 145.0], [82.1, 145.0], [82.2, 145.0], [82.3, 146.0], [82.4, 146.0], [82.5, 146.0], [82.6, 146.0], [82.7, 146.0], [82.8, 146.0], [82.9, 147.0], [83.0, 147.0], [83.1, 147.0], [83.2, 147.0], [83.3, 147.0], [83.4, 147.0], [83.5, 147.0], [83.6, 148.0], [83.7, 148.0], [83.8, 148.0], [83.9, 148.0], [84.0, 148.0], [84.1, 149.0], [84.2, 149.0], [84.3, 149.0], [84.4, 149.0], [84.5, 149.0], [84.6, 150.0], [84.7, 150.0], [84.8, 150.0], [84.9, 150.0], [85.0, 150.0], [85.1, 151.0], [85.2, 151.0], [85.3, 151.0], [85.4, 151.0], [85.5, 151.0], [85.6, 152.0], [85.7, 152.0], [85.8, 152.0], [85.9, 152.0], [86.0, 153.0], [86.1, 153.0], [86.2, 153.0], [86.3, 153.0], [86.4, 154.0], [86.5, 154.0], [86.6, 154.0], [86.7, 154.0], [86.8, 155.0], [86.9, 155.0], [87.0, 155.0], [87.1, 155.0], [87.2, 155.0], [87.3, 156.0], [87.4, 156.0], [87.5, 156.0], [87.6, 156.0], [87.7, 157.0], [87.8, 157.0], [87.9, 157.0], [88.0, 158.0], [88.1, 158.0], [88.2, 158.0], [88.3, 158.0], [88.4, 159.0], [88.5, 159.0], [88.6, 159.0], [88.7, 160.0], [88.8, 160.0], [88.9, 160.0], [89.0, 161.0], [89.1, 161.0], [89.2, 161.0], [89.3, 162.0], [89.4, 162.0], [89.5, 163.0], [89.6, 163.0], [89.7, 164.0], [89.8, 165.0], [89.9, 165.0], [90.0, 166.0], [90.1, 167.0], [90.2, 169.0], [90.3, 170.0], [90.4, 171.0], [90.5, 173.0], [90.6, 175.0], [90.7, 176.0], [90.8, 177.0], [90.9, 178.0], [91.0, 180.0], [91.1, 181.0], [91.2, 182.0], [91.3, 183.0], [91.4, 184.0], [91.5, 186.0], [91.6, 187.0], [91.7, 188.0], [91.8, 189.0], [91.9, 189.0], [92.0, 190.0], [92.1, 191.0], [92.2, 192.0], [92.3, 193.0], [92.4, 194.0], [92.5, 196.0], [92.6, 197.0], [92.7, 198.0], [92.8, 199.0], [92.9, 201.0], [93.0, 202.0], [93.1, 203.0], [93.2, 205.0], [93.3, 206.0], [93.4, 207.0], [93.5, 208.0], [93.6, 209.0], [93.7, 210.0], [93.8, 212.0], [93.9, 213.0], [94.0, 214.0], [94.1, 215.0], [94.2, 216.0], [94.3, 217.0], [94.4, 218.0], [94.5, 219.0], [94.6, 220.0], [94.7, 222.0], [94.8, 223.0], [94.9, 224.0], [95.0, 225.0], [95.1, 226.0], [95.2, 228.0], [95.3, 229.0], [95.4, 230.0], [95.5, 231.0], [95.6, 232.0], [95.7, 234.0], [95.8, 235.0], [95.9, 236.0], [96.0, 237.0], [96.1, 238.0], [96.2, 240.0], [96.3, 241.0], [96.4, 243.0], [96.5, 244.0], [96.6, 246.0], [96.7, 248.0], [96.8, 250.0], [96.9, 252.0], [97.0, 254.0], [97.1, 256.0], [97.2, 259.0], [97.3, 262.0], [97.4, 265.0], [97.5, 269.0], [97.6, 272.0], [97.7, 275.0], [97.8, 278.0], [97.9, 281.0], [98.0, 285.0], [98.1, 289.0], [98.2, 293.0], [98.3, 297.0], [98.4, 300.0], [98.5, 304.0], [98.6, 306.0], [98.7, 309.0], [98.8, 312.0], [98.9, 315.0], [99.0, 318.0], [99.1, 322.0], [99.2, 327.0], [99.3, 335.0], [99.4, 344.0], [99.5, 355.0], [99.6, 376.0], [99.7, 393.0], [99.8, 414.0], [99.9, 468.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 0.0], [0.1, 27.0], [0.2, 44.0], [0.3, 53.0], [0.4, 64.0], [0.5, 78.0], [0.6, 85.0], [0.7, 94.0], [0.8, 100.0], [0.9, 105.0], [1.0, 109.0], [1.1, 115.0], [1.2, 119.0], [1.3, 124.0], [1.4, 129.0], [1.5, 134.0], [1.6, 135.0], [1.7, 137.0], [1.8, 139.0], [1.9, 141.0], [2.0, 143.0], [2.1, 144.0], [2.2, 144.0], [2.3, 147.0], [2.4, 149.0], [2.5, 151.0], [2.6, 152.0], [2.7, 154.0], [2.8, 156.0], [2.9, 160.0], [3.0, 163.0], [3.1, 164.0], [3.2, 166.0], [3.3, 168.0], [3.4, 172.0], [3.5, 173.0], [3.6, 175.0], [3.7, 176.0], [3.8, 177.0], [3.9, 178.0], [4.0, 180.0], [4.1, 181.0], [4.2, 183.0], [4.3, 184.0], [4.4, 185.0], [4.5, 186.0], [4.6, 187.0], [4.7, 187.0], [4.8, 189.0], [4.9, 190.0], [5.0, 191.0], [5.1, 192.0], [5.2, 192.0], [5.3, 194.0], [5.4, 195.0], [5.5, 196.0], [5.6, 197.0], [5.7, 197.0], [5.8, 198.0], [5.9, 199.0], [6.0, 200.0], [6.1, 200.0], [6.2, 201.0], [6.3, 202.0], [6.4, 203.0], [6.5, 204.0], [6.6, 204.0], [6.7, 205.0], [6.8, 205.0], [6.9, 206.0], [7.0, 207.0], [7.1, 208.0], [7.2, 208.0], [7.3, 208.0], [7.4, 208.0], [7.5, 209.0], [7.6, 209.0], [7.7, 210.0], [7.8, 210.0], [7.9, 210.0], [8.0, 211.0], [8.1, 211.0], [8.2, 212.0], [8.3, 212.0], [8.4, 212.0], [8.5, 212.0], [8.6, 213.0], [8.7, 213.0], [8.8, 213.0], [8.9, 213.0], [9.0, 213.0], [9.1, 214.0], [9.2, 214.0], [9.3, 214.0], [9.4, 214.0], [9.5, 214.0], [9.6, 214.0], [9.7, 215.0], [9.8, 215.0], [9.9, 215.0], [10.0, 215.0], [10.1, 215.0], [10.2, 215.0], [10.3, 215.0], [10.4, 216.0], [10.5, 216.0], [10.6, 216.0], [10.7, 216.0], [10.8, 216.0], [10.9, 216.0], [11.0, 216.0], [11.1, 216.0], [11.2, 216.0], [11.3, 216.0], [11.4, 217.0], [11.5, 217.0], [11.6, 217.0], [11.7, 217.0], [11.8, 217.0], [11.9, 217.0], [12.0, 217.0], [12.1, 217.0], [12.2, 218.0], [12.3, 218.0], [12.4, 218.0], [12.5, 218.0], [12.6, 218.0], [12.7, 218.0], [12.8, 218.0], [12.9, 218.0], [13.0, 218.0], [13.1, 218.0], [13.2, 219.0], [13.3, 219.0], [13.4, 219.0], [13.5, 219.0], [13.6, 219.0], [13.7, 219.0], [13.8, 219.0], [13.9, 219.0], [14.0, 219.0], [14.1, 219.0], [14.2, 219.0], [14.3, 219.0], [14.4, 219.0], [14.5, 220.0], [14.6, 220.0], [14.7, 220.0], [14.8, 220.0], [14.9, 220.0], [15.0, 220.0], [15.1, 220.0], [15.2, 220.0], [15.3, 220.0], [15.4, 220.0], [15.5, 220.0], [15.6, 220.0], [15.7, 220.0], [15.8, 220.0], [15.9, 220.0], [16.0, 220.0], [16.1, 221.0], [16.2, 221.0], [16.3, 221.0], [16.4, 221.0], [16.5, 221.0], [16.6, 221.0], [16.7, 221.0], [16.8, 221.0], [16.9, 221.0], [17.0, 221.0], [17.1, 221.0], [17.2, 221.0], [17.3, 221.0], [17.4, 221.0], [17.5, 222.0], [17.6, 222.0], [17.7, 222.0], [17.8, 222.0], [17.9, 222.0], [18.0, 222.0], [18.1, 222.0], [18.2, 222.0], [18.3, 222.0], [18.4, 222.0], [18.5, 222.0], [18.6, 222.0], [18.7, 222.0], [18.8, 222.0], [18.9, 222.0], [19.0, 223.0], [19.1, 223.0], [19.2, 223.0], [19.3, 223.0], [19.4, 223.0], [19.5, 223.0], [19.6, 223.0], [19.7, 223.0], [19.8, 223.0], [19.9, 223.0], [20.0, 223.0], [20.1, 223.0], [20.2, 223.0], [20.3, 223.0], [20.4, 224.0], [20.5, 224.0], [20.6, 224.0], [20.7, 224.0], [20.8, 224.0], [20.9, 224.0], [21.0, 224.0], [21.1, 224.0], [21.2, 224.0], [21.3, 224.0], [21.4, 224.0], [21.5, 224.0], [21.6, 224.0], [21.7, 224.0], [21.8, 224.0], [21.9, 225.0], [22.0, 225.0], [22.1, 225.0], [22.2, 225.0], [22.3, 225.0], [22.4, 225.0], [22.5, 225.0], [22.6, 225.0], [22.7, 225.0], [22.8, 225.0], [22.9, 225.0], [23.0, 225.0], [23.1, 226.0], [23.2, 226.0], [23.3, 226.0], [23.4, 226.0], [23.5, 226.0], [23.6, 226.0], [23.7, 226.0], [23.8, 226.0], [23.9, 226.0], [24.0, 226.0], [24.1, 227.0], [24.2, 227.0], [24.3, 227.0], [24.4, 227.0], [24.5, 227.0], [24.6, 227.0], [24.7, 227.0], [24.8, 227.0], [24.9, 228.0], [25.0, 228.0], [25.1, 228.0], [25.2, 228.0], [25.3, 228.0], [25.4, 228.0], [25.5, 228.0], [25.6, 228.0], [25.7, 228.0], [25.8, 228.0], [25.9, 229.0], [26.0, 229.0], [26.1, 229.0], [26.2, 229.0], [26.3, 229.0], [26.4, 229.0], [26.5, 229.0], [26.6, 229.0], [26.7, 229.0], [26.8, 229.0], [26.9, 229.0], [27.0, 229.0], [27.1, 230.0], [27.2, 230.0], [27.3, 230.0], [27.4, 230.0], [27.5, 230.0], [27.6, 230.0], [27.7, 230.0], [27.8, 230.0], [27.9, 230.0], [28.0, 231.0], [28.1, 231.0], [28.2, 231.0], [28.3, 231.0], [28.4, 231.0], [28.5, 231.0], [28.6, 231.0], [28.7, 231.0], [28.8, 231.0], [28.9, 232.0], [29.0, 232.0], [29.1, 232.0], [29.2, 232.0], [29.3, 232.0], [29.4, 232.0], [29.5, 232.0], [29.6, 232.0], [29.7, 232.0], [29.8, 232.0], [29.9, 233.0], [30.0, 233.0], [30.1, 233.0], [30.2, 233.0], [30.3, 233.0], [30.4, 233.0], [30.5, 233.0], [30.6, 233.0], [30.7, 233.0], [30.8, 233.0], [30.9, 233.0], [31.0, 234.0], [31.1, 234.0], [31.2, 234.0], [31.3, 234.0], [31.4, 234.0], [31.5, 234.0], [31.6, 234.0], [31.7, 234.0], [31.8, 234.0], [31.9, 234.0], [32.0, 234.0], [32.1, 235.0], [32.2, 235.0], [32.3, 235.0], [32.4, 235.0], [32.5, 235.0], [32.6, 235.0], [32.7, 235.0], [32.8, 235.0], [32.9, 235.0], [33.0, 235.0], [33.1, 235.0], [33.2, 235.0], [33.3, 236.0], [33.4, 236.0], [33.5, 236.0], [33.6, 236.0], [33.7, 236.0], [33.8, 236.0], [33.9, 236.0], [34.0, 236.0], [34.1, 236.0], [34.2, 236.0], [34.3, 236.0], [34.4, 236.0], [34.5, 236.0], [34.6, 237.0], [34.7, 237.0], [34.8, 237.0], [34.9, 237.0], [35.0, 237.0], [35.1, 237.0], [35.2, 237.0], [35.3, 237.0], [35.4, 237.0], [35.5, 237.0], [35.6, 237.0], [35.7, 237.0], [35.8, 237.0], [35.9, 237.0], [36.0, 238.0], [36.1, 238.0], [36.2, 238.0], [36.3, 238.0], [36.4, 238.0], [36.5, 238.0], [36.6, 238.0], [36.7, 238.0], [36.8, 238.0], [36.9, 238.0], [37.0, 238.0], [37.1, 238.0], [37.2, 239.0], [37.3, 239.0], [37.4, 239.0], [37.5, 239.0], [37.6, 239.0], [37.7, 239.0], [37.8, 239.0], [37.9, 239.0], [38.0, 239.0], [38.1, 239.0], [38.2, 239.0], [38.3, 239.0], [38.4, 240.0], [38.5, 240.0], [38.6, 240.0], [38.7, 240.0], [38.8, 240.0], [38.9, 240.0], [39.0, 240.0], [39.1, 240.0], [39.2, 240.0], [39.3, 240.0], [39.4, 240.0], [39.5, 240.0], [39.6, 241.0], [39.7, 241.0], [39.8, 241.0], [39.9, 241.0], [40.0, 241.0], [40.1, 241.0], [40.2, 241.0], [40.3, 241.0], [40.4, 241.0], [40.5, 241.0], [40.6, 241.0], [40.7, 241.0], [40.8, 241.0], [40.9, 241.0], [41.0, 241.0], [41.1, 242.0], [41.2, 242.0], [41.3, 242.0], [41.4, 242.0], [41.5, 242.0], [41.6, 242.0], [41.7, 242.0], [41.8, 242.0], [41.9, 242.0], [42.0, 242.0], [42.1, 242.0], [42.2, 242.0], [42.3, 242.0], [42.4, 243.0], [42.5, 243.0], [42.6, 243.0], [42.7, 243.0], [42.8, 243.0], [42.9, 243.0], [43.0, 243.0], [43.1, 243.0], [43.2, 243.0], [43.3, 243.0], [43.4, 243.0], [43.5, 243.0], [43.6, 244.0], [43.7, 244.0], [43.8, 244.0], [43.9, 244.0], [44.0, 244.0], [44.1, 244.0], [44.2, 244.0], [44.3, 244.0], [44.4, 244.0], [44.5, 244.0], [44.6, 245.0], [44.7, 245.0], [44.8, 245.0], [44.9, 245.0], [45.0, 245.0], [45.1, 245.0], [45.2, 245.0], [45.3, 245.0], [45.4, 245.0], [45.5, 245.0], [45.6, 246.0], [45.7, 246.0], [45.8, 246.0], [45.9, 246.0], [46.0, 246.0], [46.1, 246.0], [46.2, 246.0], [46.3, 246.0], [46.4, 246.0], [46.5, 246.0], [46.6, 247.0], [46.7, 247.0], [46.8, 247.0], [46.9, 247.0], [47.0, 247.0], [47.1, 247.0], [47.2, 247.0], [47.3, 247.0], [47.4, 247.0], [47.5, 247.0], [47.6, 247.0], [47.7, 248.0], [47.8, 248.0], [47.9, 248.0], [48.0, 248.0], [48.1, 248.0], [48.2, 248.0], [48.3, 248.0], [48.4, 248.0], [48.5, 248.0], [48.6, 249.0], [48.7, 249.0], [48.8, 249.0], [48.9, 249.0], [49.0, 249.0], [49.1, 249.0], [49.2, 249.0], [49.3, 249.0], [49.4, 250.0], [49.5, 250.0], [49.6, 250.0], [49.7, 250.0], [49.8, 250.0], [49.9, 250.0], [50.0, 250.0], [50.1, 250.0], [50.2, 250.0], [50.3, 250.0], [50.4, 251.0], [50.5, 251.0], [50.6, 251.0], [50.7, 251.0], [50.8, 251.0], [50.9, 251.0], [51.0, 251.0], [51.1, 251.0], [51.2, 251.0], [51.3, 252.0], [51.4, 252.0], [51.5, 252.0], [51.6, 252.0], [51.7, 252.0], [51.8, 252.0], [51.9, 252.0], [52.0, 252.0], [52.1, 252.0], [52.2, 253.0], [52.3, 253.0], [52.4, 253.0], [52.5, 253.0], [52.6, 253.0], [52.7, 253.0], [52.8, 253.0], [52.9, 253.0], [53.0, 253.0], [53.1, 254.0], [53.2, 254.0], [53.3, 254.0], [53.4, 254.0], [53.5, 254.0], [53.6, 254.0], [53.7, 254.0], [53.8, 254.0], [53.9, 254.0], [54.0, 254.0], [54.1, 255.0], [54.2, 255.0], [54.3, 255.0], [54.4, 255.0], [54.5, 255.0], [54.6, 255.0], [54.7, 255.0], [54.8, 255.0], [54.9, 255.0], [55.0, 255.0], [55.1, 255.0], [55.2, 256.0], [55.3, 256.0], [55.4, 256.0], [55.5, 256.0], [55.6, 256.0], [55.7, 256.0], [55.8, 256.0], [55.9, 256.0], [56.0, 256.0], [56.1, 257.0], [56.2, 257.0], [56.3, 257.0], [56.4, 257.0], [56.5, 257.0], [56.6, 257.0], [56.7, 257.0], [56.8, 257.0], [56.9, 258.0], [57.0, 258.0], [57.1, 258.0], [57.2, 258.0], [57.3, 258.0], [57.4, 258.0], [57.5, 258.0], [57.6, 258.0], [57.7, 259.0], [57.8, 259.0], [57.9, 259.0], [58.0, 259.0], [58.1, 259.0], [58.2, 259.0], [58.3, 259.0], [58.4, 259.0], [58.5, 260.0], [58.6, 260.0], [58.7, 260.0], [58.8, 260.0], [58.9, 260.0], [59.0, 260.0], [59.1, 260.0], [59.2, 260.0], [59.3, 260.0], [59.4, 261.0], [59.5, 261.0], [59.6, 261.0], [59.7, 261.0], [59.8, 261.0], [59.9, 261.0], [60.0, 261.0], [60.1, 261.0], [60.2, 261.0], [60.3, 261.0], [60.4, 261.0], [60.5, 262.0], [60.6, 262.0], [60.7, 262.0], [60.8, 262.0], [60.9, 262.0], [61.0, 262.0], [61.1, 262.0], [61.2, 262.0], [61.3, 262.0], [61.4, 262.0], [61.5, 263.0], [61.6, 263.0], [61.7, 263.0], [61.8, 263.0], [61.9, 263.0], [62.0, 263.0], [62.1, 263.0], [62.2, 263.0], [62.3, 263.0], [62.4, 263.0], [62.5, 264.0], [62.6, 264.0], [62.7, 264.0], [62.8, 264.0], [62.9, 264.0], [63.0, 264.0], [63.1, 264.0], [63.2, 264.0], [63.3, 264.0], [63.4, 265.0], [63.5, 265.0], [63.6, 265.0], [63.7, 265.0], [63.8, 265.0], [63.9, 265.0], [64.0, 265.0], [64.1, 265.0], [64.2, 265.0], [64.3, 265.0], [64.4, 265.0], [64.5, 266.0], [64.6, 266.0], [64.7, 266.0], [64.8, 266.0], [64.9, 266.0], [65.0, 266.0], [65.1, 266.0], [65.2, 267.0], [65.3, 267.0], [65.4, 267.0], [65.5, 267.0], [65.6, 267.0], [65.7, 267.0], [65.8, 268.0], [65.9, 268.0], [66.0, 268.0], [66.1, 268.0], [66.2, 268.0], [66.3, 268.0], [66.4, 268.0], [66.5, 269.0], [66.6, 269.0], [66.7, 269.0], [66.8, 269.0], [66.9, 269.0], [67.0, 269.0], [67.1, 269.0], [67.2, 270.0], [67.3, 270.0], [67.4, 270.0], [67.5, 270.0], [67.6, 270.0], [67.7, 270.0], [67.8, 271.0], [67.9, 271.0], [68.0, 271.0], [68.1, 271.0], [68.2, 271.0], [68.3, 271.0], [68.4, 271.0], [68.5, 272.0], [68.6, 272.0], [68.7, 272.0], [68.8, 272.0], [68.9, 272.0], [69.0, 272.0], [69.1, 272.0], [69.2, 272.0], [69.3, 272.0], [69.4, 272.0], [69.5, 273.0], [69.6, 273.0], [69.7, 273.0], [69.8, 273.0], [69.9, 273.0], [70.0, 273.0], [70.1, 273.0], [70.2, 273.0], [70.3, 273.0], [70.4, 274.0], [70.5, 274.0], [70.6, 274.0], [70.7, 274.0], [70.8, 274.0], [70.9, 274.0], [71.0, 274.0], [71.1, 274.0], [71.2, 274.0], [71.3, 275.0], [71.4, 275.0], [71.5, 275.0], [71.6, 275.0], [71.7, 275.0], [71.8, 275.0], [71.9, 275.0], [72.0, 275.0], [72.1, 275.0], [72.2, 275.0], [72.3, 276.0], [72.4, 276.0], [72.5, 276.0], [72.6, 276.0], [72.7, 276.0], [72.8, 276.0], [72.9, 276.0], [73.0, 276.0], [73.1, 276.0], [73.2, 277.0], [73.3, 277.0], [73.4, 277.0], [73.5, 277.0], [73.6, 277.0], [73.7, 277.0], [73.8, 277.0], [73.9, 277.0], [74.0, 277.0], [74.1, 278.0], [74.2, 278.0], [74.3, 278.0], [74.4, 278.0], [74.5, 278.0], [74.6, 278.0], [74.7, 278.0], [74.8, 279.0], [74.9, 279.0], [75.0, 279.0], [75.1, 279.0], [75.2, 279.0], [75.3, 279.0], [75.4, 279.0], [75.5, 280.0], [75.6, 280.0], [75.7, 280.0], [75.8, 280.0], [75.9, 280.0], [76.0, 280.0], [76.1, 280.0], [76.2, 281.0], [76.3, 281.0], [76.4, 281.0], [76.5, 281.0], [76.6, 282.0], [76.7, 282.0], [76.8, 282.0], [76.9, 282.0], [77.0, 283.0], [77.1, 283.0], [77.2, 283.0], [77.3, 283.0], [77.4, 283.0], [77.5, 284.0], [77.6, 284.0], [77.7, 284.0], [77.8, 284.0], [77.9, 285.0], [78.0, 285.0], [78.1, 285.0], [78.2, 286.0], [78.3, 286.0], [78.4, 286.0], [78.5, 287.0], [78.6, 287.0], [78.7, 287.0], [78.8, 288.0], [78.9, 288.0], [79.0, 288.0], [79.1, 288.0], [79.2, 288.0], [79.3, 289.0], [79.4, 289.0], [79.5, 289.0], [79.6, 289.0], [79.7, 290.0], [79.8, 290.0], [79.9, 290.0], [80.0, 290.0], [80.1, 290.0], [80.2, 291.0], [80.3, 291.0], [80.4, 291.0], [80.5, 291.0], [80.6, 291.0], [80.7, 291.0], [80.8, 291.0], [80.9, 292.0], [81.0, 292.0], [81.1, 292.0], [81.2, 292.0], [81.3, 292.0], [81.4, 292.0], [81.5, 292.0], [81.6, 293.0], [81.7, 293.0], [81.8, 293.0], [81.9, 293.0], [82.0, 293.0], [82.1, 293.0], [82.2, 294.0], [82.3, 294.0], [82.4, 294.0], [82.5, 294.0], [82.6, 294.0], [82.7, 294.0], [82.8, 295.0], [82.9, 295.0], [83.0, 295.0], [83.1, 295.0], [83.2, 295.0], [83.3, 295.0], [83.4, 295.0], [83.5, 295.0], [83.6, 296.0], [83.7, 296.0], [83.8, 296.0], [83.9, 296.0], [84.0, 296.0], [84.1, 296.0], [84.2, 296.0], [84.3, 296.0], [84.4, 296.0], [84.5, 297.0], [84.6, 297.0], [84.7, 297.0], [84.8, 297.0], [84.9, 297.0], [85.0, 297.0], [85.1, 297.0], [85.2, 298.0], [85.3, 298.0], [85.4, 298.0], [85.5, 298.0], [85.6, 298.0], [85.7, 298.0], [85.8, 299.0], [85.9, 299.0], [86.0, 299.0], [86.1, 299.0], [86.2, 299.0], [86.3, 299.0], [86.4, 300.0], [86.5, 300.0], [86.6, 300.0], [86.7, 301.0], [86.8, 301.0], [86.9, 301.0], [87.0, 302.0], [87.1, 302.0], [87.2, 302.0], [87.3, 303.0], [87.4, 303.0], [87.5, 303.0], [87.6, 304.0], [87.7, 304.0], [87.8, 305.0], [87.9, 305.0], [88.0, 306.0], [88.1, 306.0], [88.2, 308.0], [88.3, 309.0], [88.4, 310.0], [88.5, 312.0], [88.6, 313.0], [88.7, 314.0], [88.8, 316.0], [88.9, 317.0], [89.0, 319.0], [89.1, 321.0], [89.2, 322.0], [89.3, 323.0], [89.4, 324.0], [89.5, 325.0], [89.6, 326.0], [89.7, 326.0], [89.8, 328.0], [89.9, 330.0], [90.0, 331.0], [90.1, 332.0], [90.2, 333.0], [90.3, 335.0], [90.4, 337.0], [90.5, 339.0], [90.6, 341.0], [90.7, 343.0], [90.8, 348.0], [90.9, 351.0], [91.0, 355.0], [91.1, 360.0], [91.2, 362.0], [91.3, 363.0], [91.4, 365.0], [91.5, 367.0], [91.6, 369.0], [91.7, 370.0], [91.8, 373.0], [91.9, 376.0], [92.0, 379.0], [92.1, 381.0], [92.2, 384.0], [92.3, 386.0], [92.4, 390.0], [92.5, 393.0], [92.6, 395.0], [92.7, 398.0], [92.8, 401.0], [92.9, 404.0], [93.0, 407.0], [93.1, 409.0], [93.2, 412.0], [93.3, 415.0], [93.4, 418.0], [93.5, 421.0], [93.6, 424.0], [93.7, 426.0], [93.8, 428.0], [93.9, 430.0], [94.0, 433.0], [94.1, 435.0], [94.2, 436.0], [94.3, 438.0], [94.4, 439.0], [94.5, 441.0], [94.6, 443.0], [94.7, 445.0], [94.8, 449.0], [94.9, 451.0], [95.0, 454.0], [95.1, 457.0], [95.2, 459.0], [95.3, 461.0], [95.4, 464.0], [95.5, 468.0], [95.6, 470.0], [95.7, 472.0], [95.8, 475.0], [95.9, 478.0], [96.0, 482.0], [96.1, 486.0], [96.2, 494.0], [96.3, 500.0], [96.4, 504.0], [96.5, 506.0], [96.6, 509.0], [96.7, 512.0], [96.8, 516.0], [96.9, 520.0], [97.0, 523.0], [97.1, 527.0], [97.2, 529.0], [97.3, 532.0], [97.4, 535.0], [97.5, 537.0], [97.6, 541.0], [97.7, 545.0], [97.8, 550.0], [97.9, 557.0], [98.0, 562.0], [98.1, 566.0], [98.2, 572.0], [98.3, 578.0], [98.4, 586.0], [98.5, 594.0], [98.6, 603.0], [98.7, 608.0], [98.8, 614.0], [98.9, 620.0], [99.0, 629.0], [99.1, 638.0], [99.2, 647.0], [99.3, 653.0], [99.4, 674.0], [99.5, 698.0], [99.6, 723.0], [99.7, 751.0], [99.8, 790.0], [99.9, 872.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 213195.0, "series": [{"data": [[0.0, 17658.0], [300.0, 4070.0], [600.0, 48.0], [700.0, 6.0], [100.0, 213195.0], [200.0, 14083.0], [400.0, 706.0], [800.0, 1.0], [900.0, 1.0], [500.0, 232.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 20062.0], [300.0, 3391.0], [600.0, 3.0], [700.0, 1.0], [100.0, 211973.0], [200.0, 13926.0], [400.0, 548.0], [500.0, 96.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 1991.0], [600.0, 2373.0], [700.0, 787.0], [200.0, 200823.0], [800.0, 275.0], [900.0, 126.0], [1000.0, 34.0], [1100.0, 6.0], [300.0, 16089.0], [1200.0, 2.0], [100.0, 12953.0], [400.0, 8888.0], [500.0, 5653.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 386.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 740420.0, "series": [{"data": [[0.0, 740420.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 386.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 9194.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 334.3919448574135, "minX": 1.64810802E12, "maxY": 500.0, "series": [{"data": [[1.64810808E12, 500.0], [1.64810814E12, 499.4165425589857], [1.64810802E12, 388.6100050615811], [1.6481082E12, 334.3919448574135]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6481082E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.33333333333333337, "minX": 1.0, "maxY": 553.4117647058823, "series": [{"data": [[2.0, 1.3333333333333333], [3.0, 1.1428571428571428], [4.0, 1.4], [5.0, 2.0], [6.0, 2.0], [7.0, 2.0], [8.0, 2.0], [9.0, 3.0], [10.0, 3.3333333333333335], [11.0, 3.0], [12.0, 2.5], [13.0, 5.0], [14.0, 3.5], [15.0, 3.0], [16.0, 5.0], [17.0, 5.333333333333333], [18.0, 6.333333333333333], [19.0, 4.5], [20.0, 5.0], [21.0, 6.428571428571429], [22.0, 7.0], [23.0, 7.5], [24.0, 7.0], [25.0, 7.0], [26.0, 9.636363636363637], [27.0, 8.0], [28.0, 8.0], [29.0, 7.5], [30.0, 13.142857142857142], [31.0, 10.5], [33.0, 9.5], [35.0, 11.0], [34.0, 10.333333333333334], [37.0, 11.0], [36.0, 10.5], [38.0, 11.428571428571429], [39.0, 12.0], [40.0, 13.333333333333334], [41.0, 13.714285714285714], [42.0, 37.22222222222222], [43.0, 84.84615384615384], [44.0, 94.0], [45.0, 86.66666666666667], [46.0, 34.22222222222222], [47.0, 27.466666666666672], [48.0, 37.61538461538461], [49.0, 37.4375], [50.0, 50.11764705882354], [51.0, 32.46153846153847], [52.0, 33.06666666666667], [53.0, 36.88235294117648], [54.0, 27.88461538461539], [55.0, 41.3], [56.0, 47.272727272727266], [57.0, 40.50000000000001], [58.0, 49.692307692307686], [59.0, 56.666666666666664], [60.0, 43.800000000000004], [61.0, 40.599999999999994], [62.0, 72.42105263157897], [63.0, 28.916666666666668], [64.0, 39.416666666666664], [65.0, 33.19047619047619], [66.0, 64.05882352941178], [67.0, 84.10000000000001], [68.0, 45.882352941176464], [69.0, 32.75], [70.0, 62.06250000000001], [71.0, 43.21052631578947], [72.0, 48.06250000000001], [73.0, 30.30769230769231], [74.0, 57.0], [75.0, 31.666666666666664], [76.0, 51.875], [77.0, 58.90909090909091], [78.0, 133.74999999999997], [79.0, 34.8235294117647], [80.0, 42.58333333333333], [81.0, 48.45454545454545], [82.0, 92.2], [83.0, 49.41304347826084], [84.0, 40.45454545454545], [85.0, 38.857142857142854], [87.0, 20.0], [86.0, 20.333333333333332], [88.0, 35.45], [89.0, 61.4137931034483], [90.0, 135.04000000000002], [91.0, 172.26666666666668], [92.0, 35.54545454545455], [93.0, 49.37037037037038], [94.0, 43.45833333333333], [95.0, 39.6], [96.0, 39.88235294117647], [97.0, 37.11111111111111], [98.0, 48.869565217391305], [99.0, 44.96], [100.0, 45.35294117647059], [101.0, 84.35714285714286], [102.0, 55.78571428571428], [103.0, 44.57142857142857], [104.0, 50.3125], [105.0, 56.72727272727273], [106.0, 41.125], [107.0, 130.45161290322582], [108.0, 72.0], [109.0, 59.46666666666667], [110.0, 70.07142857142858], [111.0, 95.08333333333333], [112.0, 118.73333333333335], [113.0, 55.02702702702704], [114.0, 124.53846153846153], [115.0, 59.77142857142856], [116.0, 93.5], [117.0, 162.20000000000002], [118.0, 55.12500000000001], [119.0, 85.44444444444444], [120.0, 40.300000000000004], [121.0, 28.0], [122.0, 48.64999999999999], [123.0, 84.76666666666668], [124.0, 80.13333333333333], [125.0, 60.4], [126.0, 89.95833333333331], [127.0, 70.83333333333333], [128.0, 95.6875], [129.0, 59.6923076923077], [130.0, 90.81818181818183], [131.0, 126.73333333333338], [132.0, 76.07692307692308], [133.0, 100.94999999999999], [134.0, 96.92857142857139], [135.0, 98.41176470588235], [136.0, 101.0], [138.0, 101.375], [139.0, 112.50000000000001], [140.0, 45.800000000000004], [141.0, 69.5], [142.0, 80.025], [143.0, 86.80769230769232], [137.0, 29.5], [144.0, 72.17857142857143], [145.0, 86.83333333333331], [146.0, 147.9375], [147.0, 58.83333333333333], [148.0, 106.46153846153845], [149.0, 69.47058823529412], [150.0, 62.23529411764705], [151.0, 60.35714285714287], [152.0, 108.11764705882352], [153.0, 80.0], [154.0, 85.92857142857144], [156.0, 81.0], [157.0, 123.46875], [158.0, 131.16666666666666], [159.0, 89.57142857142856], [155.0, 36.125], [160.0, 94.74999999999997], [161.0, 121.88888888888889], [162.0, 106.96551724137925], [163.0, 77.32258064516131], [164.0, 71.07142857142858], [165.0, 41.63636363636364], [166.0, 90.46153846153847], [167.0, 94.99999999999999], [168.0, 66.42857142857143], [170.0, 94.84615384615385], [171.0, 107.38235294117645], [172.0, 88.52272727272731], [173.0, 66.53846153846155], [174.0, 172.71428571428572], [175.0, 128.27272727272728], [169.0, 40.0], [176.0, 107.17391304347828], [177.0, 167.60000000000002], [178.0, 79.9375], [179.0, 49.0], [180.0, 165.06666666666666], [181.0, 91.87500000000001], [182.0, 57.41818181818183], [183.0, 89.72222222222221], [184.0, 102.9], [185.0, 113.76470588235296], [186.0, 87.40625], [187.0, 81.15217391304346], [188.0, 107.71874999999997], [189.0, 150.39999999999998], [190.0, 97.3913043478261], [191.0, 137.8076923076923], [192.0, 123.74999999999999], [193.0, 67.53125000000001], [194.0, 103.14285714285712], [195.0, 104.57142857142858], [196.0, 126.46666666666667], [197.0, 73.18181818181816], [198.0, 128.8888888888889], [199.0, 128.75], [200.0, 114.52777777777779], [201.0, 94.78260869565217], [202.0, 115.41176470588232], [203.0, 96.44827586206895], [204.0, 119.75000000000001], [205.0, 145.53846153846152], [206.0, 158.625], [207.0, 81.95833333333333], [208.0, 102.51724137931035], [209.0, 87.87500000000001], [210.0, 160.66666666666666], [211.0, 86.67999999999999], [212.0, 195.9545454545454], [213.0, 111.92452830188682], [214.0, 200.5], [215.0, 78.49999999999999], [216.0, 119.63636363636361], [217.0, 91.30434782608698], [218.0, 124.5], [219.0, 97.88235294117648], [220.0, 88.09523809523809], [221.0, 88.44999999999997], [222.0, 193.65000000000003], [223.0, 85.85185185185188], [224.0, 155.52941176470586], [225.0, 94.67857142857143], [226.0, 97.26923076923076], [227.0, 80.50000000000001], [228.0, 172.04999999999998], [229.0, 116.83333333333333], [230.0, 105.51851851851852], [231.0, 137.5], [232.0, 145.49999999999997], [233.0, 183.1111111111111], [234.0, 123.37037037037038], [235.0, 135.8], [236.0, 107.60606060606062], [237.0, 55.658536585365866], [238.0, 55.28571428571429], [239.0, 116.95238095238095], [240.0, 81.95744680851065], [241.0, 95.23809523809524], [242.0, 112.6829268292683], [243.0, 138.1153846153846], [244.0, 119.44444444444443], [245.0, 84.57142857142858], [246.0, 139.0222222222222], [247.0, 113.78571428571428], [248.0, 64.9722222222222], [249.0, 80.69565217391302], [250.0, 235.25], [251.0, 123.99999999999997], [252.0, 212.2857142857143], [253.0, 140.1714285714286], [254.0, 179.52173913043478], [255.0, 124.10344827586208], [257.0, 118.96969696969694], [256.0, 91.45454545454544], [258.0, 124.58620689655172], [259.0, 226.1739130434783], [260.0, 137.05882352941174], [261.0, 68.67647058823529], [262.0, 298.4000000000001], [263.0, 75.01639344262294], [264.0, 81.48717948717949], [270.0, 148.05555555555557], [271.0, 216.05], [268.0, 130.75], [269.0, 139.93333333333334], [265.0, 111.95833333333333], [266.0, 134.64705882352942], [267.0, 208.6428571428571], [273.0, 111.0416666666667], [272.0, 138.85714285714283], [274.0, 116.21621621621622], [275.0, 236.60000000000002], [276.0, 148.91304347826085], [277.0, 92.36734693877553], [278.0, 135.7741935483871], [279.0, 162.53333333333336], [280.0, 130.05555555555554], [286.0, 86.80000000000003], [287.0, 143.93750000000003], [284.0, 119.77777777777777], [285.0, 131.64000000000001], [281.0, 112.47368421052632], [282.0, 119.6923076923077], [283.0, 282.87500000000006], [289.0, 145.0], [288.0, 95.45], [290.0, 165.10526315789474], [291.0, 206.85], [292.0, 158.89999999999995], [293.0, 125.48], [294.0, 281.69230769230774], [295.0, 74.2], [296.0, 187.1724137931035], [302.0, 100.77419354838707], [303.0, 138.31578947368422], [300.0, 148.32], [301.0, 221.8823529411765], [297.0, 149.03773584905667], [298.0, 167.7058823529412], [299.0, 127.41304347826089], [305.0, 155.90909090909093], [304.0, 122.20689655172416], [306.0, 87.81904761904761], [307.0, 116.15789473684212], [308.0, 170.05882352941174], [309.0, 130.72727272727272], [310.0, 82.16], [311.0, 90.78181818181822], [312.0, 188.1666666666667], [318.0, 104.89230769230768], [319.0, 105.8529411764706], [316.0, 198.52631578947367], [317.0, 129.8709677419355], [313.0, 99.67142857142858], [314.0, 189.65000000000006], [315.0, 107.91044776119404], [321.0, 142.25], [320.0, 190.23529411764707], [322.0, 171.45833333333331], [323.0, 114.03846153846156], [324.0, 216.5], [325.0, 117.5], [326.0, 113.93181818181819], [327.0, 78.87777777777775], [328.0, 130.73529411764702], [334.0, 164.7272727272727], [335.0, 143.9375], [332.0, 210.52631578947364], [333.0, 87.0566037735849], [329.0, 127.5], [330.0, 103.67948717948717], [331.0, 105.98507462686565], [337.0, 142.8837209302325], [336.0, 95.02439024390243], [338.0, 97.28695652173911], [339.0, 210.64999999999998], [340.0, 105.1340206185567], [341.0, 95.05303030303031], [342.0, 123.75999999999999], [343.0, 108.38000000000002], [344.0, 129.46031746031747], [350.0, 113.23611111111114], [351.0, 125.75757575757572], [348.0, 227.6428571428571], [349.0, 125.31999999999998], [345.0, 220.55555555555554], [346.0, 148.05999999999997], [347.0, 89.21495327102802], [353.0, 200.66666666666666], [352.0, 99.7142857142857], [354.0, 177.36842105263156], [355.0, 190.52173913043478], [356.0, 169.35999999999999], [357.0, 169.12000000000003], [358.0, 154.61904761904765], [359.0, 213.42857142857144], [360.0, 111.2650602409639], [366.0, 192.73076923076925], [367.0, 109.49000000000001], [364.0, 150.03125000000006], [365.0, 132.76923076923077], [361.0, 127.66666666666661], [362.0, 126.29577464788734], [363.0, 119.67272727272727], [369.0, 179.45999999999995], [368.0, 175.07142857142853], [370.0, 155.1428571428571], [371.0, 123.83333333333334], [372.0, 127.05172413793103], [373.0, 105.29729729729728], [374.0, 130.19565217391306], [375.0, 118.01333333333332], [376.0, 201.49999999999997], [382.0, 228.23076923076923], [383.0, 99.11111111111119], [380.0, 162.03030303030303], [381.0, 156.97777777777782], [377.0, 133.66666666666666], [378.0, 207.2142857142857], [379.0, 165.14814814814818], [385.0, 124.87500000000003], [384.0, 172.24999999999997], [386.0, 238.33333333333331], [387.0, 163.18918918918922], [388.0, 104.78061224489804], [389.0, 175.9310344827586], [390.0, 141.35294117647055], [391.0, 102.56250000000001], [392.0, 122.95652173913044], [398.0, 186.68965517241378], [399.0, 135.57142857142858], [396.0, 145.70588235294116], [397.0, 232.1428571428571], [393.0, 223.36363636363632], [394.0, 234.91176470588238], [395.0, 117.04347826086956], [401.0, 110.23456790123457], [400.0, 152.65], [402.0, 206.7058823529412], [403.0, 106.05714285714284], [404.0, 111.34848484848487], [405.0, 135.79999999999995], [406.0, 122.56521739130433], [407.0, 115.1780821917808], [408.0, 215.58333333333331], [414.0, 189.70909090909097], [415.0, 125.79069767441861], [412.0, 105.12587412587409], [413.0, 143.88392857142867], [409.0, 182.44444444444446], [410.0, 132.15384615384616], [411.0, 105.13664596273291], [417.0, 121.44545454545454], [416.0, 108.03723404255317], [418.0, 185.0645161290323], [419.0, 281.75], [420.0, 159.43902439024393], [421.0, 186.09523809523813], [422.0, 223.2916666666666], [423.0, 109.06707317073169], [424.0, 184.21874999999997], [430.0, 137.62745098039215], [431.0, 110.3455882352941], [428.0, 122.86885245901642], [429.0, 173.2608695652174], [425.0, 167.17073170731703], [426.0, 142.58823529411765], [427.0, 110.58], [433.0, 185.3714285714286], [432.0, 220.99999999999997], [434.0, 109.75], [435.0, 145.00000000000003], [436.0, 125.12727272727263], [437.0, 122.45588235294113], [438.0, 126.63690476190477], [439.0, 126.43137254901967], [440.0, 119.53703703703704], [446.0, 112.85567010309276], [447.0, 133.00000000000003], [444.0, 135.13157894736847], [445.0, 177.89189189189193], [441.0, 237.35714285714283], [442.0, 137.203125], [443.0, 166.1555555555556], [449.0, 241.72727272727272], [448.0, 168.71428571428572], [450.0, 132.3555555555555], [451.0, 171.93617021276594], [452.0, 210.0909090909091], [453.0, 113.05142857142856], [454.0, 132.98969072164945], [455.0, 212.6875], [456.0, 140.74999999999994], [462.0, 159.13333333333335], [463.0, 209.90909090909096], [460.0, 146.3000000000001], [461.0, 164.98333333333338], [457.0, 120.64062500000003], [458.0, 209.76190476190473], [459.0, 148.1724137931034], [465.0, 127.22689075630255], [464.0, 125.24000000000001], [466.0, 127.05], [467.0, 145.44444444444443], [468.0, 271.3529411764706], [469.0, 124.40178571428565], [470.0, 129.73267326732676], [471.0, 136.14516129032256], [472.0, 269.2105263157895], [478.0, 121.9784172661871], [479.0, 104.86734693877558], [476.0, 159.51923076923072], [477.0, 208.8103448275861], [473.0, 124.26771653543315], [474.0, 110.66206896551724], [475.0, 199.08108108108112], [481.0, 141.21212121212116], [480.0, 138.44736842105266], [482.0, 160.14893617021278], [483.0, 144.61842105263156], [484.0, 176.4333333333333], [485.0, 124.79999999999997], [486.0, 123.82805429864253], [487.0, 140.033962264151], [488.0, 134.44585987261158], [494.0, 252.3478260869566], [495.0, 119.34726688102897], [492.0, 236.83333333333334], [493.0, 110.92088607594921], [489.0, 128.62365591397852], [490.0, 208.7647058823529], [491.0, 112.77108433734936], [496.0, 109.03505154639166], [497.0, 113.17563739376767], [498.0, 154.57142857142867], [499.0, 110.63153947121717], [500.0, 137.3717847780726], [1.0, 1.6666666666666667]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[487.8833800000034, 135.22410000000482]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 0.33333333333333337], [3.0, 0.7142857142857143], [4.0, 1.0], [5.0, 2.8], [6.0, 2.5], [7.0, 2.5], [8.0, 3.0], [9.0, 2.0], [10.0, 3.0], [11.0, 5.0], [12.0, 4.0], [13.0, 6.0], [14.0, 4.5], [15.0, 5.0], [16.0, 7.666666666666666], [17.0, 7.666666666666667], [18.0, 7.0], [19.0, 7.5], [20.0, 7.0], [21.0, 7.0], [22.0, 8.0], [23.0, 7.0], [24.0, 7.5], [25.0, 8.333333333333334], [26.0, 12.363636363636363], [27.0, 11.0], [28.0, 10.5], [29.0, 12.0], [30.0, 14.428571428571427], [31.0, 14.5], [33.0, 10.75], [35.0, 10.5], [34.0, 10.666666666666666], [37.0, 11.0], [36.0, 9.8], [38.0, 61.71428571428572], [39.0, 26.6], [40.0, 11.0], [41.0, 14.571428571428573], [42.0, 34.0], [43.0, 65.23076923076923], [44.0, 55.6923076923077], [45.0, 55.5], [46.0, 16.0], [47.0, 30.2], [48.0, 31.846153846153847], [49.0, 34.1875], [50.0, 36.94117647058824], [51.0, 29.384615384615387], [52.0, 22.8], [53.0, 26.47058823529412], [54.0, 24.80769230769231], [55.0, 25.500000000000007], [56.0, 33.36363636363636], [57.0, 28.642857142857142], [58.0, 31.153846153846157], [59.0, 35.666666666666664], [60.0, 34.00000000000001], [61.0, 25.5], [62.0, 32.94736842105263], [63.0, 55.5], [64.0, 45.333333333333336], [65.0, 20.71428571428572], [66.0, 43.588235294117645], [67.0, 64.4], [68.0, 84.8235294117647], [69.0, 38.375], [70.0, 64.6875], [71.0, 42.473684210526315], [72.0, 42.4375], [73.0, 35.07692307692309], [74.0, 39.83333333333332], [75.0, 27.13333333333333], [76.0, 41.0], [77.0, 41.36363636363637], [78.0, 47.25], [79.0, 32.70588235294118], [80.0, 49.375], [81.0, 51.27272727272727], [82.0, 42.400000000000006], [83.0, 24.23913043478261], [84.0, 31.13636363636363], [85.0, 30.928571428571427], [87.0, 24.0], [86.0, 23.5], [88.0, 61.94999999999998], [89.0, 63.4137931034483], [90.0, 44.199999999999996], [91.0, 53.9], [92.0, 27.54545454545454], [93.0, 36.51851851851852], [94.0, 47.291666666666664], [95.0, 31.4], [96.0, 34.94117647058823], [97.0, 38.44444444444445], [98.0, 45.65217391304347], [99.0, 43.39999999999999], [100.0, 33.470588235294116], [101.0, 73.85714285714285], [102.0, 46.857142857142854], [103.0, 35.42857142857143], [104.0, 58.437499999999986], [105.0, 58.545454545454554], [106.0, 42.18750000000001], [107.0, 46.8709677419355], [108.0, 44.25000000000001], [109.0, 43.33333333333333], [110.0, 39.0], [111.0, 71.00000000000001], [112.0, 48.4], [113.0, 44.16216216216217], [114.0, 66.30769230769229], [115.0, 43.02857142857142], [116.0, 54.666666666666664], [117.0, 85.0], [118.0, 62.145833333333336], [119.0, 77.18518518518519], [120.0, 67.95], [121.0, 35.25], [122.0, 51.79999999999999], [123.0, 75.86666666666666], [124.0, 73.46666666666667], [125.0, 48.24999999999999], [126.0, 73.5], [127.0, 70.5], [128.0, 50.156250000000014], [129.0, 62.76923076923077], [130.0, 78.18181818181819], [131.0, 89.8], [132.0, 37.38461538461537], [133.0, 56.4], [134.0, 69.60714285714286], [135.0, 66.23529411764706], [136.0, 90.18181818181817], [138.0, 81.5], [139.0, 96.55555555555556], [140.0, 50.76666666666667], [141.0, 95.8125], [142.0, 74.95], [143.0, 68.15384615384615], [137.0, 33.5], [144.0, 72.00000000000003], [145.0, 62.333333333333336], [146.0, 77.00000000000001], [147.0, 64.875], [148.0, 92.6923076923077], [149.0, 56.47058823529411], [150.0, 74.17647058823526], [151.0, 71.39285714285715], [152.0, 93.76470588235294], [153.0, 92.5263157894737], [154.0, 81.35714285714286], [156.0, 43.625], [157.0, 92.09375000000003], [158.0, 76.36666666666666], [159.0, 78.71428571428572], [155.0, 42.875], [160.0, 69.24999999999999], [161.0, 97.22222222222221], [162.0, 73.89655172413794], [163.0, 54.29032258064516], [164.0, 60.714285714285715], [165.0, 42.13636363636363], [166.0, 135.46153846153845], [167.0, 141.7142857142857], [168.0, 89.78571428571428], [170.0, 84.61538461538461], [171.0, 97.41176470588235], [172.0, 84.49999999999996], [173.0, 63.8846153846154], [174.0, 106.64285714285715], [175.0, 107.72727272727273], [169.0, 45.34482758620688], [176.0, 92.21739130434783], [177.0, 101.49999999999999], [178.0, 86.1875], [179.0, 67.85], [180.0, 110.3333333333333], [181.0, 120.0], [182.0, 61.70909090909088], [183.0, 83.33333333333334], [184.0, 93.3], [185.0, 94.94117647058823], [186.0, 75.43750000000001], [187.0, 71.41304347826085], [188.0, 75.12499999999999], [189.0, 95.93333333333334], [190.0, 84.52173913043478], [191.0, 89.9230769230769], [192.0, 89.6875], [193.0, 76.68749999999999], [194.0, 76.75], [195.0, 109.92857142857144], [196.0, 139.8], [197.0, 73.86363636363637], [198.0, 98.94444444444446], [199.0, 110.5], [200.0, 104.86111111111111], [201.0, 89.17391304347825], [202.0, 95.47058823529413], [203.0, 73.44827586206898], [204.0, 93.75], [205.0, 85.57692307692307], [206.0, 90.99999999999999], [207.0, 89.66666666666669], [208.0, 89.2758620689655], [209.0, 81.375], [210.0, 114.09523809523809], [211.0, 104.08000000000001], [212.0, 93.4090909090909], [213.0, 96.88679245283018], [214.0, 108.125], [215.0, 71.2], [216.0, 86.95454545454544], [217.0, 81.91304347826086], [218.0, 125.92857142857142], [219.0, 127.82352941176474], [220.0, 148.8571428571429], [221.0, 100.6], [222.0, 98.6], [223.0, 84.29629629629632], [224.0, 165.64705882352945], [225.0, 81.85714285714285], [226.0, 79.11538461538461], [227.0, 66.25], [228.0, 125.94999999999997], [229.0, 172.27777777777777], [230.0, 128.5185185185185], [231.0, 170.6875], [232.0, 149.33333333333334], [233.0, 174.44444444444443], [234.0, 118.29629629629626], [235.0, 121.89999999999998], [236.0, 96.75757575757575], [237.0, 73.53658536585365], [238.0, 75.22448979591836], [239.0, 145.09523809523805], [240.0, 71.4468085106383], [241.0, 87.23809523809521], [242.0, 90.04878048780488], [243.0, 99.84615384615387], [244.0, 79.0], [245.0, 62.821428571428584], [246.0, 95.53333333333337], [247.0, 75.49999999999999], [248.0, 71.19444444444443], [249.0, 64.13043478260867], [250.0, 113.0], [251.0, 79.43478260869566], [252.0, 173.78571428571428], [253.0, 111.20000000000002], [254.0, 112.69565217391305], [255.0, 89.37931034482759], [257.0, 100.33333333333331], [256.0, 77.81818181818181], [258.0, 103.7931034482759], [259.0, 148.47826086956525], [260.0, 149.1764705882353], [261.0, 82.32352941176468], [262.0, 187.93333333333334], [263.0, 89.04918032786887], [264.0, 98.94871794871796], [270.0, 106.05555555555556], [271.0, 133.04999999999995], [268.0, 111.85714285714288], [269.0, 91.8], [265.0, 110.58333333333334], [266.0, 128.99999999999997], [267.0, 148.85714285714283], [273.0, 106.33333333333334], [272.0, 151.50000000000003], [274.0, 108.32432432432434], [275.0, 163.70000000000002], [276.0, 127.69565217391305], [277.0, 84.34693877551018], [278.0, 119.90322580645163], [279.0, 123.36666666666665], [280.0, 130.22222222222223], [286.0, 88.36666666666665], [287.0, 141.31249999999997], [284.0, 115.13333333333331], [285.0, 106.64000000000003], [281.0, 139.94736842105266], [282.0, 128.76923076923083], [283.0, 186.5], [289.0, 173.0769230769231], [288.0, 105.37500000000001], [290.0, 180.10526315789477], [291.0, 183.95], [292.0, 140.63333333333335], [293.0, 118.19999999999999], [294.0, 178.07692307692307], [295.0, 67.2], [296.0, 132.4137931034483], [302.0, 90.51612903225809], [303.0, 122.47368421052633], [300.0, 128.39999999999998], [301.0, 145.35294117647058], [297.0, 110.81132075471696], [298.0, 111.2156862745098], [299.0, 99.43478260869564], [305.0, 138.5454545454545], [304.0, 122.55172413793099], [306.0, 77.40000000000002], [307.0, 136.78947368421052], [308.0, 203.35294117647058], [309.0, 131.90909090909093], [310.0, 84.06999999999996], [311.0, 85.58181818181822], [312.0, 165.86111111111114], [318.0, 94.76923076923083], [319.0, 91.10294117647057], [316.0, 132.4736842105263], [317.0, 104.19354838709677], [313.0, 90.75714285714284], [314.0, 160.6], [315.0, 83.82089552238803], [321.0, 135.09375000000003], [320.0, 163.3529411764706], [322.0, 226.04166666666674], [323.0, 135.75], [324.0, 252.16666666666666], [325.0, 113.84210526315789], [326.0, 114.1590909090909], [327.0, 83.97777777777775], [328.0, 130.44117647058823], [334.0, 179.13636363636363], [335.0, 143.71874999999997], [332.0, 216.9473684210526], [333.0, 87.48427672955977], [329.0, 129.5476190476191], [330.0, 102.98717948717946], [331.0, 106.46268656716416], [337.0, 141.41860465116278], [336.0, 98.48780487804876], [338.0, 94.25217391304348], [339.0, 181.49999999999997], [340.0, 97.55670103092785], [341.0, 94.03030303030306], [342.0, 119.58000000000001], [343.0, 104.78000000000002], [344.0, 134.34920634920633], [350.0, 106.8194444444444], [351.0, 137.21212121212125], [348.0, 223.71428571428572], [349.0, 124.44], [345.0, 215.0], [346.0, 154.83999999999997], [347.0, 84.14018691588785], [353.0, 222.2777777777778], [352.0, 111.48051948051949], [354.0, 192.57894736842104], [355.0, 198.00000000000003], [356.0, 180.48000000000002], [357.0, 179.08000000000004], [358.0, 178.9047619047619], [359.0, 231.2142857142857], [360.0, 111.86746987951804], [366.0, 171.57692307692307], [367.0, 101.89000000000001], [364.0, 134.71875000000003], [365.0, 111.97435897435895], [361.0, 125.07575757575758], [362.0, 115.3380281690141], [363.0, 114.27272727272727], [369.0, 173.37999999999997], [368.0, 155.1785714285714], [370.0, 142.33333333333334], [371.0, 115.9166666666667], [372.0, 120.25862068965519], [373.0, 121.89189189189187], [374.0, 125.45652173913038], [375.0, 110.18666666666664], [376.0, 206.66666666666669], [382.0, 234.46153846153848], [383.0, 106.60493827160491], [380.0, 172.12121212121215], [381.0, 158.24444444444444], [377.0, 94.0], [378.0, 207.9523809523809], [379.0, 180.44444444444443], [385.0, 134.91666666666666], [384.0, 190.32812499999997], [386.0, 240.59999999999994], [387.0, 161.24324324324326], [388.0, 97.95408163265307], [389.0, 195.03448275862067], [390.0, 134.6176470588235], [391.0, 98.62499999999999], [392.0, 118.50724637681162], [398.0, 183.58620689655174], [399.0, 132.07142857142858], [396.0, 140.9803921568627], [397.0, 211.8095238095238], [393.0, 190.95454545454544], [394.0, 208.35294117647055], [395.0, 115.21739130434784], [401.0, 110.79012345679011], [400.0, 157.75], [402.0, 248.0], [403.0, 114.76190476190476], [404.0, 128.06060606060598], [405.0, 189.1], [406.0, 185.1304347826087], [407.0, 131.72602739726028], [408.0, 165.58333333333334], [414.0, 155.16363636363633], [415.0, 117.37209302325581], [412.0, 108.18181818181816], [413.0, 138.4017857142857], [409.0, 144.25925925925924], [410.0, 129.07692307692304], [411.0, 108.33540372670805], [417.0, 110.77272727272725], [416.0, 102.63829787234039], [418.0, 140.8709677419355], [419.0, 181.12499999999997], [420.0, 118.09756097560974], [421.0, 121.42857142857142], [422.0, 288.41666666666674], [423.0, 117.75], [424.0, 209.15625000000003], [430.0, 158.99999999999994], [431.0, 120.36764705882347], [428.0, 135.90163934426235], [429.0, 209.86956521739134], [425.0, 166.36585365853654], [426.0, 141.23529411764704], [427.0, 110.75000000000003], [433.0, 203.60000000000008], [432.0, 270.1875], [434.0, 109.5535714285714], [435.0, 174.5897435897436], [436.0, 127.51515151515156], [437.0, 121.6617647058824], [438.0, 102.15476190476194], [439.0, 120.68627450980394], [440.0, 111.45370370370372], [446.0, 132.06185567010309], [447.0, 126.73417721518987], [444.0, 122.4078947368421], [445.0, 153.24324324324323], [441.0, 209.5], [442.0, 119.23437499999997], [443.0, 142.15555555555554], [449.0, 199.49999999999997], [448.0, 160.14285714285714], [450.0, 113.91851851851851], [451.0, 194.57446808510636], [452.0, 281.77272727272725], [453.0, 122.8857142857142], [454.0, 143.86597938144334], [455.0, 210.68749999999997], [456.0, 167.09374999999997], [462.0, 153.99999999999994], [463.0, 199.5151515151515], [460.0, 142.05], [461.0, 152.56666666666672], [457.0, 122.23437499999999], [458.0, 195.47619047619048], [459.0, 151.0689655172414], [465.0, 122.33613445378153], [464.0, 121.29999999999998], [466.0, 124.32500000000002], [467.0, 145.02469135802465], [468.0, 282.00000000000006], [469.0, 128.24107142857144], [470.0, 128.82178217821777], [471.0, 143.29032258064518], [472.0, 278.7368421052631], [478.0, 106.30215827338124], [479.0, 117.1632653061224], [476.0, 156.8461538461539], [477.0, 216.24137931034485], [473.0, 125.29133858267716], [474.0, 113.35517241379316], [475.0, 201.02702702702697], [481.0, 121.38636363636361], [480.0, 146.0], [482.0, 155.65957446808514], [483.0, 150.94736842105257], [484.0, 174.43333333333337], [485.0, 89.95833333333333], [486.0, 151.54298642533936], [487.0, 115.09433962264148], [488.0, 118.56687898089167], [494.0, 246.0434782608695], [495.0, 118.096463022508], [492.0, 188.0], [493.0, 109.40295358649811], [489.0, 137.2688172043011], [490.0, 199.92156862745102], [491.0, 117.4578313253012], [496.0, 108.18041237113404], [497.0, 119.40793201133148], [498.0, 148.12857142857146], [499.0, 110.24901556347277], [500.0, 135.7988422964379], [1.0, 1.5]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[487.8833800000034, 133.35421199999806]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 1.6666666666666667], [3.0, 1.8571428571428572], [4.0, 2.4], [5.0, 4.8], [6.0, 4.5], [7.0, 4.5], [8.0, 5.0], [9.0, 5.0], [10.0, 6.333333333333333], [11.0, 8.0], [12.0, 6.5], [13.0, 11.0], [14.0, 8.0], [15.0, 8.0], [16.0, 12.666666666666668], [17.0, 13.0], [18.0, 13.333333333333334], [19.0, 12.5], [20.0, 12.0], [21.0, 13.428571428571429], [22.0, 15.0], [23.0, 14.5], [24.0, 14.5], [25.0, 15.333333333333334], [26.0, 22.09090909090909], [27.0, 19.0], [28.0, 18.5], [29.0, 19.5], [30.0, 27.571428571428573], [31.0, 25.0], [33.0, 20.25], [35.0, 21.5], [34.0, 21.0], [37.0, 22.0], [36.0, 20.299999999999997], [38.0, 74.42857142857142], [39.0, 38.8], [40.0, 24.5], [41.0, 28.428571428571427], [42.0, 73.0], [43.0, 160.38461538461542], [44.0, 167.15384615384613], [45.0, 150.58333333333334], [46.0, 50.22222222222222], [47.0, 57.93333333333334], [48.0, 69.76923076923079], [49.0, 71.625], [50.0, 87.23529411764706], [51.0, 61.84615384615385], [52.0, 55.93333333333334], [53.0, 63.588235294117645], [54.0, 52.84615384615385], [55.0, 66.79999999999998], [56.0, 80.72727272727272], [57.0, 69.35714285714285], [58.0, 80.92307692307692], [59.0, 92.41666666666667], [60.0, 78.0], [61.0, 66.2], [62.0, 105.68421052631578], [63.0, 84.5], [64.0, 84.91666666666667], [65.0, 54.0], [66.0, 107.70588235294117], [67.0, 148.6], [68.0, 130.76470588235293], [69.0, 71.375], [70.0, 126.875], [71.0, 85.84210526315788], [72.0, 90.625], [73.0, 65.46153846153845], [74.0, 96.91666666666667], [75.0, 58.8], [76.0, 92.9375], [77.0, 100.36363636363637], [78.0, 181.08333333333331], [79.0, 67.52941176470588], [80.0, 92.0], [81.0, 99.81818181818183], [82.0, 134.6], [83.0, 73.67391304347828], [84.0, 71.5909090909091], [85.0, 69.78571428571428], [87.0, 44.0], [86.0, 44.0], [88.0, 97.44999999999999], [89.0, 124.86206896551718], [90.0, 179.32000000000005], [91.0, 226.2666666666667], [92.0, 63.090909090909065], [93.0, 85.92592592592592], [94.0, 91.00000000000001], [95.0, 71.0], [96.0, 74.85294117647057], [97.0, 75.55555555555556], [98.0, 94.56521739130434], [99.0, 88.47999999999999], [100.0, 78.88235294117646], [101.0, 158.21428571428572], [102.0, 102.71428571428571], [103.0, 80.0], [104.0, 108.81250000000001], [105.0, 115.36363636363636], [106.0, 83.31249999999999], [107.0, 177.3870967741935], [108.0, 116.29166666666667], [109.0, 102.8], [110.0, 109.07142857142856], [111.0, 166.08333333333334], [112.0, 167.20000000000002], [113.0, 99.24324324324324], [114.0, 190.84615384615387], [115.0, 102.88571428571427], [116.0, 148.25], [117.0, 247.2666666666667], [118.0, 117.29166666666666], [119.0, 162.66666666666666], [120.0, 108.25000000000001], [121.0, 63.25], [122.0, 100.5], [123.0, 160.66666666666669], [124.0, 153.6], [125.0, 108.69999999999999], [126.0, 163.50000000000006], [127.0, 141.50000000000003], [128.0, 145.84374999999997], [129.0, 122.46153846153848], [130.0, 169.0], [131.0, 216.53333333333333], [132.0, 113.46153846153845], [133.0, 157.35000000000002], [134.0, 166.5357142857143], [135.0, 164.7058823529412], [136.0, 191.31818181818184], [138.0, 183.06249999999997], [139.0, 209.11111111111117], [140.0, 96.60000000000001], [141.0, 165.31249999999997], [142.0, 155.0], [143.0, 154.96153846153845], [137.0, 63.0], [144.0, 144.25000000000003], [145.0, 149.20000000000002], [146.0, 225.12500000000003], [147.0, 123.70833333333329], [148.0, 199.30769230769232], [149.0, 125.94117647058823], [150.0, 136.52941176470588], [151.0, 131.7857142857143], [152.0, 201.88235294117646], [153.0, 172.5263157894737], [154.0, 167.28571428571428], [156.0, 124.62500000000003], [157.0, 215.59375], [158.0, 207.56666666666666], [159.0, 168.35714285714286], [155.0, 79.0], [160.0, 164.0], [161.0, 219.16666666666663], [162.0, 180.93103448275863], [163.0, 131.64516129032256], [164.0, 131.85714285714286], [165.0, 83.77272727272728], [166.0, 226.0], [167.0, 236.71428571428572], [168.0, 156.35714285714283], [170.0, 179.46153846153845], [171.0, 204.85294117647058], [172.0, 173.06818181818178], [173.0, 130.42307692307696], [174.0, 279.3571428571429], [175.0, 235.99999999999997], [169.0, 85.3448275862069], [176.0, 199.43478260869566], [177.0, 269.1749999999999], [178.0, 166.12499999999997], [179.0, 116.85], [180.0, 275.3999999999999], [181.0, 211.875], [182.0, 119.14545454545451], [183.0, 173.05555555555557], [184.0, 196.2], [185.0, 208.7058823529412], [186.0, 162.90624999999994], [187.0, 152.60869565217394], [188.0, 182.84374999999991], [189.0, 246.4666666666666], [190.0, 181.95652173913044], [191.0, 227.7307692307692], [192.0, 213.4375], [193.0, 144.28124999999994], [194.0, 179.92857142857147], [195.0, 214.5], [196.0, 266.26666666666665], [197.0, 147.04545454545456], [198.0, 227.9444444444445], [199.0, 239.25], [200.0, 219.38888888888886], [201.0, 183.95652173913044], [202.0, 210.8823529411764], [203.0, 169.93103448275863], [204.0, 213.49999999999994], [205.0, 231.1538461538461], [206.0, 249.62499999999997], [207.0, 171.62500000000003], [208.0, 191.79310344827593], [209.0, 169.29166666666666], [210.0, 274.9047619047619], [211.0, 190.76000000000002], [212.0, 289.36363636363643], [213.0, 208.8490566037736], [214.0, 308.75], [215.0, 149.73333333333335], [216.0, 206.68181818181816], [217.0, 173.21739130434784], [218.0, 250.42857142857147], [219.0, 225.82352941176472], [220.0, 236.952380952381], [221.0, 189.04999999999998], [222.0, 292.25], [223.0, 170.14814814814812], [224.0, 321.3529411764706], [225.0, 176.57142857142858], [226.0, 176.42307692307693], [227.0, 146.79166666666669], [228.0, 298.1], [229.0, 289.1666666666667], [230.0, 234.07407407407408], [231.0, 308.1875], [232.0, 294.87500000000006], [233.0, 357.55555555555554], [234.0, 241.6666666666667], [235.0, 257.69999999999993], [236.0, 204.4242424242424], [237.0, 129.26829268292684], [238.0, 130.5510204081633], [239.0, 262.04761904761904], [240.0, 153.44680851063828], [241.0, 182.5238095238095], [242.0, 202.78048780487808], [243.0, 237.96153846153848], [244.0, 198.44444444444443], [245.0, 147.42857142857142], [246.0, 234.64444444444445], [247.0, 189.35714285714286], [248.0, 136.1944444444444], [249.0, 144.82608695652178], [250.0, 348.25], [251.0, 203.45652173913044], [252.0, 386.10714285714283], [253.0, 251.4571428571429], [254.0, 292.2608695652173], [255.0, 213.5], [257.0, 219.33333333333331], [256.0, 169.27272727272728], [258.0, 228.37931034482762], [259.0, 374.65217391304344], [260.0, 286.2549019607843], [261.0, 151.0588235294118], [262.0, 486.53333333333336], [263.0, 164.08196721311475], [264.0, 180.46153846153842], [270.0, 254.16666666666666], [271.0, 349.1000000000001], [268.0, 242.6071428571429], [269.0, 231.8], [265.0, 222.62499999999997], [266.0, 263.6470588235294], [267.0, 357.49999999999994], [273.0, 217.45833333333334], [272.0, 290.39285714285717], [274.0, 224.59459459459458], [275.0, 400.3], [276.0, 276.65217391304344], [277.0, 176.73469387755102], [278.0, 255.70967741935482], [279.0, 285.9], [280.0, 260.2777777777778], [286.0, 175.20000000000002], [287.0, 285.3125], [284.0, 234.93333333333334], [285.0, 238.28], [281.0, 252.47368421052627], [282.0, 248.5], [283.0, 469.37499999999994], [289.0, 318.0769230769231], [288.0, 200.85], [290.0, 345.3157894736842], [291.0, 390.9], [292.0, 299.53333333333336], [293.0, 243.67999999999995], [294.0, 459.92307692307696], [295.0, 141.4], [296.0, 319.6896551724138], [302.0, 191.3225806451613], [303.0, 260.8421052631579], [300.0, 276.71999999999997], [301.0, 367.2352941176471], [297.0, 259.86792452830184], [298.0, 278.9411764705883], [299.0, 226.9130434782609], [305.0, 294.5], [304.0, 244.75862068965517], [306.0, 165.25714285714292], [307.0, 252.94736842105263], [308.0, 373.4117647058824], [309.0, 262.6969696969697], [310.0, 166.25000000000006], [311.0, 176.39090909090913], [312.0, 354.05555555555543], [318.0, 199.6615384615384], [319.0, 196.97058823529414], [316.0, 331.10526315789474], [317.0, 234.06451612903223], [313.0, 190.44285714285715], [314.0, 350.40000000000003], [315.0, 191.74626865671647], [321.0, 277.34375], [320.0, 353.6470588235294], [322.0, 397.54166666666674], [323.0, 249.7884615384615], [324.0, 468.75000000000006], [325.0, 231.36842105263153], [326.0, 228.09090909090907], [327.0, 162.8666666666667], [328.0, 261.2352941176471], [334.0, 343.8636363636364], [335.0, 287.68749999999994], [332.0, 427.47368421052636], [333.0, 174.5534591194968], [329.0, 257.07142857142856], [330.0, 206.6923076923078], [331.0, 212.5373134328359], [337.0, 284.39534883720927], [336.0, 193.53658536585365], [338.0, 191.55652173913046], [339.0, 392.25], [340.0, 202.72164948453607], [341.0, 189.08333333333326], [342.0, 243.37999999999994], [343.0, 213.20000000000005], [344.0, 263.80952380952385], [350.0, 220.0555555555556], [351.0, 262.99999999999994], [348.0, 451.35714285714283], [349.0, 249.8], [345.0, 435.55555555555554], [346.0, 302.90000000000003], [347.0, 173.35514018691586], [353.0, 423.00000000000006], [352.0, 211.22077922077926], [354.0, 369.9473684210526], [355.0, 388.56521739130426], [356.0, 349.84], [357.0, 348.28000000000003], [358.0, 333.57142857142856], [359.0, 444.6428571428571], [360.0, 223.1325301204819], [366.0, 364.34615384615387], [367.0, 211.39000000000001], [364.0, 284.78125], [365.0, 244.79487179487188], [361.0, 252.77272727272725], [362.0, 241.64788732394365], [363.0, 233.98181818181823], [369.0, 352.84000000000003], [368.0, 330.25], [370.0, 297.4761904761905], [371.0, 239.74999999999997], [372.0, 247.3275862068965], [373.0, 227.1891891891892], [374.0, 255.65217391304355], [375.0, 228.20000000000007], [376.0, 408.22222222222223], [382.0, 462.69230769230774], [383.0, 205.71604938271605], [380.0, 334.1515151515152], [381.0, 315.28888888888895], [377.0, 227.66666666666666], [378.0, 415.19047619047626], [379.0, 345.62962962962956], [385.0, 259.83333333333337], [384.0, 362.62499999999994], [386.0, 479.0000000000001], [387.0, 324.4594594594595], [388.0, 202.76020408163276], [389.0, 371.03448275862064], [390.0, 275.97058823529414], [391.0, 201.21874999999997], [392.0, 241.46376811594214], [398.0, 370.2758620689654], [399.0, 267.64285714285717], [396.0, 286.72549019607845], [397.0, 443.9523809523809], [393.0, 414.3181818181818], [394.0, 443.29411764705884], [395.0, 232.26086956521738], [401.0, 221.0617283950617], [400.0, 310.4], [402.0, 454.70588235294116], [403.0, 220.84761904761902], [404.0, 239.4393939393939], [405.0, 324.9], [406.0, 307.695652173913], [407.0, 246.9041095890412], [408.0, 381.16666666666663], [414.0, 344.8909090909091], [415.0, 243.18604651162798], [412.0, 213.31468531468528], [413.0, 282.3124999999999], [409.0, 326.70370370370375], [410.0, 261.2307692307692], [411.0, 213.4844720496894], [417.0, 232.2454545454545], [416.0, 210.69148936170203], [418.0, 325.9354838709678], [419.0, 462.875], [420.0, 277.5365853658536], [421.0, 307.6190476190476], [422.0, 511.75], [423.0, 226.85975609756105], [424.0, 393.3749999999999], [430.0, 296.6470588235294], [431.0, 230.7352941176471], [428.0, 258.7868852459016], [429.0, 383.13043478260863], [425.0, 333.609756097561], [426.0, 283.8235294117646], [427.0, 221.34999999999997], [433.0, 388.99999999999983], [432.0, 491.25000000000006], [434.0, 219.34821428571433], [435.0, 319.61538461538464], [436.0, 252.6484848484849], [437.0, 244.13235294117638], [438.0, 228.80952380952397], [439.0, 247.1470588235295], [440.0, 230.9907407407407], [446.0, 245.22680412371133], [447.0, 259.81012658227854], [444.0, 257.5657894736842], [445.0, 331.16216216216213], [441.0, 446.8571428571429], [442.0, 256.46875], [443.0, 308.31111111111113], [449.0, 441.27272727272737], [448.0, 328.8571428571429], [450.0, 246.29629629629628], [451.0, 366.51063829787233], [452.0, 491.9545454545454], [453.0, 235.9542857142857], [454.0, 276.8556701030929], [455.0, 423.40625000000006], [456.0, 307.90624999999994], [462.0, 313.1555555555555], [463.0, 409.4848484848485], [460.0, 288.36250000000007], [461.0, 317.55], [457.0, 242.8906250000001], [458.0, 405.2857142857143], [459.0, 299.2413793103449], [465.0, 249.57142857142875], [464.0, 246.56666666666663], [466.0, 251.375], [467.0, 290.4814814814816], [468.0, 553.4117647058823], [469.0, 252.64285714285717], [470.0, 258.57425742574264], [471.0, 279.483870967742], [472.0, 547.9473684210527], [478.0, 228.3021582733812], [479.0, 222.0374149659864], [476.0, 316.36538461538476], [477.0, 425.0689655172413], [473.0, 249.55905511811036], [474.0, 224.03793103448277], [475.0, 400.13513513513504], [481.0, 262.62121212121195], [480.0, 284.4605263157894], [482.0, 315.8510638297872], [483.0, 295.59210526315775], [484.0, 350.8833333333333], [485.0, 214.7833333333333], [486.0, 275.37556561085955], [487.0, 255.15471698113205], [488.0, 253.02547770700642], [494.0, 498.39130434782624], [495.0, 237.4694533762058], [492.0, 424.83333333333337], [493.0, 220.33860759493695], [489.0, 265.9247311827956], [490.0, 408.72549019607834], [491.0, 230.2650602409639], [496.0, 217.242268041237], [497.0, 232.60623229461754], [498.0, 302.70000000000016], [499.0, 220.8963060191262], [500.0, 273.19201417158166], [1.0, 3.166666666666667]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[487.8833800000034, 268.60209600000275]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 100084.33333333333, "minX": 1.64810802E12, "maxY": 1.6733940666666666E7, "series": [{"data": [[1.64810808E12, 1.2998722066666666E7], [1.64810814E12, 1.6733940666666666E7], [1.64810802E12, 1533685.7], [1.6481082E12, 1295151.5666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64810808E12, 1011377.7], [1.64810814E12, 1301866.8666666667], [1.64810802E12, 120004.43333333333], [1.6481082E12, 100084.33333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6481082E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 74.77780012065134, "minX": 1.64810802E12, "maxY": 476.686316147116, "series": [{"data": [[1.64810808E12, 151.32062804981965], [1.64810814E12, 116.95982254047307], [1.64810802E12, 249.1579886180243], [1.6481082E12, 74.77780012065134]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.64810808E12, 149.45642243192762], [1.64810814E12, 116.30933067617313], [1.64810802E12, 228.9252663115844], [1.6481082E12, 75.00865622423753]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.64810808E12, 301.2358092604337], [1.64810814E12, 233.33227739726007], [1.64810802E12, 476.686316147116], [1.6481082E12, 150.44540518801546]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6481082E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 74.77287351699185, "minX": 1.64810802E12, "maxY": 249.15170304935063, "series": [{"data": [[1.64810808E12, 151.31582849871137], [1.64810814E12, 116.95592310087072], [1.64810802E12, 249.15170304935063], [1.6481082E12, 74.77287351699185]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.64810808E12, 149.456182003965], [1.64810814E12, 116.30911270609649], [1.64810802E12, 228.9068741677767], [1.6481082E12, 75.0085531739491]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.64810808E12, 149.89153415296522], [1.64810814E12, 116.35308997509269], [1.64810802E12, 227.42979699312033], [1.6481082E12, 75.64628996581507]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6481082E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64810802E12, "maxY": 0.26993969251677524, "series": [{"data": [[1.64810808E12, 0.0], [1.64810814E12, 0.0], [1.64810802E12, 0.0], [1.6481082E12, 0.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.64810808E12, 0.048536394782713675], [1.64810814E12, 0.04562580765697745], [1.64810802E12, 0.26464713715046506], [1.6481082E12, 0.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.64810808E12, 0.04856664762878146], [1.64810814E12, 0.045617995018679816], [1.64810802E12, 0.26993969251677524], [1.6481082E12, 0.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6481082E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64810802E12, "maxY": 973.0, "series": [{"data": [[1.64810808E12, 689.0], [1.64810814E12, 499.0], [1.64810802E12, 973.0], [1.6481082E12, 402.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64810808E12, 66.0], [1.64810814E12, 49.0], [1.64810802E12, 91.00899523139], [1.6481082E12, 7.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64810808E12, 66.0], [1.64810814E12, 52.0], [1.64810802E12, 96.0], [1.6481082E12, 8.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64810808E12, 66.0], [1.64810814E12, 51.0], [1.64810802E12, 94.00949761569498], [1.6481082E12, 8.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64810808E12, 0.0], [1.64810814E12, 0.0], [1.64810802E12, 0.0], [1.6481082E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64810808E12, 131.0], [1.64810814E12, 110.0], [1.64810802E12, 292.0], [1.6481082E12, 77.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6481082E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 25.0, "minX": 1160.0, "maxY": 775.0, "series": [{"data": [[1160.0, 57.0], [1699.0, 87.0], [1869.0, 132.0], [2032.0, 254.0], [2070.0, 158.0], [2076.0, 206.0], [2100.0, 227.0], [2134.0, 279.0], [2167.0, 304.0], [2189.0, 25.0], [2320.0, 318.0], [2617.0, 273.0], [2668.0, 291.0], [2636.0, 280.0], [2603.0, 286.0], [2664.0, 307.0], [2747.0, 303.0], [2704.0, 259.0], [3101.0, 255.0], [3263.0, 243.0], [3404.0, 238.0], [3364.0, 234.0], [3481.0, 241.0], [3544.0, 229.0], [3630.0, 229.0], [3677.0, 231.0], [3663.0, 218.0], [3912.0, 214.0], [4267.0, 205.0], [4606.0, 192.0], [4693.0, 187.0], [4855.0, 174.0], [5072.0, 156.0], [4910.0, 163.0], [4962.0, 159.0], [5069.0, 155.0], [5070.0, 153.0], [5045.0, 157.0], [5051.0, 153.0], [5076.0, 156.0], [5083.0, 157.0], [5084.0, 154.0], [5107.0, 152.0], [5028.0, 158.0], [5270.0, 159.0], [5128.0, 152.0], [5227.0, 149.0], [5298.0, 146.0], [5360.0, 144.0], [5352.0, 143.0], [5336.0, 143.0], [5395.0, 142.0], [5446.0, 143.0], [5429.0, 141.0], [5441.0, 141.0], [5403.0, 142.0], [5427.0, 140.0], [5432.0, 140.0], [5510.0, 140.0], [5624.0, 138.0], [5609.0, 137.0], [5464.0, 141.0], [5484.0, 139.0], [5445.0, 142.0], [5672.0, 138.0], [5686.0, 137.0], [5650.0, 138.0], [5725.0, 136.0], [5735.0, 131.0], [5656.0, 137.0], [5685.0, 137.0], [5767.0, 135.0], [5768.0, 135.0], [5815.0, 130.0], [5846.0, 135.0], [5838.0, 130.0], [5863.0, 130.0], [5879.0, 130.0], [5674.0, 137.0], [5943.0, 129.0], [5896.0, 131.0], [5888.0, 130.0], [5947.0, 128.0], [6095.0, 128.0], [5910.0, 129.0], [6133.0, 129.0], [5908.0, 130.0], [6026.0, 129.0], [6075.0, 126.0], [6136.0, 126.0], [6111.0, 126.0], [6117.0, 127.0], [6120.0, 124.0], [6162.0, 123.0], [6263.0, 128.0], [6144.0, 129.0], [6237.0, 123.0], [6238.0, 123.0], [6191.0, 122.0], [6337.0, 120.0], [6371.0, 123.0], [6274.0, 123.0], [6373.0, 123.0], [6342.0, 122.0], [6360.0, 121.0], [6356.0, 122.0], [6346.0, 122.0], [6347.0, 123.0], [6609.0, 117.0], [6482.0, 122.0], [6413.0, 121.0], [6566.0, 119.0], [6595.0, 120.0], [6630.0, 118.0], [6466.0, 116.0], [6612.0, 122.0], [6618.0, 121.0], [6849.0, 116.0], [6813.0, 122.0], [6822.0, 112.0], [6658.0, 121.0], [6721.0, 121.0], [6732.0, 122.0], [6748.0, 65.0], [6688.0, 115.0], [6786.0, 114.0], [6802.0, 113.0], [6809.0, 115.0], [6810.0, 113.0], [6785.0, 116.0], [6784.0, 115.0], [6888.0, 109.0], [6883.0, 92.0], [6878.0, 79.0], [6898.0, 100.0], [6928.0, 111.0], [6927.0, 112.0], [6964.0, 109.0], [7170.0, 113.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1699.0, 589.0], [1869.0, 775.0], [2032.0, 510.0], [2070.0, 526.5], [2076.0, 563.0], [2100.0, 575.0], [2134.0, 528.0], [2167.0, 602.0], [2320.0, 637.0], [2617.0, 584.0], [2668.0, 617.0], [2636.0, 639.0], [2603.0, 651.0], [2664.0, 594.0], [2747.0, 658.0], [2704.0, 536.0], [3101.0, 522.0], [3263.0, 570.0], [3404.0, 578.0], [3364.0, 564.5], [3481.0, 548.0], [3544.0, 575.0], [3630.0, 612.0], [3677.0, 522.0], [3663.0, 506.0], [3912.0, 578.0], [4267.0, 540.0], [4606.0, 521.0], [4855.0, 522.0], [4910.0, 503.5], [5076.0, 555.0], [5083.0, 589.0], [5270.0, 567.0], [5352.0, 555.0], [5403.0, 512.0], [5510.0, 545.0], [5672.0, 531.0], [5943.0, 507.0], [6133.0, 503.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 7170.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 21.0, "minX": 1160.0, "maxY": 434.0, "series": [{"data": [[1160.0, 41.0], [1699.0, 70.0], [1869.0, 100.0], [2032.0, 236.0], [2070.0, 133.0], [2076.0, 157.0], [2100.0, 187.0], [2134.0, 276.0], [2167.0, 304.0], [2189.0, 21.0], [2320.0, 318.0], [2617.0, 267.0], [2668.0, 262.0], [2636.0, 255.0], [2603.0, 250.0], [2664.0, 305.0], [2747.0, 217.5], [2704.0, 257.0], [3101.0, 246.0], [3263.0, 226.0], [3404.0, 226.0], [3364.0, 224.0], [3481.0, 218.0], [3544.0, 209.0], [3630.0, 199.0], [3677.0, 210.0], [3663.0, 206.0], [3912.0, 199.0], [4267.0, 181.0], [4606.0, 174.0], [4693.0, 164.0], [4855.0, 155.0], [5072.0, 147.0], [4910.0, 155.0], [4962.0, 152.0], [5069.0, 149.0], [5070.0, 148.0], [5045.0, 148.0], [5051.0, 148.0], [5076.0, 148.0], [5083.0, 148.0], [5084.0, 147.0], [5107.0, 147.0], [5028.0, 150.0], [5270.0, 148.0], [5128.0, 147.0], [5227.0, 144.0], [5298.0, 142.0], [5360.0, 140.0], [5352.0, 140.0], [5336.0, 140.0], [5395.0, 139.0], [5446.0, 139.0], [5429.0, 137.0], [5441.0, 137.0], [5403.0, 139.0], [5427.0, 138.0], [5432.0, 137.0], [5510.0, 136.0], [5624.0, 133.0], [5609.0, 133.0], [5464.0, 138.0], [5484.0, 136.0], [5445.0, 138.0], [5672.0, 133.0], [5686.0, 132.0], [5650.0, 133.0], [5725.0, 131.0], [5735.0, 127.0], [5656.0, 132.0], [5685.0, 133.0], [5767.0, 130.0], [5768.0, 130.0], [5815.0, 128.0], [5846.0, 130.0], [5838.0, 128.0], [5863.0, 126.0], [5879.0, 127.0], [5674.0, 131.0], [5943.0, 127.0], [5896.0, 127.0], [5888.0, 128.0], [5947.0, 126.0], [6095.0, 123.0], [5910.0, 127.0], [6133.0, 124.0], [5908.0, 127.0], [6026.0, 123.0], [6075.0, 123.0], [6136.0, 122.0], [6111.0, 122.0], [6117.0, 122.0], [6120.0, 120.0], [6162.0, 120.0], [6263.0, 124.0], [6144.0, 123.0], [6237.0, 120.0], [6238.0, 121.0], [6191.0, 119.0], [6337.0, 117.0], [6371.0, 119.0], [6274.0, 120.0], [6373.0, 117.0], [6342.0, 118.0], [6360.0, 117.0], [6356.0, 118.0], [6346.0, 118.0], [6347.0, 118.0], [6609.0, 113.0], [6482.0, 119.0], [6413.0, 118.0], [6566.0, 115.0], [6595.0, 115.0], [6630.0, 113.0], [6466.0, 112.0], [6612.0, 112.0], [6618.0, 113.0], [6849.0, 109.5], [6813.0, 107.0], [6822.0, 108.0], [6658.0, 113.0], [6721.0, 112.0], [6732.0, 112.0], [6748.0, 55.0], [6688.0, 112.0], [6786.0, 111.0], [6802.0, 110.0], [6809.0, 111.0], [6810.0, 110.0], [6785.0, 110.0], [6784.0, 110.0], [6888.0, 104.0], [6883.0, 90.0], [6878.0, 75.0], [6898.0, 98.0], [6928.0, 109.0], [6927.0, 108.0], [6964.0, 103.0], [7170.0, 108.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1699.0, 434.0], [1869.0, 238.0], [2032.0, 241.0], [2070.0, 154.0], [2076.0, 223.0], [2100.0, 284.0], [2134.0, 266.0], [2167.0, 296.0], [2320.0, 316.0], [2617.0, 294.0], [2668.0, 274.0], [2636.0, 305.0], [2603.0, 324.0], [2664.0, 279.0], [2747.0, 292.0], [2704.0, 272.0], [3101.0, 262.0], [3263.0, 260.5], [3404.0, 311.0], [3364.0, 226.0], [3481.0, 231.0], [3544.0, 297.0], [3630.0, 225.0], [3677.0, 276.0], [3663.0, 217.0], [3912.0, 218.0], [4267.0, 219.0], [4606.0, 185.5], [4855.0, 191.5], [4910.0, 247.5], [5076.0, 255.0], [5083.0, 296.0], [5270.0, 168.0], [5352.0, 281.0], [5403.0, 230.0], [5510.0, 276.5], [5672.0, 401.0], [5943.0, 124.0], [6133.0, 371.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 7170.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 477.76666666666665, "minX": 1.64810802E12, "maxY": 6422.466666666666, "series": [{"data": [[1.64810808E12, 4990.4], [1.64810814E12, 6422.466666666666], [1.64810802E12, 609.3666666666667], [1.6481082E12, 477.76666666666665]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6481082E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 161.73333333333332, "minX": 1.64810802E12, "maxY": 4282.666666666667, "series": [{"data": [[1.64810808E12, 3326.7], [1.64810814E12, 4282.666666666667], [1.64810802E12, 392.43333333333334], [1.6481082E12, 331.53333333333336]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.64810808E12, 1663.7], [1.64810814E12, 2140.9666666666667], [1.64810802E12, 200.26666666666668], [1.6481082E12, 161.73333333333332]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6481082E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.64810802E12, "maxY": 2141.3333333333335, "series": [{"data": [[1.64810808E12, 1608.2333333333333], [1.64810814E12, 2141.3], [1.64810802E12, 98.13333333333334], [1.6481082E12, 165.76666666666668]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.64810808E12, 55.11666666666667], [1.64810814E12, 0.03333333333333333], [1.64810802E12, 98.08333333333333]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.64810808E12, 1663.7], [1.64810814E12, 2140.9666666666667], [1.64810802E12, 200.26666666666668], [1.6481082E12, 161.73333333333332]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.64810808E12, 1663.35], [1.64810814E12, 2141.3333333333335], [1.64810802E12, 196.21666666666667], [1.6481082E12, 165.76666666666668]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6481082E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.64810802E12, "maxY": 6423.6, "series": [{"data": [[1.64810808E12, 4935.283333333334], [1.64810814E12, 6423.6], [1.64810802E12, 494.6166666666667], [1.6481082E12, 493.26666666666665]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.64810808E12, 55.11666666666667], [1.64810814E12, 0.03333333333333333], [1.64810802E12, 98.08333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6481082E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

