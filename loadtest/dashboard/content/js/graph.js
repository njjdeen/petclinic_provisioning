/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 2269.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 4.0], [8.6, 4.0], [8.7, 4.0], [8.8, 4.0], [8.9, 4.0], [9.0, 4.0], [9.1, 4.0], [9.2, 4.0], [9.3, 4.0], [9.4, 4.0], [9.5, 4.0], [9.6, 4.0], [9.7, 4.0], [9.8, 5.0], [9.9, 5.0], [10.0, 5.0], [10.1, 5.0], [10.2, 5.0], [10.3, 5.0], [10.4, 5.0], [10.5, 5.0], [10.6, 5.0], [10.7, 5.0], [10.8, 5.0], [10.9, 6.0], [11.0, 6.0], [11.1, 6.0], [11.2, 6.0], [11.3, 6.0], [11.4, 6.0], [11.5, 6.0], [11.6, 6.0], [11.7, 6.0], [11.8, 7.0], [11.9, 7.0], [12.0, 7.0], [12.1, 7.0], [12.2, 7.0], [12.3, 7.0], [12.4, 7.0], [12.5, 7.0], [12.6, 7.0], [12.7, 8.0], [12.8, 8.0], [12.9, 8.0], [13.0, 8.0], [13.1, 8.0], [13.2, 8.0], [13.3, 8.0], [13.4, 8.0], [13.5, 9.0], [13.6, 9.0], [13.7, 9.0], [13.8, 9.0], [13.9, 9.0], [14.0, 9.0], [14.1, 9.0], [14.2, 10.0], [14.3, 10.0], [14.4, 10.0], [14.5, 10.0], [14.6, 10.0], [14.7, 10.0], [14.8, 11.0], [14.9, 11.0], [15.0, 11.0], [15.1, 11.0], [15.2, 11.0], [15.3, 12.0], [15.4, 12.0], [15.5, 12.0], [15.6, 12.0], [15.7, 12.0], [15.8, 13.0], [15.9, 13.0], [16.0, 13.0], [16.1, 13.0], [16.2, 13.0], [16.3, 14.0], [16.4, 14.0], [16.5, 14.0], [16.6, 14.0], [16.7, 14.0], [16.8, 14.0], [16.9, 15.0], [17.0, 15.0], [17.1, 15.0], [17.2, 15.0], [17.3, 15.0], [17.4, 16.0], [17.5, 16.0], [17.6, 16.0], [17.7, 16.0], [17.8, 16.0], [17.9, 17.0], [18.0, 17.0], [18.1, 17.0], [18.2, 17.0], [18.3, 17.0], [18.4, 18.0], [18.5, 18.0], [18.6, 18.0], [18.7, 18.0], [18.8, 18.0], [18.9, 19.0], [19.0, 19.0], [19.1, 19.0], [19.2, 19.0], [19.3, 19.0], [19.4, 20.0], [19.5, 20.0], [19.6, 20.0], [19.7, 20.0], [19.8, 21.0], [19.9, 21.0], [20.0, 21.0], [20.1, 21.0], [20.2, 21.0], [20.3, 22.0], [20.4, 22.0], [20.5, 22.0], [20.6, 22.0], [20.7, 23.0], [20.8, 23.0], [20.9, 23.0], [21.0, 23.0], [21.1, 23.0], [21.2, 24.0], [21.3, 24.0], [21.4, 24.0], [21.5, 24.0], [21.6, 25.0], [21.7, 25.0], [21.8, 25.0], [21.9, 25.0], [22.0, 26.0], [22.1, 26.0], [22.2, 26.0], [22.3, 26.0], [22.4, 27.0], [22.5, 27.0], [22.6, 27.0], [22.7, 27.0], [22.8, 28.0], [22.9, 28.0], [23.0, 28.0], [23.1, 28.0], [23.2, 29.0], [23.3, 29.0], [23.4, 29.0], [23.5, 29.0], [23.6, 30.0], [23.7, 30.0], [23.8, 30.0], [23.9, 30.0], [24.0, 31.0], [24.1, 31.0], [24.2, 31.0], [24.3, 31.0], [24.4, 32.0], [24.5, 32.0], [24.6, 32.0], [24.7, 32.0], [24.8, 33.0], [24.9, 33.0], [25.0, 33.0], [25.1, 33.0], [25.2, 34.0], [25.3, 34.0], [25.4, 34.0], [25.5, 35.0], [25.6, 35.0], [25.7, 35.0], [25.8, 35.0], [25.9, 36.0], [26.0, 36.0], [26.1, 36.0], [26.2, 36.0], [26.3, 37.0], [26.4, 37.0], [26.5, 37.0], [26.6, 37.0], [26.7, 38.0], [26.8, 38.0], [26.9, 38.0], [27.0, 39.0], [27.1, 39.0], [27.2, 39.0], [27.3, 39.0], [27.4, 39.0], [27.5, 40.0], [27.6, 40.0], [27.7, 40.0], [27.8, 40.0], [27.9, 41.0], [28.0, 41.0], [28.1, 41.0], [28.2, 41.0], [28.3, 42.0], [28.4, 42.0], [28.5, 42.0], [28.6, 42.0], [28.7, 43.0], [28.8, 43.0], [28.9, 43.0], [29.0, 43.0], [29.1, 44.0], [29.2, 44.0], [29.3, 44.0], [29.4, 44.0], [29.5, 45.0], [29.6, 45.0], [29.7, 45.0], [29.8, 46.0], [29.9, 46.0], [30.0, 46.0], [30.1, 46.0], [30.2, 47.0], [30.3, 47.0], [30.4, 47.0], [30.5, 47.0], [30.6, 48.0], [30.7, 48.0], [30.8, 48.0], [30.9, 48.0], [31.0, 49.0], [31.1, 49.0], [31.2, 49.0], [31.3, 49.0], [31.4, 50.0], [31.5, 50.0], [31.6, 50.0], [31.7, 50.0], [31.8, 51.0], [31.9, 51.0], [32.0, 51.0], [32.1, 51.0], [32.2, 52.0], [32.3, 52.0], [32.4, 52.0], [32.5, 52.0], [32.6, 53.0], [32.7, 53.0], [32.8, 53.0], [32.9, 53.0], [33.0, 54.0], [33.1, 54.0], [33.2, 54.0], [33.3, 54.0], [33.4, 55.0], [33.5, 55.0], [33.6, 55.0], [33.7, 55.0], [33.8, 55.0], [33.9, 56.0], [34.0, 56.0], [34.1, 56.0], [34.2, 56.0], [34.3, 57.0], [34.4, 57.0], [34.5, 57.0], [34.6, 57.0], [34.7, 58.0], [34.8, 58.0], [34.9, 58.0], [35.0, 58.0], [35.1, 58.0], [35.2, 59.0], [35.3, 59.0], [35.4, 59.0], [35.5, 59.0], [35.6, 60.0], [35.7, 60.0], [35.8, 60.0], [35.9, 60.0], [36.0, 61.0], [36.1, 61.0], [36.2, 61.0], [36.3, 61.0], [36.4, 62.0], [36.5, 62.0], [36.6, 62.0], [36.7, 62.0], [36.8, 62.0], [36.9, 63.0], [37.0, 63.0], [37.1, 63.0], [37.2, 63.0], [37.3, 64.0], [37.4, 64.0], [37.5, 64.0], [37.6, 64.0], [37.7, 64.0], [37.8, 65.0], [37.9, 65.0], [38.0, 65.0], [38.1, 65.0], [38.2, 65.0], [38.3, 66.0], [38.4, 66.0], [38.5, 66.0], [38.6, 66.0], [38.7, 66.0], [38.8, 67.0], [38.9, 67.0], [39.0, 67.0], [39.1, 67.0], [39.2, 68.0], [39.3, 68.0], [39.4, 68.0], [39.5, 68.0], [39.6, 68.0], [39.7, 69.0], [39.8, 69.0], [39.9, 69.0], [40.0, 69.0], [40.1, 69.0], [40.2, 70.0], [40.3, 70.0], [40.4, 70.0], [40.5, 70.0], [40.6, 70.0], [40.7, 71.0], [40.8, 71.0], [40.9, 71.0], [41.0, 71.0], [41.1, 71.0], [41.2, 71.0], [41.3, 72.0], [41.4, 72.0], [41.5, 72.0], [41.6, 72.0], [41.7, 72.0], [41.8, 72.0], [41.9, 73.0], [42.0, 73.0], [42.1, 73.0], [42.2, 73.0], [42.3, 73.0], [42.4, 73.0], [42.5, 74.0], [42.6, 74.0], [42.7, 74.0], [42.8, 74.0], [42.9, 74.0], [43.0, 74.0], [43.1, 75.0], [43.2, 75.0], [43.3, 75.0], [43.4, 75.0], [43.5, 75.0], [43.6, 75.0], [43.7, 76.0], [43.8, 76.0], [43.9, 76.0], [44.0, 76.0], [44.1, 76.0], [44.2, 76.0], [44.3, 77.0], [44.4, 77.0], [44.5, 77.0], [44.6, 77.0], [44.7, 77.0], [44.8, 77.0], [44.9, 78.0], [45.0, 78.0], [45.1, 78.0], [45.2, 78.0], [45.3, 78.0], [45.4, 78.0], [45.5, 79.0], [45.6, 79.0], [45.7, 79.0], [45.8, 79.0], [45.9, 79.0], [46.0, 79.0], [46.1, 79.0], [46.2, 80.0], [46.3, 80.0], [46.4, 80.0], [46.5, 80.0], [46.6, 80.0], [46.7, 80.0], [46.8, 80.0], [46.9, 81.0], [47.0, 81.0], [47.1, 81.0], [47.2, 81.0], [47.3, 81.0], [47.4, 81.0], [47.5, 81.0], [47.6, 82.0], [47.7, 82.0], [47.8, 82.0], [47.9, 82.0], [48.0, 82.0], [48.1, 82.0], [48.2, 82.0], [48.3, 82.0], [48.4, 83.0], [48.5, 83.0], [48.6, 83.0], [48.7, 83.0], [48.8, 83.0], [48.9, 83.0], [49.0, 83.0], [49.1, 83.0], [49.2, 84.0], [49.3, 84.0], [49.4, 84.0], [49.5, 84.0], [49.6, 84.0], [49.7, 84.0], [49.8, 84.0], [49.9, 84.0], [50.0, 85.0], [50.1, 85.0], [50.2, 85.0], [50.3, 85.0], [50.4, 85.0], [50.5, 85.0], [50.6, 85.0], [50.7, 85.0], [50.8, 85.0], [50.9, 86.0], [51.0, 86.0], [51.1, 86.0], [51.2, 86.0], [51.3, 86.0], [51.4, 86.0], [51.5, 86.0], [51.6, 86.0], [51.7, 86.0], [51.8, 87.0], [51.9, 87.0], [52.0, 87.0], [52.1, 87.0], [52.2, 87.0], [52.3, 87.0], [52.4, 87.0], [52.5, 87.0], [52.6, 87.0], [52.7, 88.0], [52.8, 88.0], [52.9, 88.0], [53.0, 88.0], [53.1, 88.0], [53.2, 88.0], [53.3, 88.0], [53.4, 88.0], [53.5, 88.0], [53.6, 88.0], [53.7, 89.0], [53.8, 89.0], [53.9, 89.0], [54.0, 89.0], [54.1, 89.0], [54.2, 89.0], [54.3, 89.0], [54.4, 89.0], [54.5, 89.0], [54.6, 89.0], [54.7, 90.0], [54.8, 90.0], [54.9, 90.0], [55.0, 90.0], [55.1, 90.0], [55.2, 90.0], [55.3, 90.0], [55.4, 90.0], [55.5, 90.0], [55.6, 90.0], [55.7, 91.0], [55.8, 91.0], [55.9, 91.0], [56.0, 91.0], [56.1, 91.0], [56.2, 91.0], [56.3, 91.0], [56.4, 91.0], [56.5, 91.0], [56.6, 92.0], [56.7, 92.0], [56.8, 92.0], [56.9, 92.0], [57.0, 92.0], [57.1, 92.0], [57.2, 92.0], [57.3, 92.0], [57.4, 92.0], [57.5, 92.0], [57.6, 93.0], [57.7, 93.0], [57.8, 93.0], [57.9, 93.0], [58.0, 93.0], [58.1, 93.0], [58.2, 93.0], [58.3, 93.0], [58.4, 93.0], [58.5, 93.0], [58.6, 94.0], [58.7, 94.0], [58.8, 94.0], [58.9, 94.0], [59.0, 94.0], [59.1, 94.0], [59.2, 94.0], [59.3, 94.0], [59.4, 94.0], [59.5, 94.0], [59.6, 95.0], [59.7, 95.0], [59.8, 95.0], [59.9, 95.0], [60.0, 95.0], [60.1, 95.0], [60.2, 95.0], [60.3, 95.0], [60.4, 95.0], [60.5, 95.0], [60.6, 96.0], [60.7, 96.0], [60.8, 96.0], [60.9, 96.0], [61.0, 96.0], [61.1, 96.0], [61.2, 96.0], [61.3, 96.0], [61.4, 96.0], [61.5, 96.0], [61.6, 96.0], [61.7, 97.0], [61.8, 97.0], [61.9, 97.0], [62.0, 97.0], [62.1, 97.0], [62.2, 97.0], [62.3, 97.0], [62.4, 97.0], [62.5, 97.0], [62.6, 98.0], [62.7, 98.0], [62.8, 98.0], [62.9, 98.0], [63.0, 98.0], [63.1, 98.0], [63.2, 98.0], [63.3, 98.0], [63.4, 98.0], [63.5, 98.0], [63.6, 99.0], [63.7, 99.0], [63.8, 99.0], [63.9, 99.0], [64.0, 99.0], [64.1, 99.0], [64.2, 99.0], [64.3, 99.0], [64.4, 99.0], [64.5, 99.0], [64.6, 100.0], [64.7, 100.0], [64.8, 100.0], [64.9, 100.0], [65.0, 100.0], [65.1, 100.0], [65.2, 100.0], [65.3, 100.0], [65.4, 100.0], [65.5, 100.0], [65.6, 101.0], [65.7, 101.0], [65.8, 101.0], [65.9, 101.0], [66.0, 101.0], [66.1, 101.0], [66.2, 101.0], [66.3, 101.0], [66.4, 101.0], [66.5, 101.0], [66.6, 102.0], [66.7, 102.0], [66.8, 102.0], [66.9, 102.0], [67.0, 102.0], [67.1, 102.0], [67.2, 102.0], [67.3, 102.0], [67.4, 102.0], [67.5, 102.0], [67.6, 103.0], [67.7, 103.0], [67.8, 103.0], [67.9, 103.0], [68.0, 103.0], [68.1, 103.0], [68.2, 103.0], [68.3, 103.0], [68.4, 103.0], [68.5, 104.0], [68.6, 104.0], [68.7, 104.0], [68.8, 104.0], [68.9, 104.0], [69.0, 104.0], [69.1, 104.0], [69.2, 104.0], [69.3, 104.0], [69.4, 104.0], [69.5, 105.0], [69.6, 105.0], [69.7, 105.0], [69.8, 105.0], [69.9, 105.0], [70.0, 105.0], [70.1, 105.0], [70.2, 105.0], [70.3, 105.0], [70.4, 105.0], [70.5, 106.0], [70.6, 106.0], [70.7, 106.0], [70.8, 106.0], [70.9, 106.0], [71.0, 106.0], [71.1, 106.0], [71.2, 106.0], [71.3, 107.0], [71.4, 107.0], [71.5, 107.0], [71.6, 107.0], [71.7, 107.0], [71.8, 107.0], [71.9, 107.0], [72.0, 107.0], [72.1, 107.0], [72.2, 108.0], [72.3, 108.0], [72.4, 108.0], [72.5, 108.0], [72.6, 108.0], [72.7, 108.0], [72.8, 108.0], [72.9, 109.0], [73.0, 109.0], [73.1, 109.0], [73.2, 109.0], [73.3, 109.0], [73.4, 109.0], [73.5, 109.0], [73.6, 109.0], [73.7, 110.0], [73.8, 110.0], [73.9, 110.0], [74.0, 110.0], [74.1, 110.0], [74.2, 110.0], [74.3, 110.0], [74.4, 110.0], [74.5, 111.0], [74.6, 111.0], [74.7, 111.0], [74.8, 111.0], [74.9, 111.0], [75.0, 111.0], [75.1, 111.0], [75.2, 112.0], [75.3, 112.0], [75.4, 112.0], [75.5, 112.0], [75.6, 112.0], [75.7, 112.0], [75.8, 112.0], [75.9, 112.0], [76.0, 113.0], [76.1, 113.0], [76.2, 113.0], [76.3, 113.0], [76.4, 113.0], [76.5, 113.0], [76.6, 113.0], [76.7, 114.0], [76.8, 114.0], [76.9, 114.0], [77.0, 114.0], [77.1, 114.0], [77.2, 114.0], [77.3, 114.0], [77.4, 115.0], [77.5, 115.0], [77.6, 115.0], [77.7, 115.0], [77.8, 115.0], [77.9, 115.0], [78.0, 115.0], [78.1, 116.0], [78.2, 116.0], [78.3, 116.0], [78.4, 116.0], [78.5, 116.0], [78.6, 116.0], [78.7, 116.0], [78.8, 117.0], [78.9, 117.0], [79.0, 117.0], [79.1, 117.0], [79.2, 117.0], [79.3, 117.0], [79.4, 118.0], [79.5, 118.0], [79.6, 118.0], [79.7, 118.0], [79.8, 118.0], [79.9, 118.0], [80.0, 118.0], [80.1, 119.0], [80.2, 119.0], [80.3, 119.0], [80.4, 119.0], [80.5, 119.0], [80.6, 119.0], [80.7, 120.0], [80.8, 120.0], [80.9, 120.0], [81.0, 120.0], [81.1, 120.0], [81.2, 121.0], [81.3, 121.0], [81.4, 121.0], [81.5, 121.0], [81.6, 121.0], [81.7, 121.0], [81.8, 122.0], [81.9, 122.0], [82.0, 122.0], [82.1, 122.0], [82.2, 122.0], [82.3, 123.0], [82.4, 123.0], [82.5, 123.0], [82.6, 123.0], [82.7, 124.0], [82.8, 124.0], [82.9, 124.0], [83.0, 124.0], [83.1, 124.0], [83.2, 125.0], [83.3, 125.0], [83.4, 125.0], [83.5, 125.0], [83.6, 126.0], [83.7, 126.0], [83.8, 126.0], [83.9, 126.0], [84.0, 127.0], [84.1, 127.0], [84.2, 127.0], [84.3, 128.0], [84.4, 128.0], [84.5, 128.0], [84.6, 128.0], [84.7, 129.0], [84.8, 129.0], [84.9, 129.0], [85.0, 130.0], [85.1, 130.0], [85.2, 130.0], [85.3, 131.0], [85.4, 131.0], [85.5, 131.0], [85.6, 132.0], [85.7, 132.0], [85.8, 132.0], [85.9, 133.0], [86.0, 133.0], [86.1, 133.0], [86.2, 133.0], [86.3, 134.0], [86.4, 134.0], [86.5, 135.0], [86.6, 135.0], [86.7, 135.0], [86.8, 136.0], [86.9, 136.0], [87.0, 136.0], [87.1, 137.0], [87.2, 137.0], [87.3, 137.0], [87.4, 138.0], [87.5, 138.0], [87.6, 139.0], [87.7, 139.0], [87.8, 139.0], [87.9, 140.0], [88.0, 140.0], [88.1, 141.0], [88.2, 141.0], [88.3, 142.0], [88.4, 142.0], [88.5, 142.0], [88.6, 143.0], [88.7, 143.0], [88.8, 144.0], [88.9, 144.0], [89.0, 145.0], [89.1, 145.0], [89.2, 146.0], [89.3, 146.0], [89.4, 147.0], [89.5, 147.0], [89.6, 148.0], [89.7, 148.0], [89.8, 149.0], [89.9, 150.0], [90.0, 150.0], [90.1, 151.0], [90.2, 151.0], [90.3, 152.0], [90.4, 153.0], [90.5, 153.0], [90.6, 154.0], [90.7, 155.0], [90.8, 155.0], [90.9, 156.0], [91.0, 157.0], [91.1, 158.0], [91.2, 158.0], [91.3, 159.0], [91.4, 160.0], [91.5, 161.0], [91.6, 161.0], [91.7, 162.0], [91.8, 163.0], [91.9, 164.0], [92.0, 165.0], [92.1, 166.0], [92.2, 166.0], [92.3, 167.0], [92.4, 168.0], [92.5, 169.0], [92.6, 170.0], [92.7, 171.0], [92.8, 172.0], [92.9, 173.0], [93.0, 173.0], [93.1, 175.0], [93.2, 176.0], [93.3, 176.0], [93.4, 178.0], [93.5, 179.0], [93.6, 180.0], [93.7, 181.0], [93.8, 182.0], [93.9, 183.0], [94.0, 184.0], [94.1, 186.0], [94.2, 187.0], [94.3, 188.0], [94.4, 189.0], [94.5, 190.0], [94.6, 192.0], [94.7, 193.0], [94.8, 195.0], [94.9, 196.0], [95.0, 198.0], [95.1, 199.0], [95.2, 201.0], [95.3, 203.0], [95.4, 205.0], [95.5, 207.0], [95.6, 209.0], [95.7, 211.0], [95.8, 213.0], [95.9, 215.0], [96.0, 218.0], [96.1, 220.0], [96.2, 223.0], [96.3, 226.0], [96.4, 229.0], [96.5, 232.0], [96.6, 235.0], [96.7, 239.0], [96.8, 242.0], [96.9, 245.0], [97.0, 248.0], [97.1, 251.0], [97.2, 255.0], [97.3, 258.0], [97.4, 262.0], [97.5, 266.0], [97.6, 270.0], [97.7, 275.0], [97.8, 279.0], [97.9, 284.0], [98.0, 289.0], [98.1, 294.0], [98.2, 300.0], [98.3, 305.0], [98.4, 312.0], [98.5, 320.0], [98.6, 327.0], [98.7, 335.0], [98.8, 343.0], [98.9, 355.0], [99.0, 364.0], [99.1, 372.0], [99.2, 386.0], [99.3, 399.0], [99.4, 415.0], [99.5, 437.0], [99.6, 458.0], [99.7, 507.0], [99.8, 577.0], [99.9, 740.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 4.0], [7.5, 4.0], [7.6, 4.0], [7.7, 4.0], [7.8, 4.0], [7.9, 4.0], [8.0, 4.0], [8.1, 4.0], [8.2, 4.0], [8.3, 4.0], [8.4, 4.0], [8.5, 4.0], [8.6, 5.0], [8.7, 5.0], [8.8, 5.0], [8.9, 5.0], [9.0, 5.0], [9.1, 5.0], [9.2, 5.0], [9.3, 5.0], [9.4, 5.0], [9.5, 5.0], [9.6, 5.0], [9.7, 6.0], [9.8, 6.0], [9.9, 6.0], [10.0, 6.0], [10.1, 6.0], [10.2, 6.0], [10.3, 6.0], [10.4, 6.0], [10.5, 6.0], [10.6, 6.0], [10.7, 7.0], [10.8, 7.0], [10.9, 7.0], [11.0, 7.0], [11.1, 7.0], [11.2, 7.0], [11.3, 7.0], [11.4, 7.0], [11.5, 7.0], [11.6, 8.0], [11.7, 8.0], [11.8, 8.0], [11.9, 8.0], [12.0, 8.0], [12.1, 8.0], [12.2, 8.0], [12.3, 8.0], [12.4, 8.0], [12.5, 9.0], [12.6, 9.0], [12.7, 9.0], [12.8, 9.0], [12.9, 9.0], [13.0, 9.0], [13.1, 9.0], [13.2, 9.0], [13.3, 10.0], [13.4, 10.0], [13.5, 10.0], [13.6, 10.0], [13.7, 10.0], [13.8, 10.0], [13.9, 10.0], [14.0, 11.0], [14.1, 11.0], [14.2, 11.0], [14.3, 11.0], [14.4, 11.0], [14.5, 11.0], [14.6, 11.0], [14.7, 11.0], [14.8, 12.0], [14.9, 12.0], [15.0, 12.0], [15.1, 12.0], [15.2, 12.0], [15.3, 12.0], [15.4, 12.0], [15.5, 12.0], [15.6, 13.0], [15.7, 13.0], [15.8, 13.0], [15.9, 13.0], [16.0, 13.0], [16.1, 13.0], [16.2, 13.0], [16.3, 14.0], [16.4, 14.0], [16.5, 14.0], [16.6, 14.0], [16.7, 14.0], [16.8, 14.0], [16.9, 14.0], [17.0, 15.0], [17.1, 15.0], [17.2, 15.0], [17.3, 15.0], [17.4, 15.0], [17.5, 15.0], [17.6, 15.0], [17.7, 16.0], [17.8, 16.0], [17.9, 16.0], [18.0, 16.0], [18.1, 16.0], [18.2, 16.0], [18.3, 17.0], [18.4, 17.0], [18.5, 17.0], [18.6, 17.0], [18.7, 17.0], [18.8, 17.0], [18.9, 17.0], [19.0, 18.0], [19.1, 18.0], [19.2, 18.0], [19.3, 18.0], [19.4, 18.0], [19.5, 18.0], [19.6, 19.0], [19.7, 19.0], [19.8, 19.0], [19.9, 19.0], [20.0, 19.0], [20.1, 19.0], [20.2, 20.0], [20.3, 20.0], [20.4, 20.0], [20.5, 20.0], [20.6, 20.0], [20.7, 20.0], [20.8, 21.0], [20.9, 21.0], [21.0, 21.0], [21.1, 21.0], [21.2, 21.0], [21.3, 22.0], [21.4, 22.0], [21.5, 22.0], [21.6, 22.0], [21.7, 22.0], [21.8, 23.0], [21.9, 23.0], [22.0, 23.0], [22.1, 23.0], [22.2, 23.0], [22.3, 23.0], [22.4, 24.0], [22.5, 24.0], [22.6, 24.0], [22.7, 24.0], [22.8, 24.0], [22.9, 25.0], [23.0, 25.0], [23.1, 25.0], [23.2, 25.0], [23.3, 25.0], [23.4, 26.0], [23.5, 26.0], [23.6, 26.0], [23.7, 26.0], [23.8, 26.0], [23.9, 27.0], [24.0, 27.0], [24.1, 27.0], [24.2, 27.0], [24.3, 27.0], [24.4, 28.0], [24.5, 28.0], [24.6, 28.0], [24.7, 28.0], [24.8, 28.0], [24.9, 29.0], [25.0, 29.0], [25.1, 29.0], [25.2, 29.0], [25.3, 30.0], [25.4, 30.0], [25.5, 30.0], [25.6, 30.0], [25.7, 30.0], [25.8, 31.0], [25.9, 31.0], [26.0, 31.0], [26.1, 31.0], [26.2, 32.0], [26.3, 32.0], [26.4, 32.0], [26.5, 32.0], [26.6, 33.0], [26.7, 33.0], [26.8, 33.0], [26.9, 33.0], [27.0, 33.0], [27.1, 34.0], [27.2, 34.0], [27.3, 34.0], [27.4, 34.0], [27.5, 35.0], [27.6, 35.0], [27.7, 35.0], [27.8, 35.0], [27.9, 36.0], [28.0, 36.0], [28.1, 36.0], [28.2, 36.0], [28.3, 37.0], [28.4, 37.0], [28.5, 37.0], [28.6, 38.0], [28.7, 38.0], [28.8, 38.0], [28.9, 38.0], [29.0, 38.0], [29.1, 39.0], [29.2, 39.0], [29.3, 39.0], [29.4, 39.0], [29.5, 40.0], [29.6, 40.0], [29.7, 40.0], [29.8, 40.0], [29.9, 41.0], [30.0, 41.0], [30.1, 41.0], [30.2, 41.0], [30.3, 42.0], [30.4, 42.0], [30.5, 42.0], [30.6, 42.0], [30.7, 43.0], [30.8, 43.0], [30.9, 43.0], [31.0, 44.0], [31.1, 44.0], [31.2, 44.0], [31.3, 44.0], [31.4, 45.0], [31.5, 45.0], [31.6, 45.0], [31.7, 45.0], [31.8, 46.0], [31.9, 46.0], [32.0, 46.0], [32.1, 46.0], [32.2, 47.0], [32.3, 47.0], [32.4, 47.0], [32.5, 48.0], [32.6, 48.0], [32.7, 48.0], [32.8, 48.0], [32.9, 49.0], [33.0, 49.0], [33.1, 49.0], [33.2, 50.0], [33.3, 50.0], [33.4, 50.0], [33.5, 50.0], [33.6, 51.0], [33.7, 51.0], [33.8, 51.0], [33.9, 51.0], [34.0, 52.0], [34.1, 52.0], [34.2, 52.0], [34.3, 53.0], [34.4, 53.0], [34.5, 53.0], [34.6, 53.0], [34.7, 54.0], [34.8, 54.0], [34.9, 54.0], [35.0, 55.0], [35.1, 55.0], [35.2, 55.0], [35.3, 55.0], [35.4, 56.0], [35.5, 56.0], [35.6, 56.0], [35.7, 56.0], [35.8, 57.0], [35.9, 57.0], [36.0, 57.0], [36.1, 57.0], [36.2, 58.0], [36.3, 58.0], [36.4, 58.0], [36.5, 59.0], [36.6, 59.0], [36.7, 59.0], [36.8, 59.0], [36.9, 60.0], [37.0, 60.0], [37.1, 60.0], [37.2, 60.0], [37.3, 61.0], [37.4, 61.0], [37.5, 61.0], [37.6, 62.0], [37.7, 62.0], [37.8, 62.0], [37.9, 62.0], [38.0, 63.0], [38.1, 63.0], [38.2, 63.0], [38.3, 63.0], [38.4, 64.0], [38.5, 64.0], [38.6, 64.0], [38.7, 65.0], [38.8, 65.0], [38.9, 65.0], [39.0, 65.0], [39.1, 66.0], [39.2, 66.0], [39.3, 66.0], [39.4, 66.0], [39.5, 67.0], [39.6, 67.0], [39.7, 67.0], [39.8, 67.0], [39.9, 68.0], [40.0, 68.0], [40.1, 68.0], [40.2, 68.0], [40.3, 69.0], [40.4, 69.0], [40.5, 69.0], [40.6, 69.0], [40.7, 70.0], [40.8, 70.0], [40.9, 70.0], [41.0, 70.0], [41.1, 71.0], [41.2, 71.0], [41.3, 71.0], [41.4, 71.0], [41.5, 71.0], [41.6, 72.0], [41.7, 72.0], [41.8, 72.0], [41.9, 72.0], [42.0, 73.0], [42.1, 73.0], [42.2, 73.0], [42.3, 73.0], [42.4, 73.0], [42.5, 74.0], [42.6, 74.0], [42.7, 74.0], [42.8, 74.0], [42.9, 74.0], [43.0, 74.0], [43.1, 75.0], [43.2, 75.0], [43.3, 75.0], [43.4, 75.0], [43.5, 75.0], [43.6, 76.0], [43.7, 76.0], [43.8, 76.0], [43.9, 76.0], [44.0, 76.0], [44.1, 76.0], [44.2, 77.0], [44.3, 77.0], [44.4, 77.0], [44.5, 77.0], [44.6, 77.0], [44.7, 78.0], [44.8, 78.0], [44.9, 78.0], [45.0, 78.0], [45.1, 78.0], [45.2, 79.0], [45.3, 79.0], [45.4, 79.0], [45.5, 79.0], [45.6, 79.0], [45.7, 79.0], [45.8, 80.0], [45.9, 80.0], [46.0, 80.0], [46.1, 80.0], [46.2, 80.0], [46.3, 80.0], [46.4, 80.0], [46.5, 81.0], [46.6, 81.0], [46.7, 81.0], [46.8, 81.0], [46.9, 81.0], [47.0, 81.0], [47.1, 81.0], [47.2, 82.0], [47.3, 82.0], [47.4, 82.0], [47.5, 82.0], [47.6, 82.0], [47.7, 82.0], [47.8, 82.0], [47.9, 83.0], [48.0, 83.0], [48.1, 83.0], [48.2, 83.0], [48.3, 83.0], [48.4, 83.0], [48.5, 83.0], [48.6, 84.0], [48.7, 84.0], [48.8, 84.0], [48.9, 84.0], [49.0, 84.0], [49.1, 84.0], [49.2, 84.0], [49.3, 84.0], [49.4, 85.0], [49.5, 85.0], [49.6, 85.0], [49.7, 85.0], [49.8, 85.0], [49.9, 85.0], [50.0, 85.0], [50.1, 85.0], [50.2, 86.0], [50.3, 86.0], [50.4, 86.0], [50.5, 86.0], [50.6, 86.0], [50.7, 86.0], [50.8, 86.0], [50.9, 86.0], [51.0, 86.0], [51.1, 87.0], [51.2, 87.0], [51.3, 87.0], [51.4, 87.0], [51.5, 87.0], [51.6, 87.0], [51.7, 87.0], [51.8, 87.0], [51.9, 88.0], [52.0, 88.0], [52.1, 88.0], [52.2, 88.0], [52.3, 88.0], [52.4, 88.0], [52.5, 88.0], [52.6, 88.0], [52.7, 88.0], [52.8, 88.0], [52.9, 89.0], [53.0, 89.0], [53.1, 89.0], [53.2, 89.0], [53.3, 89.0], [53.4, 89.0], [53.5, 89.0], [53.6, 89.0], [53.7, 89.0], [53.8, 89.0], [53.9, 90.0], [54.0, 90.0], [54.1, 90.0], [54.2, 90.0], [54.3, 90.0], [54.4, 90.0], [54.5, 90.0], [54.6, 90.0], [54.7, 90.0], [54.8, 90.0], [54.9, 91.0], [55.0, 91.0], [55.1, 91.0], [55.2, 91.0], [55.3, 91.0], [55.4, 91.0], [55.5, 91.0], [55.6, 91.0], [55.7, 91.0], [55.8, 91.0], [55.9, 92.0], [56.0, 92.0], [56.1, 92.0], [56.2, 92.0], [56.3, 92.0], [56.4, 92.0], [56.5, 92.0], [56.6, 92.0], [56.7, 92.0], [56.8, 92.0], [56.9, 93.0], [57.0, 93.0], [57.1, 93.0], [57.2, 93.0], [57.3, 93.0], [57.4, 93.0], [57.5, 93.0], [57.6, 93.0], [57.7, 93.0], [57.8, 94.0], [57.9, 94.0], [58.0, 94.0], [58.1, 94.0], [58.2, 94.0], [58.3, 94.0], [58.4, 94.0], [58.5, 94.0], [58.6, 94.0], [58.7, 94.0], [58.8, 95.0], [58.9, 95.0], [59.0, 95.0], [59.1, 95.0], [59.2, 95.0], [59.3, 95.0], [59.4, 95.0], [59.5, 95.0], [59.6, 95.0], [59.7, 95.0], [59.8, 96.0], [59.9, 96.0], [60.0, 96.0], [60.1, 96.0], [60.2, 96.0], [60.3, 96.0], [60.4, 96.0], [60.5, 96.0], [60.6, 96.0], [60.7, 96.0], [60.8, 96.0], [60.9, 97.0], [61.0, 97.0], [61.1, 97.0], [61.2, 97.0], [61.3, 97.0], [61.4, 97.0], [61.5, 97.0], [61.6, 97.0], [61.7, 97.0], [61.8, 97.0], [61.9, 98.0], [62.0, 98.0], [62.1, 98.0], [62.2, 98.0], [62.3, 98.0], [62.4, 98.0], [62.5, 98.0], [62.6, 98.0], [62.7, 98.0], [62.8, 98.0], [62.9, 98.0], [63.0, 99.0], [63.1, 99.0], [63.2, 99.0], [63.3, 99.0], [63.4, 99.0], [63.5, 99.0], [63.6, 99.0], [63.7, 99.0], [63.8, 99.0], [63.9, 99.0], [64.0, 100.0], [64.1, 100.0], [64.2, 100.0], [64.3, 100.0], [64.4, 100.0], [64.5, 100.0], [64.6, 100.0], [64.7, 100.0], [64.8, 100.0], [64.9, 100.0], [65.0, 101.0], [65.1, 101.0], [65.2, 101.0], [65.3, 101.0], [65.4, 101.0], [65.5, 101.0], [65.6, 101.0], [65.7, 101.0], [65.8, 101.0], [65.9, 101.0], [66.0, 102.0], [66.1, 102.0], [66.2, 102.0], [66.3, 102.0], [66.4, 102.0], [66.5, 102.0], [66.6, 102.0], [66.7, 102.0], [66.8, 102.0], [66.9, 102.0], [67.0, 103.0], [67.1, 103.0], [67.2, 103.0], [67.3, 103.0], [67.4, 103.0], [67.5, 103.0], [67.6, 103.0], [67.7, 103.0], [67.8, 103.0], [67.9, 103.0], [68.0, 104.0], [68.1, 104.0], [68.2, 104.0], [68.3, 104.0], [68.4, 104.0], [68.5, 104.0], [68.6, 104.0], [68.7, 104.0], [68.8, 104.0], [68.9, 104.0], [69.0, 105.0], [69.1, 105.0], [69.2, 105.0], [69.3, 105.0], [69.4, 105.0], [69.5, 105.0], [69.6, 105.0], [69.7, 105.0], [69.8, 105.0], [69.9, 106.0], [70.0, 106.0], [70.1, 106.0], [70.2, 106.0], [70.3, 106.0], [70.4, 106.0], [70.5, 106.0], [70.6, 106.0], [70.7, 106.0], [70.8, 107.0], [70.9, 107.0], [71.0, 107.0], [71.1, 107.0], [71.2, 107.0], [71.3, 107.0], [71.4, 107.0], [71.5, 107.0], [71.6, 107.0], [71.7, 108.0], [71.8, 108.0], [71.9, 108.0], [72.0, 108.0], [72.1, 108.0], [72.2, 108.0], [72.3, 108.0], [72.4, 108.0], [72.5, 109.0], [72.6, 109.0], [72.7, 109.0], [72.8, 109.0], [72.9, 109.0], [73.0, 109.0], [73.1, 109.0], [73.2, 109.0], [73.3, 110.0], [73.4, 110.0], [73.5, 110.0], [73.6, 110.0], [73.7, 110.0], [73.8, 110.0], [73.9, 110.0], [74.0, 110.0], [74.1, 111.0], [74.2, 111.0], [74.3, 111.0], [74.4, 111.0], [74.5, 111.0], [74.6, 111.0], [74.7, 111.0], [74.8, 112.0], [74.9, 112.0], [75.0, 112.0], [75.1, 112.0], [75.2, 112.0], [75.3, 112.0], [75.4, 112.0], [75.5, 112.0], [75.6, 113.0], [75.7, 113.0], [75.8, 113.0], [75.9, 113.0], [76.0, 113.0], [76.1, 113.0], [76.2, 113.0], [76.3, 113.0], [76.4, 114.0], [76.5, 114.0], [76.6, 114.0], [76.7, 114.0], [76.8, 114.0], [76.9, 114.0], [77.0, 114.0], [77.1, 114.0], [77.2, 115.0], [77.3, 115.0], [77.4, 115.0], [77.5, 115.0], [77.6, 115.0], [77.7, 115.0], [77.8, 115.0], [77.9, 116.0], [78.0, 116.0], [78.1, 116.0], [78.2, 116.0], [78.3, 116.0], [78.4, 116.0], [78.5, 116.0], [78.6, 117.0], [78.7, 117.0], [78.8, 117.0], [78.9, 117.0], [79.0, 117.0], [79.1, 117.0], [79.2, 117.0], [79.3, 118.0], [79.4, 118.0], [79.5, 118.0], [79.6, 118.0], [79.7, 118.0], [79.8, 118.0], [79.9, 118.0], [80.0, 119.0], [80.1, 119.0], [80.2, 119.0], [80.3, 119.0], [80.4, 119.0], [80.5, 119.0], [80.6, 120.0], [80.7, 120.0], [80.8, 120.0], [80.9, 120.0], [81.0, 120.0], [81.1, 120.0], [81.2, 121.0], [81.3, 121.0], [81.4, 121.0], [81.5, 121.0], [81.6, 121.0], [81.7, 122.0], [81.8, 122.0], [81.9, 122.0], [82.0, 122.0], [82.1, 122.0], [82.2, 122.0], [82.3, 123.0], [82.4, 123.0], [82.5, 123.0], [82.6, 123.0], [82.7, 124.0], [82.8, 124.0], [82.9, 124.0], [83.0, 124.0], [83.1, 124.0], [83.2, 125.0], [83.3, 125.0], [83.4, 125.0], [83.5, 125.0], [83.6, 126.0], [83.7, 126.0], [83.8, 126.0], [83.9, 126.0], [84.0, 127.0], [84.1, 127.0], [84.2, 127.0], [84.3, 127.0], [84.4, 128.0], [84.5, 128.0], [84.6, 128.0], [84.7, 129.0], [84.8, 129.0], [84.9, 129.0], [85.0, 129.0], [85.1, 130.0], [85.2, 130.0], [85.3, 130.0], [85.4, 131.0], [85.5, 131.0], [85.6, 131.0], [85.7, 132.0], [85.8, 132.0], [85.9, 132.0], [86.0, 133.0], [86.1, 133.0], [86.2, 133.0], [86.3, 133.0], [86.4, 134.0], [86.5, 134.0], [86.6, 134.0], [86.7, 135.0], [86.8, 135.0], [86.9, 135.0], [87.0, 136.0], [87.1, 136.0], [87.2, 136.0], [87.3, 137.0], [87.4, 137.0], [87.5, 137.0], [87.6, 138.0], [87.7, 138.0], [87.8, 139.0], [87.9, 139.0], [88.0, 139.0], [88.1, 140.0], [88.2, 140.0], [88.3, 141.0], [88.4, 141.0], [88.5, 141.0], [88.6, 142.0], [88.7, 142.0], [88.8, 143.0], [88.9, 143.0], [89.0, 143.0], [89.1, 144.0], [89.2, 144.0], [89.3, 145.0], [89.4, 145.0], [89.5, 146.0], [89.6, 146.0], [89.7, 147.0], [89.8, 147.0], [89.9, 148.0], [90.0, 148.0], [90.1, 149.0], [90.2, 149.0], [90.3, 150.0], [90.4, 150.0], [90.5, 151.0], [90.6, 152.0], [90.7, 152.0], [90.8, 153.0], [90.9, 154.0], [91.0, 154.0], [91.1, 155.0], [91.2, 156.0], [91.3, 156.0], [91.4, 157.0], [91.5, 158.0], [91.6, 158.0], [91.7, 159.0], [91.8, 160.0], [91.9, 161.0], [92.0, 161.0], [92.1, 162.0], [92.2, 163.0], [92.3, 164.0], [92.4, 165.0], [92.5, 165.0], [92.6, 166.0], [92.7, 167.0], [92.8, 168.0], [92.9, 169.0], [93.0, 170.0], [93.1, 171.0], [93.2, 171.0], [93.3, 172.0], [93.4, 173.0], [93.5, 174.0], [93.6, 175.0], [93.7, 176.0], [93.8, 178.0], [93.9, 179.0], [94.0, 180.0], [94.1, 181.0], [94.2, 183.0], [94.3, 184.0], [94.4, 186.0], [94.5, 187.0], [94.6, 188.0], [94.7, 190.0], [94.8, 191.0], [94.9, 192.0], [95.0, 194.0], [95.1, 196.0], [95.2, 197.0], [95.3, 199.0], [95.4, 201.0], [95.5, 203.0], [95.6, 206.0], [95.7, 208.0], [95.8, 210.0], [95.9, 212.0], [96.0, 215.0], [96.1, 217.0], [96.2, 220.0], [96.3, 223.0], [96.4, 227.0], [96.5, 230.0], [96.6, 233.0], [96.7, 236.0], [96.8, 239.0], [96.9, 243.0], [97.0, 246.0], [97.1, 249.0], [97.2, 252.0], [97.3, 256.0], [97.4, 259.0], [97.5, 263.0], [97.6, 267.0], [97.7, 271.0], [97.8, 276.0], [97.9, 280.0], [98.0, 286.0], [98.1, 291.0], [98.2, 298.0], [98.3, 305.0], [98.4, 311.0], [98.5, 319.0], [98.6, 326.0], [98.7, 334.0], [98.8, 343.0], [98.9, 353.0], [99.0, 361.0], [99.1, 369.0], [99.2, 379.0], [99.3, 392.0], [99.4, 407.0], [99.5, 430.0], [99.6, 451.0], [99.7, 497.0], [99.8, 589.0], [99.9, 773.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 3.0], [2.5, 3.0], [2.6, 3.0], [2.7, 3.0], [2.8, 3.0], [2.9, 3.0], [3.0, 3.0], [3.1, 3.0], [3.2, 3.0], [3.3, 4.0], [3.4, 4.0], [3.5, 4.0], [3.6, 4.0], [3.7, 4.0], [3.8, 4.0], [3.9, 4.0], [4.0, 5.0], [4.1, 5.0], [4.2, 5.0], [4.3, 5.0], [4.4, 5.0], [4.5, 5.0], [4.6, 6.0], [4.7, 6.0], [4.8, 6.0], [4.9, 6.0], [5.0, 6.0], [5.1, 6.0], [5.2, 7.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 8.0], [5.8, 8.0], [5.9, 8.0], [6.0, 8.0], [6.1, 9.0], [6.2, 9.0], [6.3, 9.0], [6.4, 9.0], [6.5, 10.0], [6.6, 10.0], [6.7, 10.0], [6.8, 10.0], [6.9, 11.0], [7.0, 11.0], [7.1, 11.0], [7.2, 11.0], [7.3, 12.0], [7.4, 12.0], [7.5, 12.0], [7.6, 13.0], [7.7, 13.0], [7.8, 13.0], [7.9, 13.0], [8.0, 14.0], [8.1, 14.0], [8.2, 14.0], [8.3, 15.0], [8.4, 15.0], [8.5, 15.0], [8.6, 15.0], [8.7, 16.0], [8.8, 16.0], [8.9, 16.0], [9.0, 16.0], [9.1, 17.0], [9.2, 17.0], [9.3, 17.0], [9.4, 17.0], [9.5, 18.0], [9.6, 18.0], [9.7, 18.0], [9.8, 19.0], [9.9, 19.0], [10.0, 19.0], [10.1, 20.0], [10.2, 20.0], [10.3, 20.0], [10.4, 21.0], [10.5, 21.0], [10.6, 21.0], [10.7, 22.0], [10.8, 22.0], [10.9, 22.0], [11.0, 23.0], [11.1, 23.0], [11.2, 24.0], [11.3, 24.0], [11.4, 25.0], [11.5, 25.0], [11.6, 25.0], [11.7, 26.0], [11.8, 26.0], [11.9, 27.0], [12.0, 27.0], [12.1, 27.0], [12.2, 28.0], [12.3, 28.0], [12.4, 29.0], [12.5, 29.0], [12.6, 29.0], [12.7, 30.0], [12.8, 30.0], [12.9, 31.0], [13.0, 31.0], [13.1, 31.0], [13.2, 32.0], [13.3, 32.0], [13.4, 33.0], [13.5, 33.0], [13.6, 34.0], [13.7, 34.0], [13.8, 34.0], [13.9, 35.0], [14.0, 35.0], [14.1, 36.0], [14.2, 36.0], [14.3, 37.0], [14.4, 37.0], [14.5, 38.0], [14.6, 38.0], [14.7, 39.0], [14.8, 39.0], [14.9, 40.0], [15.0, 40.0], [15.1, 41.0], [15.2, 41.0], [15.3, 42.0], [15.4, 43.0], [15.5, 43.0], [15.6, 44.0], [15.7, 44.0], [15.8, 45.0], [15.9, 45.0], [16.0, 46.0], [16.1, 47.0], [16.2, 47.0], [16.3, 48.0], [16.4, 48.0], [16.5, 49.0], [16.6, 50.0], [16.7, 50.0], [16.8, 51.0], [16.9, 51.0], [17.0, 52.0], [17.1, 53.0], [17.2, 53.0], [17.3, 54.0], [17.4, 54.0], [17.5, 55.0], [17.6, 56.0], [17.7, 56.0], [17.8, 57.0], [17.9, 57.0], [18.0, 58.0], [18.1, 59.0], [18.2, 59.0], [18.3, 60.0], [18.4, 61.0], [18.5, 61.0], [18.6, 62.0], [18.7, 63.0], [18.8, 63.0], [18.9, 64.0], [19.0, 65.0], [19.1, 65.0], [19.2, 66.0], [19.3, 66.0], [19.4, 67.0], [19.5, 68.0], [19.6, 68.0], [19.7, 69.0], [19.8, 70.0], [19.9, 71.0], [20.0, 71.0], [20.1, 72.0], [20.2, 72.0], [20.3, 73.0], [20.4, 74.0], [20.5, 74.0], [20.6, 75.0], [20.7, 76.0], [20.8, 77.0], [20.9, 77.0], [21.0, 78.0], [21.1, 79.0], [21.2, 79.0], [21.3, 80.0], [21.4, 81.0], [21.5, 81.0], [21.6, 82.0], [21.7, 83.0], [21.8, 83.0], [21.9, 84.0], [22.0, 84.0], [22.1, 85.0], [22.2, 86.0], [22.3, 86.0], [22.4, 87.0], [22.5, 87.0], [22.6, 88.0], [22.7, 88.0], [22.8, 89.0], [22.9, 90.0], [23.0, 90.0], [23.1, 91.0], [23.2, 91.0], [23.3, 92.0], [23.4, 92.0], [23.5, 93.0], [23.6, 94.0], [23.7, 94.0], [23.8, 95.0], [23.9, 95.0], [24.0, 96.0], [24.1, 96.0], [24.2, 97.0], [24.3, 97.0], [24.4, 97.0], [24.5, 98.0], [24.6, 98.0], [24.7, 99.0], [24.8, 99.0], [24.9, 100.0], [25.0, 100.0], [25.1, 101.0], [25.2, 101.0], [25.3, 102.0], [25.4, 102.0], [25.5, 103.0], [25.6, 103.0], [25.7, 103.0], [25.8, 104.0], [25.9, 104.0], [26.0, 105.0], [26.1, 105.0], [26.2, 105.0], [26.3, 106.0], [26.4, 106.0], [26.5, 107.0], [26.6, 107.0], [26.7, 107.0], [26.8, 108.0], [26.9, 108.0], [27.0, 109.0], [27.1, 109.0], [27.2, 109.0], [27.3, 110.0], [27.4, 110.0], [27.5, 110.0], [27.6, 111.0], [27.7, 111.0], [27.8, 112.0], [27.9, 112.0], [28.0, 112.0], [28.1, 113.0], [28.2, 113.0], [28.3, 114.0], [28.4, 114.0], [28.5, 114.0], [28.6, 115.0], [28.7, 115.0], [28.8, 115.0], [28.9, 116.0], [29.0, 116.0], [29.1, 116.0], [29.2, 117.0], [29.3, 117.0], [29.4, 118.0], [29.5, 118.0], [29.6, 118.0], [29.7, 119.0], [29.8, 119.0], [29.9, 119.0], [30.0, 120.0], [30.1, 120.0], [30.2, 120.0], [30.3, 121.0], [30.4, 121.0], [30.5, 121.0], [30.6, 122.0], [30.7, 122.0], [30.8, 122.0], [30.9, 123.0], [31.0, 123.0], [31.1, 123.0], [31.2, 124.0], [31.3, 124.0], [31.4, 125.0], [31.5, 125.0], [31.6, 125.0], [31.7, 126.0], [31.8, 126.0], [31.9, 126.0], [32.0, 127.0], [32.1, 127.0], [32.2, 127.0], [32.3, 128.0], [32.4, 128.0], [32.5, 128.0], [32.6, 129.0], [32.7, 129.0], [32.8, 129.0], [32.9, 130.0], [33.0, 130.0], [33.1, 130.0], [33.2, 131.0], [33.3, 131.0], [33.4, 131.0], [33.5, 132.0], [33.6, 132.0], [33.7, 132.0], [33.8, 133.0], [33.9, 133.0], [34.0, 133.0], [34.1, 134.0], [34.2, 134.0], [34.3, 134.0], [34.4, 135.0], [34.5, 135.0], [34.6, 135.0], [34.7, 136.0], [34.8, 136.0], [34.9, 136.0], [35.0, 137.0], [35.1, 137.0], [35.2, 137.0], [35.3, 137.0], [35.4, 138.0], [35.5, 138.0], [35.6, 138.0], [35.7, 139.0], [35.8, 139.0], [35.9, 139.0], [36.0, 140.0], [36.1, 140.0], [36.2, 140.0], [36.3, 141.0], [36.4, 141.0], [36.5, 141.0], [36.6, 142.0], [36.7, 142.0], [36.8, 142.0], [36.9, 142.0], [37.0, 143.0], [37.1, 143.0], [37.2, 143.0], [37.3, 144.0], [37.4, 144.0], [37.5, 144.0], [37.6, 145.0], [37.7, 145.0], [37.8, 145.0], [37.9, 146.0], [38.0, 146.0], [38.1, 146.0], [38.2, 147.0], [38.3, 147.0], [38.4, 147.0], [38.5, 148.0], [38.6, 148.0], [38.7, 148.0], [38.8, 149.0], [38.9, 149.0], [39.0, 149.0], [39.1, 149.0], [39.2, 150.0], [39.3, 150.0], [39.4, 150.0], [39.5, 151.0], [39.6, 151.0], [39.7, 151.0], [39.8, 151.0], [39.9, 152.0], [40.0, 152.0], [40.1, 152.0], [40.2, 152.0], [40.3, 153.0], [40.4, 153.0], [40.5, 153.0], [40.6, 154.0], [40.7, 154.0], [40.8, 154.0], [40.9, 155.0], [41.0, 155.0], [41.1, 155.0], [41.2, 155.0], [41.3, 156.0], [41.4, 156.0], [41.5, 156.0], [41.6, 157.0], [41.7, 157.0], [41.8, 157.0], [41.9, 157.0], [42.0, 158.0], [42.1, 158.0], [42.2, 158.0], [42.3, 158.0], [42.4, 159.0], [42.5, 159.0], [42.6, 159.0], [42.7, 160.0], [42.8, 160.0], [42.9, 160.0], [43.0, 160.0], [43.1, 161.0], [43.2, 161.0], [43.3, 161.0], [43.4, 161.0], [43.5, 162.0], [43.6, 162.0], [43.7, 162.0], [43.8, 162.0], [43.9, 163.0], [44.0, 163.0], [44.1, 163.0], [44.2, 163.0], [44.3, 164.0], [44.4, 164.0], [44.5, 164.0], [44.6, 164.0], [44.7, 165.0], [44.8, 165.0], [44.9, 165.0], [45.0, 165.0], [45.1, 166.0], [45.2, 166.0], [45.3, 166.0], [45.4, 166.0], [45.5, 167.0], [45.6, 167.0], [45.7, 167.0], [45.8, 167.0], [45.9, 168.0], [46.0, 168.0], [46.1, 168.0], [46.2, 168.0], [46.3, 168.0], [46.4, 169.0], [46.5, 169.0], [46.6, 169.0], [46.7, 169.0], [46.8, 170.0], [46.9, 170.0], [47.0, 170.0], [47.1, 170.0], [47.2, 171.0], [47.3, 171.0], [47.4, 171.0], [47.5, 171.0], [47.6, 171.0], [47.7, 172.0], [47.8, 172.0], [47.9, 172.0], [48.0, 172.0], [48.1, 173.0], [48.2, 173.0], [48.3, 173.0], [48.4, 173.0], [48.5, 174.0], [48.6, 174.0], [48.7, 174.0], [48.8, 174.0], [48.9, 174.0], [49.0, 175.0], [49.1, 175.0], [49.2, 175.0], [49.3, 175.0], [49.4, 176.0], [49.5, 176.0], [49.6, 176.0], [49.7, 176.0], [49.8, 177.0], [49.9, 177.0], [50.0, 177.0], [50.1, 177.0], [50.2, 177.0], [50.3, 178.0], [50.4, 178.0], [50.5, 178.0], [50.6, 178.0], [50.7, 179.0], [50.8, 179.0], [50.9, 179.0], [51.0, 179.0], [51.1, 179.0], [51.2, 180.0], [51.3, 180.0], [51.4, 180.0], [51.5, 180.0], [51.6, 180.0], [51.7, 181.0], [51.8, 181.0], [51.9, 181.0], [52.0, 181.0], [52.1, 182.0], [52.2, 182.0], [52.3, 182.0], [52.4, 182.0], [52.5, 182.0], [52.6, 183.0], [52.7, 183.0], [52.8, 183.0], [52.9, 183.0], [53.0, 183.0], [53.1, 183.0], [53.2, 184.0], [53.3, 184.0], [53.4, 184.0], [53.5, 184.0], [53.6, 184.0], [53.7, 184.0], [53.8, 185.0], [53.9, 185.0], [54.0, 185.0], [54.1, 185.0], [54.2, 185.0], [54.3, 185.0], [54.4, 186.0], [54.5, 186.0], [54.6, 186.0], [54.7, 186.0], [54.8, 186.0], [54.9, 187.0], [55.0, 187.0], [55.1, 187.0], [55.2, 187.0], [55.3, 187.0], [55.4, 187.0], [55.5, 188.0], [55.6, 188.0], [55.7, 188.0], [55.8, 188.0], [55.9, 188.0], [56.0, 188.0], [56.1, 189.0], [56.2, 189.0], [56.3, 189.0], [56.4, 189.0], [56.5, 189.0], [56.6, 190.0], [56.7, 190.0], [56.8, 190.0], [56.9, 190.0], [57.0, 190.0], [57.1, 190.0], [57.2, 191.0], [57.3, 191.0], [57.4, 191.0], [57.5, 191.0], [57.6, 191.0], [57.7, 191.0], [57.8, 192.0], [57.9, 192.0], [58.0, 192.0], [58.1, 192.0], [58.2, 192.0], [58.3, 192.0], [58.4, 193.0], [58.5, 193.0], [58.6, 193.0], [58.7, 193.0], [58.8, 193.0], [58.9, 193.0], [59.0, 194.0], [59.1, 194.0], [59.2, 194.0], [59.3, 194.0], [59.4, 194.0], [59.5, 195.0], [59.6, 195.0], [59.7, 195.0], [59.8, 195.0], [59.9, 195.0], [60.0, 195.0], [60.1, 196.0], [60.2, 196.0], [60.3, 196.0], [60.4, 196.0], [60.5, 196.0], [60.6, 197.0], [60.7, 197.0], [60.8, 197.0], [60.9, 197.0], [61.0, 197.0], [61.1, 198.0], [61.2, 198.0], [61.3, 198.0], [61.4, 198.0], [61.5, 198.0], [61.6, 199.0], [61.7, 199.0], [61.8, 199.0], [61.9, 199.0], [62.0, 199.0], [62.1, 199.0], [62.2, 200.0], [62.3, 200.0], [62.4, 200.0], [62.5, 200.0], [62.6, 200.0], [62.7, 201.0], [62.8, 201.0], [62.9, 201.0], [63.0, 201.0], [63.1, 201.0], [63.2, 202.0], [63.3, 202.0], [63.4, 202.0], [63.5, 202.0], [63.6, 202.0], [63.7, 203.0], [63.8, 203.0], [63.9, 203.0], [64.0, 203.0], [64.1, 203.0], [64.2, 204.0], [64.3, 204.0], [64.4, 204.0], [64.5, 204.0], [64.6, 204.0], [64.7, 205.0], [64.8, 205.0], [64.9, 205.0], [65.0, 205.0], [65.1, 205.0], [65.2, 206.0], [65.3, 206.0], [65.4, 206.0], [65.5, 206.0], [65.6, 206.0], [65.7, 207.0], [65.8, 207.0], [65.9, 207.0], [66.0, 207.0], [66.1, 207.0], [66.2, 207.0], [66.3, 208.0], [66.4, 208.0], [66.5, 208.0], [66.6, 208.0], [66.7, 208.0], [66.8, 209.0], [66.9, 209.0], [67.0, 209.0], [67.1, 209.0], [67.2, 209.0], [67.3, 209.0], [67.4, 210.0], [67.5, 210.0], [67.6, 210.0], [67.7, 210.0], [67.8, 210.0], [67.9, 211.0], [68.0, 211.0], [68.1, 211.0], [68.2, 211.0], [68.3, 211.0], [68.4, 211.0], [68.5, 212.0], [68.6, 212.0], [68.7, 212.0], [68.8, 212.0], [68.9, 212.0], [69.0, 213.0], [69.1, 213.0], [69.2, 213.0], [69.3, 213.0], [69.4, 213.0], [69.5, 213.0], [69.6, 214.0], [69.7, 214.0], [69.8, 214.0], [69.9, 214.0], [70.0, 214.0], [70.1, 215.0], [70.2, 215.0], [70.3, 215.0], [70.4, 215.0], [70.5, 215.0], [70.6, 215.0], [70.7, 215.0], [70.8, 216.0], [70.9, 216.0], [71.0, 216.0], [71.1, 216.0], [71.2, 216.0], [71.3, 217.0], [71.4, 217.0], [71.5, 217.0], [71.6, 217.0], [71.7, 217.0], [71.8, 218.0], [71.9, 218.0], [72.0, 218.0], [72.1, 218.0], [72.2, 218.0], [72.3, 219.0], [72.4, 219.0], [72.5, 219.0], [72.6, 219.0], [72.7, 219.0], [72.8, 220.0], [72.9, 220.0], [73.0, 220.0], [73.1, 220.0], [73.2, 220.0], [73.3, 221.0], [73.4, 221.0], [73.5, 221.0], [73.6, 221.0], [73.7, 221.0], [73.8, 222.0], [73.9, 222.0], [74.0, 222.0], [74.1, 222.0], [74.2, 223.0], [74.3, 223.0], [74.4, 223.0], [74.5, 223.0], [74.6, 224.0], [74.7, 224.0], [74.8, 224.0], [74.9, 224.0], [75.0, 224.0], [75.1, 225.0], [75.2, 225.0], [75.3, 225.0], [75.4, 225.0], [75.5, 226.0], [75.6, 226.0], [75.7, 226.0], [75.8, 226.0], [75.9, 226.0], [76.0, 227.0], [76.1, 227.0], [76.2, 227.0], [76.3, 228.0], [76.4, 228.0], [76.5, 228.0], [76.6, 229.0], [76.7, 229.0], [76.8, 229.0], [76.9, 229.0], [77.0, 230.0], [77.1, 230.0], [77.2, 230.0], [77.3, 230.0], [77.4, 231.0], [77.5, 231.0], [77.6, 231.0], [77.7, 232.0], [77.8, 232.0], [77.9, 232.0], [78.0, 232.0], [78.1, 233.0], [78.2, 233.0], [78.3, 233.0], [78.4, 234.0], [78.5, 234.0], [78.6, 234.0], [78.7, 234.0], [78.8, 235.0], [78.9, 235.0], [79.0, 235.0], [79.1, 236.0], [79.2, 236.0], [79.3, 236.0], [79.4, 236.0], [79.5, 237.0], [79.6, 237.0], [79.7, 237.0], [79.8, 237.0], [79.9, 238.0], [80.0, 238.0], [80.1, 238.0], [80.2, 239.0], [80.3, 239.0], [80.4, 239.0], [80.5, 239.0], [80.6, 240.0], [80.7, 240.0], [80.8, 240.0], [80.9, 241.0], [81.0, 241.0], [81.1, 241.0], [81.2, 242.0], [81.3, 242.0], [81.4, 242.0], [81.5, 242.0], [81.6, 243.0], [81.7, 243.0], [81.8, 243.0], [81.9, 244.0], [82.0, 244.0], [82.1, 245.0], [82.2, 245.0], [82.3, 245.0], [82.4, 246.0], [82.5, 246.0], [82.6, 247.0], [82.7, 247.0], [82.8, 247.0], [82.9, 248.0], [83.0, 248.0], [83.1, 249.0], [83.2, 249.0], [83.3, 250.0], [83.4, 250.0], [83.5, 250.0], [83.6, 251.0], [83.7, 251.0], [83.8, 252.0], [83.9, 252.0], [84.0, 253.0], [84.1, 253.0], [84.2, 254.0], [84.3, 254.0], [84.4, 254.0], [84.5, 255.0], [84.6, 255.0], [84.7, 256.0], [84.8, 256.0], [84.9, 257.0], [85.0, 257.0], [85.1, 258.0], [85.2, 258.0], [85.3, 259.0], [85.4, 259.0], [85.5, 260.0], [85.6, 260.0], [85.7, 261.0], [85.8, 261.0], [85.9, 262.0], [86.0, 262.0], [86.1, 263.0], [86.2, 263.0], [86.3, 264.0], [86.4, 264.0], [86.5, 265.0], [86.6, 265.0], [86.7, 266.0], [86.8, 267.0], [86.9, 267.0], [87.0, 268.0], [87.1, 268.0], [87.2, 269.0], [87.3, 269.0], [87.4, 270.0], [87.5, 271.0], [87.6, 272.0], [87.7, 272.0], [87.8, 273.0], [87.9, 273.0], [88.0, 274.0], [88.1, 275.0], [88.2, 276.0], [88.3, 276.0], [88.4, 277.0], [88.5, 278.0], [88.6, 279.0], [88.7, 279.0], [88.8, 280.0], [88.9, 281.0], [89.0, 282.0], [89.1, 283.0], [89.2, 284.0], [89.3, 285.0], [89.4, 286.0], [89.5, 286.0], [89.6, 287.0], [89.7, 288.0], [89.8, 289.0], [89.9, 290.0], [90.0, 291.0], [90.1, 292.0], [90.2, 293.0], [90.3, 294.0], [90.4, 294.0], [90.5, 295.0], [90.6, 296.0], [90.7, 297.0], [90.8, 298.0], [90.9, 300.0], [91.0, 301.0], [91.1, 302.0], [91.2, 303.0], [91.3, 304.0], [91.4, 305.0], [91.5, 306.0], [91.6, 308.0], [91.7, 309.0], [91.8, 310.0], [91.9, 311.0], [92.0, 312.0], [92.1, 313.0], [92.2, 314.0], [92.3, 316.0], [92.4, 317.0], [92.5, 318.0], [92.6, 319.0], [92.7, 320.0], [92.8, 322.0], [92.9, 324.0], [93.0, 325.0], [93.1, 327.0], [93.2, 328.0], [93.3, 330.0], [93.4, 332.0], [93.5, 334.0], [93.6, 335.0], [93.7, 337.0], [93.8, 339.0], [93.9, 341.0], [94.0, 344.0], [94.1, 346.0], [94.2, 348.0], [94.3, 351.0], [94.4, 353.0], [94.5, 355.0], [94.6, 358.0], [94.7, 360.0], [94.8, 363.0], [94.9, 366.0], [95.0, 368.0], [95.1, 371.0], [95.2, 375.0], [95.3, 377.0], [95.4, 380.0], [95.5, 384.0], [95.6, 387.0], [95.7, 389.0], [95.8, 393.0], [95.9, 396.0], [96.0, 399.0], [96.1, 403.0], [96.2, 407.0], [96.3, 411.0], [96.4, 415.0], [96.5, 419.0], [96.6, 423.0], [96.7, 428.0], [96.8, 433.0], [96.9, 438.0], [97.0, 445.0], [97.1, 450.0], [97.2, 456.0], [97.3, 463.0], [97.4, 469.0], [97.5, 475.0], [97.6, 481.0], [97.7, 487.0], [97.8, 494.0], [97.9, 501.0], [98.0, 509.0], [98.1, 519.0], [98.2, 527.0], [98.3, 537.0], [98.4, 550.0], [98.5, 563.0], [98.6, 578.0], [98.7, 594.0], [98.8, 609.0], [98.9, 624.0], [99.0, 644.0], [99.1, 669.0], [99.2, 699.0], [99.3, 736.0], [99.4, 775.0], [99.5, 813.0], [99.6, 860.0], [99.7, 900.0], [99.8, 951.0], [99.9, 1055.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 161427.0, "series": [{"data": [[0.0, 161427.0], [600.0, 162.0], [700.0, 93.0], [200.0, 7717.0], [800.0, 126.0], [900.0, 43.0], [1000.0, 9.0], [1100.0, 1.0], [300.0, 2771.0], [1200.0, 1.0], [1300.0, 2.0], [1400.0, 3.0], [1500.0, 2.0], [100.0, 76352.0], [400.0, 947.0], [1600.0, 2.0], [500.0, 342.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 159764.0], [600.0, 148.0], [700.0, 106.0], [200.0, 7252.0], [800.0, 164.0], [900.0, 43.0], [1000.0, 5.0], [1100.0, 3.0], [300.0, 2825.0], [1200.0, 2.0], [1300.0, 3.0], [1400.0, 4.0], [1500.0, 1.0], [100.0, 78555.0], [400.0, 864.0], [1600.0, 1.0], [500.0, 260.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 62040.0], [2200.0, 1.0], [600.0, 1166.0], [700.0, 672.0], [200.0, 71940.0], [800.0, 574.0], [900.0, 377.0], [1000.0, 182.0], [1100.0, 59.0], [300.0, 12788.0], [1200.0, 53.0], [1300.0, 30.0], [1400.0, 12.0], [1500.0, 11.0], [100.0, 93242.0], [400.0, 4700.0], [1600.0, 9.0], [1900.0, 1.0], [500.0, 2125.0], [2000.0, 18.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 6.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 743215.0, "series": [{"data": [[0.0, 743215.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1514.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 6.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 5265.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 434.2427217787083, "minX": 1.64631462E12, "maxY": 500.0, "series": [{"data": [[1.64631474E12, 468.2656244612655], [1.64631468E12, 500.0], [1.64631462E12, 434.2427217787083]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64631474E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 391.1250000000001, "series": [{"data": [[2.0, 0.6666666666666666], [3.0, 0.375], [4.0, 0.33333333333333337], [5.0, 1.0], [6.0, 2.0], [7.0, 3.170731707317073], [8.0, 8.0], [9.0, 1.25], [10.0, 1.0], [11.0, 2.857142857142857], [12.0, 2.6153846153846154], [13.0, 1.75], [14.0, 2.0], [15.0, 1.8], [16.0, 3.5], [17.0, 2.7704918032786883], [18.0, 4.375], [19.0, 4.250000000000001], [20.0, 4.125000000000001], [21.0, 3.2812499999999996], [22.0, 2.833333333333333], [23.0, 5.3076923076923075], [24.0, 3.6], [25.0, 5.5], [26.0, 4.7], [27.0, 5.052631578947369], [28.0, 7.571428571428571], [29.0, 2.3333333333333335], [30.0, 4.625], [31.0, 4.298507462686567], [33.0, 4.2], [32.0, 2.0], [35.0, 5.481481481481482], [34.0, 5.133333333333335], [36.0, 9.649999999999999], [37.0, 10.769230769230768], [38.0, 5.333333333333334], [39.0, 6.181818181818181], [40.0, 10.53846153846154], [41.0, 26.785714285714285], [42.0, 14.235294117647058], [43.0, 8.363636363636362], [45.0, 46.22222222222222], [44.0, 26.42307692307692], [46.0, 6.690476190476192], [47.0, 18.71428571428571], [48.0, 21.363636363636363], [49.0, 17.09090909090909], [50.0, 9.749999999999996], [51.0, 14.583333333333334], [52.0, 13.333333333333332], [53.0, 9.249999999999998], [54.0, 34.199999999999996], [55.0, 46.81818181818182], [56.0, 41.82608695652175], [57.0, 44.375], [58.0, 57.00000000000001], [59.0, 33.8], [60.0, 31.058823529411764], [61.0, 20.000000000000004], [62.0, 30.428571428571427], [63.0, 23.000000000000007], [64.0, 27.312500000000004], [65.0, 14.678571428571425], [66.0, 14.939999999999994], [67.0, 30.111111111111104], [68.0, 16.111111111111114], [69.0, 27.07692307692308], [70.0, 71.39999999999999], [74.0, 39.6875], [75.0, 50.61904761904762], [73.0, 25.454545454545453], [72.0, 7.894736842105264], [76.0, 23.0], [77.0, 36.14999999999999], [78.0, 31.200000000000003], [79.0, 59.0], [80.0, 18.44], [81.0, 38.125], [83.0, 22.79166666666666], [82.0, 19.962962962962962], [84.0, 31.622641509433954], [85.0, 8.0], [87.0, 27.78787878787879], [86.0, 16.545454545454547], [88.0, 19.166666666666668], [89.0, 28.03225806451614], [90.0, 16.200000000000003], [91.0, 62.533333333333346], [92.0, 39.0625], [93.0, 26.36842105263158], [94.0, 56.38095238095237], [95.0, 25.657142857142865], [96.0, 50.4], [98.0, 31.3661971830986], [99.0, 36.642857142857146], [97.0, 34.26315789473685], [100.0, 26.68421052631579], [101.0, 29.285714285714285], [103.0, 42.400000000000006], [102.0, 14.043478260869563], [104.0, 58.05128205128206], [105.0, 25.249999999999996], [106.0, 16.70833333333333], [107.0, 16.611940298507463], [108.0, 12.0], [109.0, 6.857142857142856], [110.0, 39.833333333333336], [111.0, 16.631578947368425], [112.0, 17.357142857142858], [113.0, 29.03571428571429], [114.0, 46.52173913043479], [115.0, 60.08], [116.0, 54.785714285714285], [117.0, 62.277777777777764], [118.0, 63.44000000000003], [119.0, 28.03252032520325], [120.0, 60.090909090909086], [121.0, 29.430107526881724], [122.0, 39.347826086956516], [123.0, 1.6666666666666667], [125.0, 76.59090909090908], [124.0, 10.58333333333333], [126.0, 27.133333333333333], [127.0, 20.636363636363633], [128.0, 22.155172413793096], [131.0, 22.833333333333325], [130.0, 148.8360655737705], [129.0, 26.222222222222225], [132.0, 14.437499999999996], [133.0, 20.0625], [134.0, 19.1060606060606], [135.0, 16.69090909090909], [136.0, 14.142857142857144], [137.0, 13.133333333333333], [138.0, 22.769230769230766], [139.0, 42.85454545454546], [140.0, 51.61904761904762], [141.0, 62.38888888888889], [142.0, 45.80555555555556], [143.0, 61.99999999999999], [144.0, 24.62962962962963], [145.0, 28.206896551724142], [146.0, 19.138888888888893], [147.0, 69.65217391304347], [148.0, 61.72000000000001], [150.0, 41.809523809523824], [149.0, 51.8974358974359], [151.0, 13.901515151515145], [152.0, 22.172839506172842], [153.0, 24.183673469387752], [154.0, 24.227272727272727], [155.0, 20.125], [156.0, 51.42105263157896], [158.0, 57.13888888888889], [157.0, 20.03225806451613], [159.0, 52.2894736842105], [161.0, 32.74358974358974], [162.0, 36.525], [160.0, 51.04545454545454], [163.0, 16.19444444444444], [164.0, 112.43518518518512], [165.0, 19.215053763440856], [166.0, 34.5], [167.0, 13.133333333333333], [168.0, 35.8857142857143], [169.0, 31.55813953488372], [170.0, 53.833333333333336], [171.0, 16.639999999999997], [172.0, 36.28205128205127], [173.0, 58.78947368421052], [174.0, 60.38596491228071], [175.0, 36.69117647058823], [176.0, 103.55555555555559], [177.0, 37.265306122448976], [179.0, 21.75], [180.0, 17.73684210526316], [181.0, 31.55], [182.0, 38.38461538461539], [183.0, 16.880000000000006], [178.0, 23.16666666666667], [184.0, 15.946428571428578], [185.0, 24.095238095238095], [186.0, 30.03370786516854], [187.0, 10.888888888888891], [188.0, 13.4], [189.0, 28.206896551724135], [190.0, 20.693548387096776], [191.0, 11.623188405797102], [192.0, 7.230769230769232], [193.0, 25.27272727272727], [194.0, 23.266666666666676], [195.0, 34.3134328358209], [196.0, 19.289855072463777], [197.0, 10.799999999999999], [198.0, 31.23684210526316], [199.0, 35.55555555555556], [200.0, 115.07999999999997], [201.0, 59.079999999999984], [202.0, 85.92982456140352], [203.0, 53.87209302325583], [204.0, 64.97826086956523], [205.0, 113.91176470588236], [207.0, 119.6875], [206.0, 163.88461538461542], [208.0, 140.35294117647058], [210.0, 48.32758620689655], [212.0, 107.63636363636357], [213.0, 74.98], [215.0, 61.983050847457626], [214.0, 57.32857142857141], [209.0, 84.6511627906977], [211.0, 46.26470588235295], [216.0, 32.408602150537654], [217.0, 13.320754716981131], [218.0, 8.461538461538463], [219.0, 9.151898734177214], [221.0, 4.675675675675676], [222.0, 12.82051282051282], [220.0, 5.888888888888889], [223.0, 15.783333333333326], [224.0, 31.05194805194804], [225.0, 43.30985915492957], [226.0, 52.85294117647059], [227.0, 12.833333333333336], [231.0, 22.368421052631575], [230.0, 32.34831460674158], [229.0, 80.6111111111111], [228.0, 95.79166666666666], [232.0, 8.733333333333333], [233.0, 5.111111111111111], [234.0, 4.333333333333333], [235.0, 12.333333333333336], [238.0, 72.96969696969695], [239.0, 24.13333333333333], [237.0, 39.10526315789474], [236.0, 33.7142857142857], [240.0, 42.09278350515464], [243.0, 40.49999999999999], [242.0, 31.365853658536572], [244.0, 28.666666666666675], [247.0, 3.8636363636363633], [246.0, 11.333333333333334], [245.0, 35.67857142857143], [241.0, 20.032258064516128], [248.0, 14.718390804597698], [249.0, 2.8461538461538467], [254.0, 79.13559322033896], [250.0, 11.87128712871288], [255.0, 17.266666666666666], [252.0, 22.862068965517253], [251.0, 6.444444444444444], [253.0, 39.24324324324324], [258.0, 33.23529411764706], [256.0, 39.99999999999999], [257.0, 60.21917808219175], [259.0, 34.78378378378378], [268.0, 120.22222222222223], [269.0, 115.73076923076923], [270.0, 106.41509433962267], [271.0, 7.549999999999999], [260.0, 6.23076923076923], [261.0, 5.09090909090909], [262.0, 15.437500000000002], [263.0, 52.80434782608696], [264.0, 21.86764705882353], [265.0, 27.944444444444443], [266.0, 44.8421052631579], [267.0, 100.61728395061726], [273.0, 39.8], [272.0, 48.94230769230769], [274.0, 34.3421052631579], [275.0, 89.24999999999997], [278.0, 40.31818181818184], [279.0, 93.40384615384609], [276.0, 42.38333333333333], [277.0, 29.16216216216216], [280.0, 55.17213114754098], [287.0, 14.457627118644059], [286.0, 20.80000000000001], [284.0, 47.800000000000004], [285.0, 39.19444444444445], [281.0, 66.39090909090913], [282.0, 90.08620689655173], [283.0, 55.324324324324316], [301.0, 139.94444444444446], [288.0, 4.346153846153846], [289.0, 24.62666666666666], [290.0, 12.875000000000002], [294.0, 109.97297297297298], [293.0, 58.89285714285713], [292.0, 16.032258064516128], [295.0, 181.18867924528305], [298.0, 53.96666666666667], [302.0, 116.0588235294118], [299.0, 83.39999999999998], [303.0, 99.66666666666661], [297.0, 28.051282051282058], [296.0, 36.07692307692308], [300.0, 26.908045977011504], [291.0, 43.55], [305.0, 29.262499999999992], [304.0, 115.53424657534246], [306.0, 49.67999999999999], [307.0, 60.875], [308.0, 51.68750000000001], [309.0, 55.42528735632184], [310.0, 75.52631578947368], [313.0, 61.898989898989896], [315.0, 63.681318681318686], [314.0, 61.17525773195876], [319.0, 129.83870967741933], [312.0, 62.0], [317.0, 176.1071428571429], [316.0, 111.9315068493151], [318.0, 165.40277777777771], [311.0, 61.34782608695652], [320.0, 164.25000000000003], [323.0, 65.61904761904762], [332.0, 3.166666666666667], [333.0, 25.745098039215687], [335.0, 96.74193548387098], [334.0, 50.482142857142875], [321.0, 155.61538461538458], [322.0, 126.44047619047623], [324.0, 109.41379310344821], [325.0, 13.954545454545453], [326.0, 8.529411764705884], [327.0, 27.071428571428573], [328.0, 2.3], [329.0, 12.086956521739133], [330.0, 0.6923076923076923], [331.0, 5.318181818181819], [350.0, 24.191011235955063], [337.0, 78.39240506329106], [336.0, 82.66666666666666], [344.0, 112.5223880597015], [345.0, 80.58064516129032], [351.0, 12.711111111111114], [347.0, 107.18181818181817], [346.0, 79.4655172413793], [349.0, 141.66666666666666], [348.0, 164.73214285714292], [338.0, 52.85714285714285], [339.0, 53.60317460317462], [343.0, 94.5], [341.0, 86.17886178861787], [342.0, 73.79591836734693], [340.0, 50.075], [353.0, 191.02564102564105], [352.0, 74.640522875817], [354.0, 97.44755244755251], [355.0, 48.71641791044777], [357.0, 6.578947368421051], [356.0, 15.111111111111114], [358.0, 6.89473684210526], [359.0, 4.846153846153846], [360.0, 7.099999999999997], [367.0, 8.159663865546218], [366.0, 27.793103448275854], [365.0, 7.846153846153847], [364.0, 3.3157894736842106], [361.0, 5.132075471698116], [362.0, 7.827272727272728], [363.0, 2.783783783783784], [369.0, 37.20000000000001], [368.0, 14.454545454545455], [371.0, 124.06909090909085], [370.0, 99.94827586206897], [372.0, 67.01538461538463], [373.0, 73.530303030303], [374.0, 37.45454545454545], [375.0, 60.607142857142854], [376.0, 76.36734693877553], [382.0, 19.043478260869566], [383.0, 3.7230769230769227], [380.0, 15.09677419354839], [381.0, 20.96551724137931], [377.0, 73.96624472573843], [378.0, 35.14084507042255], [379.0, 30.636363636363637], [385.0, 6.35], [384.0, 3.6071428571428568], [386.0, 6.466666666666667], [387.0, 3.571428571428571], [396.0, 45.766666666666715], [397.0, 133.8598130841121], [398.0, 24.543689320388346], [399.0, 4.5], [388.0, 5.000000000000003], [389.0, 7.275862068965518], [390.0, 20.592105263157897], [391.0, 13.72941176470589], [392.0, 35.83333333333333], [393.0, 25.736842105263158], [394.0, 34.2], [395.0, 16.687499999999996], [414.0, 33.2972972972973], [408.0, 13.8], [407.0, 49.728813559322035], [409.0, 91.66779661016963], [410.0, 39.94285714285712], [411.0, 92.8265306122449], [412.0, 38.04081632653061], [413.0, 36.666666666666664], [403.0, 139.7142857142857], [401.0, 103.91443850267379], [402.0, 84.7179487179487], [400.0, 71.54794520547944], [415.0, 31.913793103448295], [406.0, 48.5], [405.0, 75.03225806451613], [404.0, 72.25423728813556], [428.0, 97.83035714285715], [417.0, 57.65], [416.0, 21.285714285714285], [418.0, 84.5], [419.0, 4.625], [421.0, 136.44000000000008], [420.0, 14.428571428571429], [422.0, 53.198324022346384], [423.0, 78.71666666666667], [424.0, 219.58333333333331], [425.0, 96.65402843601895], [426.0, 63.96815286624207], [427.0, 50.03191489361703], [429.0, 235.07692307692307], [430.0, 101.07692307692308], [431.0, 54.82432432432434], [433.0, 25.161904761904747], [432.0, 16.097297297297295], [435.0, 158.77049180327867], [434.0, 115.75471698113199], [437.0, 55.05116279069764], [438.0, 18.603773584905657], [436.0, 93.375], [439.0, 83.91437308868501], [440.0, 70.2463768115942], [444.0, 33.35555555555556], [445.0, 29.60000000000001], [446.0, 53.411764705882355], [447.0, 24.0], [441.0, 33.53278688524592], [443.0, 82.40000000000002], [442.0, 96.82352941176468], [455.0, 117.07807807807808], [451.0, 75.39240506329114], [449.0, 73.21951219512195], [448.0, 62.283924843423826], [450.0, 97.21126760563385], [452.0, 91.18382352941175], [453.0, 47.46153846153846], [454.0, 77.96551724137932], [456.0, 87.65714285714284], [457.0, 82.24], [459.0, 66.2962962962963], [458.0, 137.8988764044944], [461.0, 102.31250000000003], [462.0, 119.49458483754516], [463.0, 92.40776699029118], [460.0, 145.175], [466.0, 69.88], [464.0, 82.4705882352941], [465.0, 39.74193548387097], [467.0, 94.04128440366975], [468.0, 80.41592920353979], [469.0, 36.2], [470.0, 102.98091603053436], [471.0, 107.71875000000001], [475.0, 35.056402439024374], [479.0, 89.13445378151259], [473.0, 79.7142857142857], [472.0, 248.56179775280893], [474.0, 3.9527027027027044], [476.0, 64.50558659217874], [477.0, 96.73626373626374], [478.0, 99.68948655256722], [492.0, 125.32110091743121], [481.0, 121.67567567567568], [480.0, 85.40425531914893], [487.0, 134.91071428571425], [486.0, 90.57437070938217], [482.0, 101.50847457627118], [483.0, 87.25742574257424], [485.0, 93.0660792951542], [484.0, 99.6024096385542], [490.0, 113.71169354838717], [491.0, 168.31481481481487], [495.0, 21.430379746835445], [494.0, 60.27272727272729], [493.0, 14.189873417721524], [488.0, 114.9673202614379], [489.0, 113.04950495049509], [496.0, 172.68211920529797], [497.0, 114.79166666666666], [498.0, 68.84162578836724], [499.0, 92.39627039627032], [500.0, 88.29808485507439], [1.0, 0.3333333333333333]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[479.3978999999996, 85.22866000000073]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 0.16666666666666669], [3.0, 1.7499999999999998], [4.0, 1.0], [5.0, 1.1666666666666665], [6.0, 0.5], [7.0, 2.414634146341464], [8.0, 1.2], [9.0, 0.8333333333333334], [10.0, 1.8], [11.0, 0.4285714285714286], [12.0, 2.615384615384615], [13.0, 0.916666666666667], [14.0, 0.0], [15.0, 1.2], [16.0, 2.1875], [17.0, 2.573770491803278], [18.0, 2.125], [19.0, 3.375], [20.0, 3.6250000000000004], [21.0, 4.0625], [22.0, 3.666666666666667], [23.0, 4.769230769230769], [24.0, 3.4], [25.0, 2.0], [26.0, 6.300000000000002], [27.0, 4.894736842105263], [28.0, 1.5714285714285714], [29.0, 4.666666666666667], [30.0, 3.1875], [31.0, 6.0], [33.0, 7.2], [32.0, 5.5], [35.0, 5.444444444444443], [34.0, 5.0], [36.0, 18.849999999999998], [37.0, 35.692307692307686], [38.0, 5.25], [39.0, 24.36363636363636], [40.0, 26.076923076923073], [41.0, 19.857142857142858], [42.0, 17.176470588235293], [43.0, 19.13636363636364], [45.0, 28.055555555555557], [44.0, 68.84615384615385], [46.0, 13.619047619047622], [47.0, 17.476190476190474], [48.0, 37.27272727272727], [49.0, 16.636363636363637], [50.0, 16.607142857142854], [51.0, 11.25], [52.0, 20.916666666666668], [53.0, 18.333333333333336], [54.0, 33.699999999999996], [55.0, 38.18181818181818], [56.0, 38.7391304347826], [57.0, 31.791666666666675], [58.0, 61.72727272727273], [59.0, 28.4], [60.0, 31.470588235294116], [61.0, 25.040000000000003], [62.0, 36.857142857142854], [63.0, 24.294117647058826], [64.0, 36.37500000000001], [65.0, 9.821428571428571], [66.0, 19.340000000000003], [67.0, 34.05555555555554], [68.0, 20.533333333333328], [69.0, 32.615384615384606], [70.0, 88.4], [74.0, 91.75000000000001], [75.0, 78.76190476190476], [73.0, 24.636363636363637], [72.0, 29.789473684210524], [76.0, 73.47368421052632], [77.0, 69.05000000000001], [78.0, 24.150000000000002], [79.0, 21.272727272727273], [80.0, 15.719999999999999], [81.0, 26.75], [83.0, 39.95833333333334], [82.0, 24.388888888888893], [84.0, 36.71698113207545], [85.0, 23.333333333333336], [87.0, 30.575757575757574], [86.0, 29.27272727272727], [88.0, 9.833333333333334], [89.0, 18.677419354838708], [90.0, 17.200000000000006], [91.0, 18.0], [92.0, 23.187499999999996], [93.0, 21.21052631578947], [94.0, 44.95238095238095], [95.0, 40.94285714285714], [96.0, 66.57142857142857], [98.0, 43.50704225352112], [99.0, 49.92857142857143], [97.0, 58.68421052631579], [100.0, 38.86842105263159], [101.0, 19.928571428571427], [103.0, 40.75], [102.0, 21.304347826086953], [104.0, 46.51282051282051], [105.0, 45.25000000000001], [106.0, 42.62500000000001], [107.0, 31.328358208955233], [108.0, 19.745098039215684], [109.0, 3.714285714285715], [110.0, 16.72222222222222], [111.0, 11.44736842105263], [112.0, 17.571428571428577], [113.0, 11.750000000000002], [114.0, 29.826086956521742], [115.0, 37.84], [116.0, 51.28571428571428], [117.0, 75.66666666666666], [118.0, 43.36], [119.0, 18.439024390243894], [120.0, 58.40909090909093], [121.0, 34.752688172043], [122.0, 57.782608695652165], [123.0, 4.0], [125.0, 69.77272727272728], [124.0, 13.25], [126.0, 34.37777777777778], [127.0, 29.909090909090914], [128.0, 30.19827586206899], [131.0, 49.966666666666654], [130.0, 65.9672131147541], [129.0, 48.34920634920636], [132.0, 30.675000000000004], [133.0, 26.625000000000004], [134.0, 33.18181818181817], [135.0, 29.527272727272724], [136.0, 60.285714285714285], [137.0, 26.933333333333334], [138.0, 18.384615384615383], [139.0, 31.10909090909091], [140.0, 36.57142857142858], [141.0, 20.0], [142.0, 24.361111111111107], [143.0, 41.92307692307693], [144.0, 37.425925925925924], [145.0, 52.310344827586206], [146.0, 36.69444444444444], [147.0, 45.08695652173914], [148.0, 48.83999999999998], [150.0, 50.047619047619044], [149.0, 42.12820512820513], [151.0, 34.67424242424244], [152.0, 37.37037037037039], [153.0, 61.51020408163266], [154.0, 34.4090909090909], [155.0, 39.875], [156.0, 60.78947368421053], [158.0, 60.5], [157.0, 50.62903225806452], [159.0, 44.184210526315795], [161.0, 61.82051282051283], [162.0, 31.475], [160.0, 50.22727272727272], [163.0, 25.388888888888886], [164.0, 30.796296296296294], [165.0, 35.03225806451612], [166.0, 27.0625], [167.0, 16.333333333333336], [168.0, 22.542857142857148], [169.0, 26.790697674418603], [170.0, 28.944444444444446], [171.0, 43.599999999999994], [172.0, 43.923076923076906], [173.0, 34.0], [174.0, 64.50877192982453], [175.0, 58.044117647058826], [176.0, 56.888888888888886], [177.0, 61.06122448979594], [179.0, 28.6875], [180.0, 45.47368421052632], [181.0, 9.7], [182.0, 28.923076923076916], [183.0, 29.02000000000001], [178.0, 10.583333333333334], [184.0, 36.178571428571416], [185.0, 32.19047619047618], [186.0, 50.76404494382023], [187.0, 13.185185185185187], [188.0, 3.0], [189.0, 38.99999999999999], [190.0, 34.645161290322584], [191.0, 23.652173913043487], [192.0, 11.653846153846153], [193.0, 5.2727272727272725], [194.0, 27.77777777777778], [195.0, 31.50746268656716], [196.0, 16.971014492753625], [197.0, 19.95], [198.0, 22.684210526315788], [199.0, 82.0], [200.0, 50.64], [201.0, 20.040000000000003], [202.0, 27.105263157894733], [203.0, 47.29069767441859], [204.0, 43.695652173913054], [205.0, 71.91176470588233], [207.0, 72.62500000000001], [206.0, 86.1153846153846], [208.0, 85.0], [210.0, 155.12068965517238], [212.0, 178.12500000000003], [213.0, 191.32000000000002], [215.0, 35.01694915254238], [214.0, 86.68571428571427], [209.0, 123.32558139534885], [211.0, 151.20588235294116], [216.0, 25.032258064516128], [217.0, 23.150943396226413], [218.0, 40.92307692307692], [219.0, 16.569620253164558], [221.0, 20.945945945945947], [222.0, 14.820512820512821], [220.0, 18.25925925925926], [223.0, 18.283333333333335], [224.0, 29.285714285714285], [225.0, 45.281690140845065], [226.0, 57.205882352941174], [227.0, 26.55128205128205], [231.0, 58.73684210526316], [230.0, 66.2696629213483], [229.0, 26.194444444444443], [228.0, 44.41666666666666], [232.0, 28.766666666666666], [233.0, 21.5], [234.0, 30.444444444444443], [235.0, 31.545454545454547], [238.0, 116.09090909090915], [239.0, 32.44444444444444], [237.0, 16.73684210526316], [236.0, 58.26785714285715], [240.0, 46.42268041237114], [243.0, 56.500000000000014], [242.0, 31.463414634146343], [244.0, 49.949999999999996], [247.0, 15.431818181818183], [246.0, 31.857142857142858], [245.0, 38.42857142857144], [241.0, 33.74193548387098], [248.0, 28.247126436781603], [249.0, 18.28205128205128], [254.0, 77.75423728813557], [250.0, 22.470297029702984], [255.0, 68.73333333333333], [252.0, 37.1609195402299], [251.0, 26.77777777777778], [253.0, 35.270270270270274], [258.0, 11.647058823529411], [256.0, 75.72602739726025], [257.0, 61.15068493150685], [259.0, 18.729729729729733], [268.0, 30.333333333333332], [269.0, 83.15384615384616], [270.0, 115.84905660377356], [271.0, 3.5500000000000007], [260.0, 13.817307692307695], [261.0, 16.21818181818182], [262.0, 22.999999999999982], [263.0, 23.130434782608702], [264.0, 38.92647058823528], [265.0, 30.000000000000004], [266.0, 107.38947368421051], [267.0, 106.98765432098766], [273.0, 34.72999999999999], [272.0, 46.05769230769229], [274.0, 45.6578947368421], [275.0, 32.5], [278.0, 19.772727272727277], [279.0, 99.88461538461543], [276.0, 34.266666666666666], [277.0, 26.02702702702703], [280.0, 110.84426229508192], [287.0, 32.33898305084745], [286.0, 58.47272727272727], [285.0, 81.69444444444444], [284.0, 104.43333333333334], [281.0, 111.39090909090903], [282.0, 104.91379310344828], [283.0, 110.89189189189186], [301.0, 55.16666666666667], [288.0, 10.653846153846155], [289.0, 25.44000000000001], [290.0, 32.833333333333336], [294.0, 37.405405405405396], [293.0, 84.4464285714286], [292.0, 39.645161290322584], [295.0, 62.037735849056624], [298.0, 47.900000000000006], [302.0, 54.98529411764705], [299.0, 76.0], [303.0, 58.4496124031008], [297.0, 26.307692307692307], [296.0, 25.15384615384615], [300.0, 33.20689655172414], [291.0, 54.666666666666664], [305.0, 32.481249999999996], [304.0, 98.75342465753423], [306.0, 79.32], [307.0, 75.87500000000001], [308.0, 55.6875], [309.0, 61.78160919540229], [310.0, 56.631578947368425], [313.0, 65.37373737373737], [315.0, 130.6043956043956], [314.0, 94.07216494845363], [319.0, 53.483870967741936], [312.0, 58.54545454545454], [317.0, 60.3214285714286], [316.0, 107.28767123287673], [318.0, 77.90277777777777], [311.0, 44.521739130434774], [320.0, 35.52083333333334], [323.0, 63.9761904761905], [332.0, 4.266666666666667], [333.0, 15.313725490196072], [335.0, 39.80645161290323], [334.0, 38.92857142857142], [321.0, 44.446153846153855], [322.0, 54.79761904761905], [324.0, 42.241379310344826], [325.0, 21.63636363636364], [326.0, 32.588235294117645], [327.0, 65.35714285714285], [328.0, 8.750000000000002], [329.0, 29.43478260869565], [330.0, 1.0769230769230769], [331.0, 4.727272727272726], [350.0, 31.483146067415735], [337.0, 56.55063291139241], [336.0, 45.533333333333346], [344.0, 219.2089552238806], [345.0, 172.8064516129032], [351.0, 17.93333333333334], [347.0, 178.2727272727273], [346.0, 199.00862068965517], [349.0, 89.13333333333333], [348.0, 131.23214285714283], [338.0, 56.766917293233085], [339.0, 113.30158730158732], [343.0, 272.22222222222234], [341.0, 79.13008130081302], [342.0, 143.32653061224494], [340.0, 89.72500000000001], [353.0, 188.96153846153857], [352.0, 113.26797385620914], [354.0, 98.43356643356643], [355.0, 26.044776119402982], [357.0, 23.684210526315788], [356.0, 43.111111111111114], [358.0, 10.513157894736848], [359.0, 9.192307692307693], [360.0, 13.750000000000004], [367.0, 4.53781512605042], [366.0, 85.86206896551725], [365.0, 143.84615384615384], [364.0, 19.31578947368421], [361.0, 11.905660377358492], [362.0, 26.581818181818193], [363.0, 9.459459459459461], [369.0, 43.362500000000004], [368.0, 6.818181818181819], [371.0, 94.51999999999997], [370.0, 63.534482758620705], [372.0, 56.1846153846154], [373.0, 60.8939393939394], [374.0, 25.09090909090909], [375.0, 37.64285714285714], [376.0, 103.44897959183673], [382.0, 25.652173913043473], [383.0, 14.292307692307691], [380.0, 38.38709677419355], [381.0, 19.620689655172416], [377.0, 82.6371308016878], [378.0, 43.281690140845086], [379.0, 64.04545454545453], [385.0, 10.200000000000001], [384.0, 10.571428571428571], [386.0, 14.616666666666664], [387.0, 17.428571428571427], [396.0, 72.72222222222223], [397.0, 106.09345794392523], [398.0, 66.82524271844662], [399.0, 62.81818181818182], [388.0, 17.472222222222225], [389.0, 25.333333333333336], [390.0, 26.51315789473685], [391.0, 36.45882352941176], [392.0, 65.38888888888889], [393.0, 56.26315789473685], [394.0, 37.52857142857143], [395.0, 18.875], [414.0, 71.55405405405408], [408.0, 92.99999999999999], [407.0, 109.01694915254238], [409.0, 149.58305084745766], [410.0, 103.60000000000001], [411.0, 155.64285714285717], [412.0, 68.08163265306123], [413.0, 110.53333333333335], [403.0, 121.31746031746033], [401.0, 86.27807486631013], [402.0, 55.3205128205128], [400.0, 45.465753424657535], [415.0, 33.258620689655174], [406.0, 120.96874999999993], [405.0, 102.20967741935485], [404.0, 69.84745762711866], [428.0, 97.54464285714285], [417.0, 37.6], [416.0, 47.57142857142857], [418.0, 59.43333333333334], [419.0, 38.25], [421.0, 143.32800000000003], [420.0, 185.47619047619045], [422.0, 80.33240223463687], [423.0, 72.64999999999998], [424.0, 75.25], [425.0, 79.73933649289104], [426.0, 37.94904458598727], [427.0, 41.95744680851064], [429.0, 80.69230769230771], [430.0, 31.461538461538467], [431.0, 44.202702702702695], [433.0, 30.22539682539685], [432.0, 40.21621621621622], [435.0, 98.78688524590166], [434.0, 128.46226415094344], [437.0, 41.96279069767446], [438.0, 23.150943396226413], [436.0, 122.0], [439.0, 54.70642201834862], [440.0, 57.76811594202898], [444.0, 95.39999999999999], [445.0, 94.68000000000004], [446.0, 53.42352941176468], [447.0, 4.0], [441.0, 33.868852459016374], [443.0, 45.9], [442.0, 73.16176470588239], [455.0, 113.12012012012019], [451.0, 88.41772151898732], [449.0, 71.95121951219514], [448.0, 63.5553235908142], [450.0, 101.15962441314555], [452.0, 108.16911764705877], [453.0, 83.23076923076923], [454.0, 136.01149425287352], [456.0, 108.65714285714286], [457.0, 65.08], [459.0, 126.25925925925924], [458.0, 107.33707865168539], [461.0, 48.484375], [462.0, 97.86281588447657], [463.0, 80.68689320388353], [460.0, 61.42499999999999], [466.0, 62.519999999999996], [464.0, 72.26470588235296], [465.0, 58.225806451612904], [467.0, 87.71559633027525], [468.0, 95.41592920353982], [469.0, 65.92], [470.0, 193.16793893129775], [471.0, 283.34375], [475.0, 45.36585365853663], [479.0, 76.77310924369748], [473.0, 34.23323615160349], [472.0, 130.29962546816478], [474.0, 16.905405405405414], [476.0, 69.94134078212294], [477.0, 70.81318681318682], [478.0, 73.14425427872864], [492.0, 119.84403669724769], [481.0, 113.26801801801797], [480.0, 140.42553191489353], [487.0, 115.89285714285717], [486.0, 98.99542334096112], [482.0, 99.32929782082324], [483.0, 111.68316831683165], [484.0, 85.98795180722892], [485.0, 87.55066079295153], [490.0, 142.7258064516128], [491.0, 132.46296296296296], [495.0, 26.54430379746836], [494.0, 6.909090909090911], [493.0, 24.126582278481013], [488.0, 93.92156862745097], [489.0, 144.6138613861386], [496.0, 98.17549668874173], [497.0, 34.02083333333333], [498.0, 61.472319551506814], [499.0, 88.96824009324], [500.0, 87.11794124264294], [1.0, 0.6666666666666667]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[479.39789999999977, 84.43464400000074]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 0.8333333333333334], [3.0, 2.125], [4.0, 1.3333333333333333], [5.0, 2.1666666666666665], [6.0, 2.5], [7.0, 5.585365853658535], [8.0, 9.2], [9.0, 2.0833333333333335], [10.0, 2.8], [11.0, 3.2857142857142856], [12.0, 5.307692307692308], [13.0, 2.6666666666666665], [14.0, 2.0], [15.0, 3.0], [16.0, 5.6875], [17.0, 5.344262295081968], [18.0, 6.5], [19.0, 7.625], [20.0, 7.75], [21.0, 7.4375], [22.0, 6.5], [23.0, 10.076923076923077], [24.0, 7.0], [25.0, 7.5], [26.0, 11.0], [27.0, 9.947368421052632], [28.0, 9.142857142857142], [29.0, 7.0], [30.0, 7.812499999999999], [31.0, 10.313432835820894], [33.0, 11.4], [32.0, 7.5], [35.0, 10.925925925925927], [34.0, 10.200000000000001], [36.0, 28.749999999999996], [37.0, 65.61538461538461], [38.0, 10.666666666666666], [39.0, 46.31818181818182], [40.0, 49.84615384615385], [41.0, 49.14285714285714], [42.0, 38.64705882352941], [43.0, 27.545454545454543], [45.0, 83.22222222222223], [44.0, 95.5], [46.0, 53.452380952380935], [47.0, 36.28571428571429], [48.0, 60.63636363636361], [49.0, 37.181818181818194], [50.0, 26.92857142857143], [51.0, 26.083333333333332], [52.0, 34.583333333333336], [53.0, 28.75], [54.0, 67.89999999999999], [55.0, 86.63636363636364], [56.0, 81.1304347826087], [57.0, 81.37500000000001], [58.0, 129.3181818181818], [59.0, 68.6], [60.0, 64.70588235294117], [61.0, 45.120000000000005], [62.0, 67.28571428571429], [63.0, 49.882352941176464], [64.0, 64.37500000000001], [65.0, 25.89285714285714], [66.0, 35.480000000000004], [67.0, 68.72222222222221], [68.0, 38.15555555555556], [69.0, 59.692307692307686], [70.0, 169.04999999999998], [74.0, 138.6875], [75.0, 135.00000000000003], [73.0, 50.18181818181818], [72.0, 37.8421052631579], [76.0, 100.63157894736841], [77.0, 113.19999999999999], [78.0, 57.699999999999996], [79.0, 80.36363636363636], [80.0, 35.92], [81.0, 69.68750000000001], [83.0, 67.33333333333333], [82.0, 44.83333333333334], [84.0, 74.13207547169812], [85.0, 31.583333333333332], [87.0, 60.93939393939393], [86.0, 45.90909090909091], [88.0, 29.333333333333336], [89.0, 49.41935483870968], [90.0, 33.45000000000001], [91.0, 83.39999999999999], [92.0, 68.93749999999997], [93.0, 49.631578947368425], [94.0, 111.85714285714283], [95.0, 68.22857142857143], [96.0, 118.54285714285712], [98.0, 75.92957746478875], [99.0, 88.21428571428572], [97.0, 92.94736842105263], [100.0, 66.31578947368422], [101.0, 51.42857142857142], [103.0, 85.1], [102.0, 35.347826086956516], [104.0, 104.69230769230768], [105.0, 71.125], [106.0, 60.87500000000001], [107.0, 47.970149253731364], [108.0, 31.84313725490196], [109.0, 10.600000000000003], [110.0, 57.27777777777778], [111.0, 29.0], [112.0, 35.21428571428572], [113.0, 43.42857142857142], [114.0, 77.56521739130436], [115.0, 102.39999999999998], [116.0, 112.5], [117.0, 142.11111111111111], [118.0, 107.40000000000002], [119.0, 48.44715447154472], [120.0, 118.63636363636361], [121.0, 65.10752688172039], [122.0, 100.3478260869565], [123.0, 5.666666666666667], [125.0, 149.5454545454545], [124.0, 23.861111111111114], [126.0, 62.0888888888889], [127.0, 50.68181818181817], [128.0, 53.80172413793105], [131.0, 78.7], [130.0, 223.08196721311472], [129.0, 81.39682539682543], [132.0, 45.13750000000002], [133.0, 48.62499999999999], [134.0, 53.25757575757575], [135.0, 46.39999999999999], [136.0, 74.57142857142857], [137.0, 40.4], [138.0, 41.82692307692308], [139.0, 77.76363636363635], [140.0, 91.71428571428572], [141.0, 89.77777777777777], [142.0, 75.33333333333334], [143.0, 123.15384615384615], [144.0, 64.37037037037037], [145.0, 86.10344827586208], [146.0, 57.611111111111114], [147.0, 116.17391304347824], [148.0, 117.13999999999999], [149.0, 95.92307692307693], [150.0, 95.21428571428571], [151.0, 49.21969696969698], [152.0, 60.4197530864198], [153.0, 88.81632653061229], [154.0, 61.727272727272734], [155.0, 65.5], [156.0, 119.68421052631577], [158.0, 119.11111111111111], [157.0, 72.32258064516127], [159.0, 101.0263157894737], [161.0, 94.58974358974362], [162.0, 69.27499999999998], [160.0, 111.11363636363639], [163.0, 43.11111111111112], [164.0, 143.26851851851856], [165.0, 54.32258064516128], [166.0, 61.625], [167.0, 29.53333333333333], [168.0, 59.828571428571436], [169.0, 59.83720930232557], [170.0, 115.44444444444446], [171.0, 125.75999999999998], [172.0, 103.9230769230769], [173.0, 101.78947368421053], [174.0, 134.85964912280699], [175.0, 105.13235294117645], [176.0, 175.66666666666666], [177.0, 98.40816326530613], [179.0, 53.25], [180.0, 64.0], [181.0, 42.550000000000004], [182.0, 69.76923076923077], [183.0, 47.88000000000001], [178.0, 33.75], [184.0, 52.96428571428571], [185.0, 57.38095238095237], [186.0, 81.55056179775282], [187.0, 24.77777777777778], [188.0, 16.4], [189.0, 67.89655172413794], [190.0, 55.93548387096775], [191.0, 35.44927536231884], [192.0, 19.115384615384613], [193.0, 30.636363636363647], [194.0, 51.08888888888888], [195.0, 65.85074626865674], [196.0, 36.55072463768117], [197.0, 30.75], [198.0, 53.947368421052644], [199.0, 118.55555555555559], [200.0, 167.24], [201.0, 79.2], [202.0, 115.21052631578944], [203.0, 101.48837209302324], [204.0, 109.93478260869563], [205.0, 193.29411764705878], [207.0, 218.68749999999997], [206.0, 250.6153846153847], [208.0, 296.23529411764713], [210.0, 213.67241379310343], [212.0, 285.7840909090909], [209.0, 209.88372093023256], [213.0, 274.1], [215.0, 101.5084745762712], [214.0, 151.4714285714286], [211.0, 209.49999999999997], [216.0, 58.70967741935481], [217.0, 38.08805031446542], [218.0, 49.38461538461538], [219.0, 25.822784810126585], [221.0, 25.675675675675677], [222.0, 28.076923076923073], [220.0, 24.14814814814815], [223.0, 34.283333333333324], [224.0, 63.71428571428573], [225.0, 90.36619718309858], [226.0, 112.26470588235294], [227.0, 39.423076923076906], [231.0, 84.78947368421053], [230.0, 108.34831460674157], [229.0, 119.52777777777777], [228.0, 157.125], [232.0, 40.16666666666666], [233.0, 31.611111111111107], [234.0, 35.111111111111114], [235.0, 50.696969696969695], [238.0, 204.52525252525257], [239.0, 56.57777777777779], [237.0, 57.89473684210526], [236.0, 92.03571428571426], [240.0, 100.81443298969074], [243.0, 97.04166666666666], [242.0, 67.48780487804879], [244.0, 88.66666666666667], [247.0, 19.318181818181817], [246.0, 51.57142857142857], [245.0, 102.07142857142856], [241.0, 53.806451612903224], [248.0, 43.05747126436782], [249.0, 48.5128205128205], [254.0, 190.49999999999997], [250.0, 63.50990099009901], [255.0, 86.86666666666666], [252.0, 132.40229885057465], [251.0, 92.66666666666667], [253.0, 125.75675675675677], [258.0, 46.294117647058826], [256.0, 115.91780821917808], [257.0, 121.38356164383563], [259.0, 55.91891891891892], [268.0, 150.66666666666666], [269.0, 199.4230769230769], [270.0, 222.28301886792454], [271.0, 12.150000000000002], [260.0, 20.30769230769231], [261.0, 21.363636363636367], [262.0, 39.145833333333336], [263.0, 78.39130434782608], [264.0, 61.88235294117647], [265.0, 65.88888888888887], [266.0, 154.16842105263154], [267.0, 208.09876543209876], [273.0, 74.64000000000007], [272.0, 97.05769230769232], [274.0, 80.0], [275.0, 122.54166666666666], [278.0, 60.22727272727272], [279.0, 214.34615384615378], [276.0, 82.23333333333335], [277.0, 67.72972972972974], [280.0, 172.71311475409826], [287.0, 60.830508474576256], [286.0, 102.81818181818176], [285.0, 161.83333333333331], [284.0, 178.36666666666673], [281.0, 188.17272727272731], [282.0, 204.4827586206897], [283.0, 188.37837837837836], [301.0, 203.94444444444443], [288.0, 17.499999999999996], [289.0, 50.57333333333333], [290.0, 45.708333333333336], [294.0, 147.40540540540545], [293.0, 143.33928571428578], [292.0, 55.70967741935484], [295.0, 243.24528301886792], [298.0, 124.69999999999997], [302.0, 184.3823529411765], [299.0, 173.36], [303.0, 168.01550387596888], [297.0, 54.41025641025641], [296.0, 61.23076923076923], [300.0, 60.13793103448276], [291.0, 98.23333333333333], [305.0, 67.18750000000011], [304.0, 246.89041095890414], [306.0, 141.83999999999997], [307.0, 141.50000000000003], [308.0, 112.5625], [309.0, 117.22988505747125], [310.0, 132.15789473684214], [313.0, 127.28282828282833], [315.0, 195.23076923076925], [314.0, 155.24742268041234], [319.0, 198.4677419354839], [312.0, 120.54545454545453], [317.0, 238.25], [316.0, 219.36986301369862], [318.0, 244.6180555555556], [311.0, 105.8695652173913], [320.0, 206.16666666666666], [323.0, 148.49999999999991], [332.0, 7.5], [333.0, 41.15686274509805], [335.0, 138.03225806451613], [334.0, 90.33928571428568], [321.0, 214.83076923076922], [322.0, 200.22619047619054], [324.0, 168.34482758620692], [325.0, 77.09090909090908], [326.0, 51.1764705882353], [327.0, 92.64285714285714], [328.0, 11.099999999999998], [329.0, 41.52173913043479], [330.0, 1.769230769230769], [331.0, 10.045454545454547], [350.0, 60.38202247191012], [337.0, 134.94936708860763], [336.0, 128.26666666666665], [344.0, 332.52238805970137], [345.0, 254.58064516129033], [351.0, 31.26666666666666], [347.0, 299.60606060606057], [346.0, 278.48275862068954], [349.0, 235.93333333333334], [348.0, 310.5089285714286], [338.0, 118.51879699248114], [339.0, 193.47619047619054], [343.0, 372.4722222222223], [341.0, 170.91056910569105], [342.0, 221.69387755102036], [340.0, 174.47499999999994], [353.0, 385.4743589743589], [352.0, 187.92156862745097], [354.0, 196.2377622377622], [355.0, 79.34328358208955], [357.0, 30.42105263157894], [356.0, 58.66666666666667], [358.0, 17.473684210526315], [359.0, 14.03846153846154], [360.0, 21.162500000000005], [367.0, 12.705882352941176], [366.0, 113.68965517241381], [365.0, 151.69230769230768], [364.0, 22.684210526315795], [361.0, 17.26415094339623], [362.0, 34.44545454545454], [363.0, 12.297297297297295], [369.0, 81.11249999999998], [368.0, 21.363636363636367], [371.0, 221.34909090909093], [370.0, 164.99999999999997], [372.0, 129.6230769230769], [373.0, 160.12121212121212], [374.0, 66.36363636363636], [375.0, 98.32142857142857], [376.0, 180.97959183673467], [382.0, 48.30434782608696], [383.0, 18.076923076923077], [380.0, 55.354838709677416], [381.0, 44.06896551724138], [377.0, 157.93248945147667], [378.0, 79.40845070422532], [379.0, 95.95454545454545], [385.0, 16.95], [384.0, 14.607142857142856], [386.0, 21.349999999999998], [387.0, 21.0], [396.0, 118.52222222222221], [397.0, 239.97196261682237], [398.0, 91.41747572815535], [399.0, 67.90909090909089], [388.0, 22.86111111111111], [389.0, 32.95402298850574], [390.0, 49.49999999999999], [391.0, 50.35294117647059], [392.0, 101.27777777777779], [393.0, 88.05263157894737], [394.0, 75.01428571428568], [395.0, 37.437500000000014], [414.0, 118.40540540540535], [408.0, 106.8], [407.0, 161.271186440678], [409.0, 241.27118644067806], [410.0, 148.55714285714276], [411.0, 252.17346938775495], [412.0, 120.87755102040816], [403.0, 261.15873015873024], [413.0, 165.26666666666665], [401.0, 194.62032085561498], [402.0, 141.07692307692307], [400.0, 118.70319634703193], [415.0, 69.89655172413794], [406.0, 170.46874999999997], [405.0, 177.27419354838707], [404.0, 142.52542372881362], [428.0, 197.29464285714283], [417.0, 96.075], [416.0, 68.85714285714286], [418.0, 147.4666666666666], [419.0, 42.87499999999999], [421.0, 280.32800000000003], [420.0, 200.0], [422.0, 133.5558659217878], [423.0, 151.38333333333338], [424.0, 299.0833333333333], [425.0, 176.41706161137444], [426.0, 103.03184713375792], [427.0, 93.46808510638297], [429.0, 315.92307692307696], [430.0, 138.6153846153846], [431.0, 104.18918918918916], [433.0, 58.24126984126983], [432.0, 57.610810810810825], [435.0, 261.9672131147541], [434.0, 252.55660377358498], [437.0, 97.04186046511634], [438.0, 41.867924528301884], [436.0, 215.375], [439.0, 139.81957186544344], [440.0, 128.02898550724638], [444.0, 129.33333333333337], [445.0, 128.2800000000001], [446.0, 107.32941176470591], [447.0, 28.166666666666668], [441.0, 67.40163934426235], [443.0, 129.675], [442.0, 173.2647058823529], [455.0, 230.23123123123136], [451.0, 186.8227848101267], [449.0, 145.77235772357724], [448.0, 125.90814196242167], [450.0, 202.8169014084507], [452.0, 200.72794117647064], [453.0, 131.0], [454.0, 214.04597701149427], [456.0, 200.3142857142857], [457.0, 172.23999999999998], [459.0, 233.8703703703704], [458.0, 245.43820224719101], [461.0, 174.12500000000009], [462.0, 218.28880866425996], [463.0, 173.1140776699029], [460.0, 253.54999999999998], [466.0, 132.88000000000002], [464.0, 154.7647058823529], [465.0, 99.74193548387098], [467.0, 181.78440366972475], [468.0, 175.88495575221248], [469.0, 104.36000000000001], [470.0, 296.16030534351154], [471.0, 391.1250000000001], [475.0, 80.54268292682924], [479.0, 166.5126050420169], [473.0, 113.96209912536436], [472.0, 378.87640449438226], [474.0, 20.85810810810811], [476.0, 134.96089385474852], [477.0, 169.17582417582415], [478.0, 173.09290953545232], [492.0, 245.22018348623862], [481.0, 235.01801801801815], [480.0, 226.6914893617021], [487.0, 258.3035714285714], [486.0, 189.60640732265432], [482.0, 201.19854721549643], [483.0, 207.32673267326732], [484.0, 187.15662650602422], [485.0, 183.8810572687226], [490.0, 256.7358870967746], [491.0, 300.85185185185185], [495.0, 47.98734177215189], [494.0, 67.18181818181817], [493.0, 38.35443037974686], [488.0, 224.64705882352942], [489.0, 257.67821782178214], [496.0, 271.24503311258303], [497.0, 150.66666666666666], [498.0, 130.84232655921528], [499.0, 181.7316433566436], [500.0, 181.93453541565088], [1.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[479.3978999999997, 175.69007999999988]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 188306.96666666667, "minX": 1.64631462E12, "maxY": 1.51036363E7, "series": [{"data": [[1.64631474E12, 1.51036363E7], [1.64631468E12, 1.4530451666666666E7], [1.64631462E12, 2902412.033333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64631474E12, 978470.0], [1.64631468E12, 941556.3666666667], [1.64631462E12, 188306.96666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64631474E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 75.31347878463419, "minX": 1.64631462E12, "maxY": 182.31980628671394, "series": [{"data": [[1.64631474E12, 91.33210974390894], [1.64631468E12, 79.27037896226516], [1.64631462E12, 83.29630958252963]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.64631474E12, 89.69569604967957], [1.64631468E12, 80.80235922147335], [1.64631462E12, 75.31347878463419]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.64631474E12, 181.56769379243647], [1.64631468E12, 168.25630782735004], [1.64631462E12, 182.31980628671394]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64631474E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 75.22759113014791, "minX": 1.64631462E12, "maxY": 91.29303243373742, "series": [{"data": [[1.64631474E12, 91.29303243373742], [1.64631468E12, 78.80475068743442], [1.64631462E12, 81.36424375588581]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.64631474E12, 89.69490253579491], [1.64631468E12, 80.76749935063371], [1.64631462E12, 75.22759113014791]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.64631474E12, 89.65889428876733], [1.64631468E12, 80.73530860659156], [1.64631462E12, 75.50347518048534]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64631474E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64631462E12, "maxY": 1.1342092282857232, "series": [{"data": [[1.64631474E12, 0.0], [1.64631468E12, 0.0], [1.64631462E12, 0.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.64631474E12, 0.016517164050370885], [1.64631468E12, 0.804204322552328], [1.64631462E12, 1.1317092758666778]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.64631474E12, 0.016509840416364916], [1.64631468E12, 0.8048312986466218], [1.64631462E12, 1.1342092282857232]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64631474E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64631462E12, "maxY": 1667.0, "series": [{"data": [[1.64631474E12, 1030.0], [1.64631468E12, 1667.0], [1.64631462E12, 1341.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64631474E12, 0.0], [1.64631468E12, 1.0], [1.64631462E12, 0.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64631474E12, 0.0], [1.64631468E12, 1.0], [1.64631462E12, 0.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64631474E12, 0.0], [1.64631468E12, 1.0], [1.64631462E12, 0.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64631474E12, 0.0], [1.64631468E12, 0.0], [1.64631462E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64631474E12, 14.0], [1.64631468E12, 113.0], [1.64631462E12, 41.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64631474E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 346.0, "maxY": 1061.0, "series": [{"data": [[8293.0, 109.0], [8383.0, 101.0], [8567.0, 16.0], [8879.0, 13.0], [346.0, 1.0], [737.0, 46.0], [1924.0, 49.0], [2149.0, 56.0], [2176.0, 67.0], [2218.0, 34.0], [2224.0, 107.0], [2212.0, 56.0], [2307.0, 16.0], [2453.0, 91.0], [2538.0, 57.0], [2483.0, 26.0], [2584.0, 68.0], [2593.0, 143.0], [2596.0, 56.0], [2731.0, 13.0], [2760.0, 10.0], [2893.0, 101.0], [2921.0, 94.0], [2854.0, 46.0], [3032.0, 75.0], [3043.0, 26.0], [2946.0, 43.0], [2999.0, 77.0], [2973.0, 137.0], [3077.0, 54.5], [3175.0, 151.0], [3176.0, 91.0], [3213.0, 26.0], [3225.0, 70.0], [3229.0, 47.0], [3446.0, 111.0], [3392.0, 32.0], [3328.0, 22.0], [3344.0, 12.0], [3504.0, 34.0], [3457.0, 23.0], [3478.0, 31.0], [3524.0, 13.0], [3553.0, 28.0], [3682.0, 74.0], [3885.0, 31.0], [3942.0, 35.0], [4061.0, 19.0], [4088.0, 37.0], [4069.0, 12.0], [4324.0, 105.0], [4114.0, 24.0], [4149.0, 107.0], [4255.0, 59.0], [4440.0, 47.0], [4409.0, 14.0], [4530.0, 34.0], [4678.0, 30.5], [4861.0, 51.0], [4655.0, 82.0], [4820.0, 70.0], [5173.0, 77.0], [5428.0, 80.0], [5854.0, 78.0], [5931.0, 95.0], [6239.0, 92.0], [6480.0, 70.0], [6551.0, 99.0], [6809.0, 141.0], [7083.0, 87.0], [6942.0, 102.0], [7101.0, 84.0], [6952.0, 115.0], [7062.0, 113.0], [7041.0, 119.0], [7039.0, 124.0], [7356.0, 113.0], [7320.0, 119.0], [7334.0, 108.0], [7344.0, 116.0], [7342.0, 116.0], [7645.0, 106.0], [7563.0, 70.0], [7634.0, 95.0], [7669.0, 108.0], [7657.0, 111.0], [7668.0, 108.5], [7664.0, 115.0], [7676.0, 113.0], [7678.0, 110.0], [7560.0, 109.0], [7635.0, 109.0], [7602.0, 118.0], [7574.0, 117.0], [7516.0, 115.0], [7626.0, 116.0], [7475.0, 116.0], [7547.0, 113.0], [7533.0, 111.0], [7525.0, 113.0], [7789.0, 103.0], [7890.0, 98.0], [7903.0, 103.0], [7910.0, 91.0], [7767.0, 117.0], [7751.0, 108.0], [7748.0, 112.0], [7913.0, 105.0], [7830.0, 108.0], [7920.0, 93.0], [7689.0, 104.0], [7698.0, 116.0], [7781.0, 113.0], [7785.0, 115.0], [7797.0, 100.0], [7952.0, 104.0], [8134.0, 95.0], [8167.0, 100.0], [8139.0, 65.0], [7980.0, 109.0], [8046.0, 104.0], [7981.0, 109.0], [7946.0, 100.0], [7978.0, 110.5], [8023.0, 113.0], [8028.0, 117.0], [8596.0, 98.0], [9170.0, 16.0], [9190.0, 10.0], [9336.0, 18.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8293.0, 541.0], [8383.0, 565.0], [8567.0, 507.5], [8879.0, 607.0], [2149.0, 537.0], [2224.0, 550.0], [2212.0, 538.0], [2307.0, 614.0], [2453.0, 551.5], [2538.0, 564.0], [2483.0, 713.0], [2584.0, 571.0], [2593.0, 711.0], [2596.0, 801.0], [2731.0, 726.0], [2760.0, 695.5], [2893.0, 662.0], [2921.0, 660.0], [2854.0, 594.0], [3032.0, 806.5], [3043.0, 1022.5], [2946.0, 569.5], [2999.0, 518.0], [2973.0, 614.5], [3077.0, 564.0], [3175.0, 605.0], [3176.0, 568.0], [3213.0, 873.0], [3225.0, 521.0], [3229.0, 577.0], [3446.0, 629.0], [3328.0, 843.0], [3344.0, 572.5], [3392.0, 651.0], [3504.0, 1061.0], [3457.0, 714.0], [3478.0, 609.0], [3524.0, 792.5], [3553.0, 600.0], [3682.0, 659.5], [3885.0, 604.0], [3942.0, 579.5], [4061.0, 628.5], [4088.0, 594.0], [4069.0, 762.5], [4324.0, 552.5], [4114.0, 735.0], [4149.0, 841.0], [4255.0, 513.0], [4440.0, 723.0], [4409.0, 699.0], [4530.0, 555.0], [4678.0, 718.5], [4861.0, 897.0], [4655.0, 548.0], [5173.0, 528.0], [5428.0, 551.0], [5854.0, 547.0], [5931.0, 928.5], [6239.0, 539.5], [6480.0, 515.0], [6551.0, 642.0], [6942.0, 540.0], [7101.0, 893.0], [7356.0, 568.0], [7320.0, 562.5], [7342.0, 692.0], [7645.0, 531.5], [7563.0, 590.0], [7560.0, 517.0], [7634.0, 501.0], [7669.0, 664.0], [7635.0, 558.0], [7516.0, 523.5], [7626.0, 591.0], [7533.0, 580.0], [7664.0, 542.0], [7574.0, 537.0], [7890.0, 597.0], [7767.0, 635.0], [7830.0, 518.0], [7910.0, 526.0], [7920.0, 600.0], [7689.0, 531.5], [7781.0, 548.0], [7698.0, 508.0], [7751.0, 542.0], [7748.0, 501.0], [7785.0, 530.5], [8167.0, 541.0], [8134.0, 505.0], [8046.0, 528.0], [7952.0, 755.0], [7981.0, 535.5], [7946.0, 559.0], [8023.0, 569.0], [8139.0, 649.0], [8596.0, 566.0], [9170.0, 568.0], [9190.0, 731.0], [9336.0, 678.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 9336.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 346.0, "maxY": 796.0, "series": [{"data": [[8293.0, 89.0], [8383.0, 93.0], [8567.0, 13.0], [8879.0, 12.0], [346.0, 1.0], [737.0, 36.0], [1924.0, 38.0], [2149.0, 39.0], [2176.0, 51.0], [2218.0, 22.0], [2224.0, 83.0], [2212.0, 39.0], [2307.0, 11.0], [2453.0, 48.0], [2538.0, 37.0], [2483.0, 18.0], [2584.0, 42.0], [2593.0, 97.0], [2596.0, 35.0], [2731.0, 8.0], [2760.0, 6.0], [2893.0, 64.0], [2921.0, 60.0], [2854.0, 32.0], [3032.0, 53.0], [3043.0, 19.0], [2946.0, 28.0], [2999.0, 45.0], [2973.0, 101.0], [3077.0, 30.0], [3175.0, 74.0], [3176.0, 60.0], [3213.0, 19.0], [3225.0, 35.0], [3229.0, 32.0], [3446.0, 76.0], [3392.0, 22.0], [3328.0, 16.0], [3344.0, 8.0], [3504.0, 21.0], [3457.0, 16.0], [3478.0, 22.0], [3524.0, 8.0], [3553.0, 21.0], [3682.0, 47.0], [3885.0, 22.0], [3942.0, 23.0], [4061.0, 13.0], [4088.0, 28.0], [4069.0, 9.0], [4324.0, 79.0], [4114.0, 17.0], [4149.0, 70.0], [4255.0, 46.0], [4440.0, 34.0], [4409.0, 10.0], [4530.0, 24.0], [4678.0, 23.0], [4861.0, 40.0], [4655.0, 50.0], [4820.0, 48.0], [5173.0, 55.0], [5428.0, 56.0], [5854.0, 68.0], [5931.0, 72.0], [6239.0, 73.0], [6480.0, 55.0], [6551.0, 76.0], [6809.0, 114.0], [7083.0, 65.0], [6942.0, 87.0], [7101.0, 69.0], [6952.0, 104.0], [7062.0, 101.0], [7041.0, 112.0], [7039.0, 112.0], [7356.0, 97.0], [7320.0, 93.0], [7334.0, 94.0], [7344.0, 106.0], [7342.0, 98.0], [7645.0, 89.0], [7563.0, 57.0], [7634.0, 78.0], [7669.0, 92.0], [7657.0, 91.0], [7668.0, 95.0], [7664.0, 97.0], [7676.0, 104.0], [7678.0, 99.0], [7560.0, 87.0], [7635.0, 97.0], [7602.0, 100.0], [7574.0, 103.0], [7516.0, 100.0], [7626.0, 94.0], [7475.0, 104.0], [7547.0, 104.0], [7533.0, 98.0], [7525.0, 99.0], [7789.0, 97.0], [7890.0, 83.0], [7903.0, 93.0], [7910.0, 80.5], [7767.0, 90.0], [7751.0, 94.0], [7748.0, 103.0], [7913.0, 92.0], [7830.0, 99.0], [7920.0, 71.0], [7689.0, 95.0], [7698.0, 103.0], [7781.0, 102.0], [7785.0, 104.0], [7797.0, 88.0], [7952.0, 93.0], [8134.0, 80.0], [8167.0, 90.0], [8139.0, 47.0], [7980.0, 95.0], [8046.0, 94.0], [7981.0, 98.0], [7946.0, 90.0], [7978.0, 99.0], [8023.0, 91.0], [8028.0, 106.0], [8596.0, 82.0], [9170.0, 15.0], [9190.0, 9.0], [9336.0, 16.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8293.0, 357.0], [8383.0, 256.0], [8567.0, 237.0], [8879.0, 308.5], [2149.0, 446.0], [2224.0, 368.0], [2212.0, 77.0], [2307.0, 106.0], [2453.0, 186.0], [2538.0, 437.5], [2483.0, 320.5], [2584.0, 274.0], [2593.0, 665.0], [2596.0, 45.5], [2731.0, 321.0], [2760.0, 219.5], [2893.0, 423.5], [2921.0, 335.0], [2854.0, 25.0], [3032.0, 276.0], [3043.0, 169.0], [2946.0, 162.5], [2999.0, 371.0], [2973.0, 144.0], [3077.0, 154.0], [3175.0, 124.0], [3176.0, 356.5], [3213.0, 143.0], [3225.0, 469.0], [3229.0, 320.5], [3446.0, 262.0], [3328.0, 531.5], [3344.0, 19.0], [3392.0, 152.0], [3504.0, 144.0], [3457.0, 45.0], [3478.0, 224.5], [3524.0, 107.5], [3553.0, 81.5], [3682.0, 173.5], [3885.0, 47.0], [3942.0, 393.0], [4061.0, 49.0], [4088.0, 195.5], [4069.0, 90.5], [4324.0, 372.0], [4114.0, 85.0], [4149.0, 104.0], [4255.0, 300.0], [4440.0, 161.5], [4409.0, 31.0], [4530.0, 14.0], [4678.0, 247.0], [4861.0, 796.0], [4655.0, 278.0], [5173.0, 400.0], [5428.0, 166.0], [5854.0, 415.0], [5931.0, 39.5], [6239.0, 379.5], [6480.0, 297.0], [6551.0, 82.0], [6942.0, 301.0], [7101.0, 450.0], [7356.0, 475.5], [7320.0, 179.0], [7342.0, 329.0], [7645.0, 303.0], [7563.0, 177.0], [7560.0, 143.0], [7634.0, 158.0], [7669.0, 115.5], [7635.0, 122.0], [7516.0, 179.5], [7626.0, 133.5], [7533.0, 141.0], [7664.0, 452.0], [7574.0, 373.0], [7890.0, 259.0], [7767.0, 306.0], [7830.0, 418.0], [7910.0, 159.0], [7920.0, 386.0], [7689.0, 107.5], [7781.0, 98.0], [7698.0, 195.0], [7751.0, 134.0], [7748.0, 411.0], [7785.0, 112.5], [8167.0, 87.0], [8134.0, 150.0], [8046.0, 441.0], [7952.0, 113.0], [7981.0, 125.5], [7946.0, 269.0], [8023.0, 300.5], [8139.0, 368.0], [8596.0, 320.0], [9170.0, 256.0], [9190.0, 306.0], [9336.0, 324.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 9336.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1129.6166666666666, "minX": 1.64631462E12, "maxY": 5789.2, "series": [{"data": [[1.64631474E12, 5789.2], [1.64631468E12, 5581.183333333333], [1.64631462E12, 1129.6166666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64631474E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 373.55, "minX": 1.64631462E12, "maxY": 3868.4, "series": [{"data": [[1.64631474E12, 3868.4], [1.64631468E12, 3721.5666666666666], [1.64631462E12, 743.3666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.64631474E12, 1932.3333333333333], [1.64631468E12, 1860.7833333333333], [1.64631462E12, 373.55]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64631474E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 23.066666666666666, "minX": 1.64631462E12, "maxY": 1934.2, "series": [{"data": [[1.64631474E12, 1907.0166666666667], [1.64631468E12, 1823.2833333333333], [1.64631462E12, 348.6166666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.64631474E12, 27.183333333333334], [1.64631468E12, 37.5], [1.64631462E12, 23.066666666666666]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.64631474E12, 1932.3333333333333], [1.64631468E12, 1860.7833333333333], [1.64631462E12, 373.55]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.64631474E12, 1934.2], [1.64631468E12, 1860.7833333333333], [1.64631462E12, 371.68333333333334]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64631474E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 23.066666666666666, "minX": 1.64631462E12, "maxY": 5773.55, "series": [{"data": [[1.64631474E12, 5773.55], [1.64631468E12, 5544.85], [1.64631462E12, 1093.85]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.64631474E12, 27.183333333333334], [1.64631468E12, 37.5], [1.64631462E12, 23.066666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64631474E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

