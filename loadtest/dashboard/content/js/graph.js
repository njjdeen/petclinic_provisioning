/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 2802.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 4.0], [5.4, 4.0], [5.5, 4.0], [5.6, 4.0], [5.7, 4.0], [5.8, 4.0], [5.9, 4.0], [6.0, 4.0], [6.1, 4.0], [6.2, 4.0], [6.3, 5.0], [6.4, 5.0], [6.5, 5.0], [6.6, 5.0], [6.7, 5.0], [6.8, 5.0], [6.9, 5.0], [7.0, 5.0], [7.1, 5.0], [7.2, 6.0], [7.3, 6.0], [7.4, 6.0], [7.5, 6.0], [7.6, 6.0], [7.7, 6.0], [7.8, 6.0], [7.9, 6.0], [8.0, 6.0], [8.1, 7.0], [8.2, 7.0], [8.3, 7.0], [8.4, 7.0], [8.5, 7.0], [8.6, 7.0], [8.7, 7.0], [8.8, 7.0], [8.9, 7.0], [9.0, 8.0], [9.1, 8.0], [9.2, 8.0], [9.3, 8.0], [9.4, 8.0], [9.5, 8.0], [9.6, 8.0], [9.7, 8.0], [9.8, 9.0], [9.9, 9.0], [10.0, 9.0], [10.1, 9.0], [10.2, 9.0], [10.3, 9.0], [10.4, 9.0], [10.5, 9.0], [10.6, 10.0], [10.7, 10.0], [10.8, 10.0], [10.9, 10.0], [11.0, 10.0], [11.1, 10.0], [11.2, 10.0], [11.3, 11.0], [11.4, 11.0], [11.5, 11.0], [11.6, 11.0], [11.7, 11.0], [11.8, 11.0], [11.9, 11.0], [12.0, 12.0], [12.1, 12.0], [12.2, 12.0], [12.3, 12.0], [12.4, 12.0], [12.5, 12.0], [12.6, 13.0], [12.7, 13.0], [12.8, 13.0], [12.9, 13.0], [13.0, 13.0], [13.1, 13.0], [13.2, 13.0], [13.3, 14.0], [13.4, 14.0], [13.5, 14.0], [13.6, 14.0], [13.7, 14.0], [13.8, 14.0], [13.9, 15.0], [14.0, 15.0], [14.1, 15.0], [14.2, 15.0], [14.3, 15.0], [14.4, 15.0], [14.5, 16.0], [14.6, 16.0], [14.7, 16.0], [14.8, 16.0], [14.9, 16.0], [15.0, 16.0], [15.1, 16.0], [15.2, 16.0], [15.3, 17.0], [15.4, 17.0], [15.5, 17.0], [15.6, 17.0], [15.7, 17.0], [15.8, 17.0], [15.9, 17.0], [16.0, 18.0], [16.1, 18.0], [16.2, 18.0], [16.3, 18.0], [16.4, 18.0], [16.5, 18.0], [16.6, 19.0], [16.7, 19.0], [16.8, 19.0], [16.9, 19.0], [17.0, 19.0], [17.1, 19.0], [17.2, 19.0], [17.3, 20.0], [17.4, 20.0], [17.5, 20.0], [17.6, 20.0], [17.7, 20.0], [17.8, 20.0], [17.9, 21.0], [18.0, 21.0], [18.1, 21.0], [18.2, 21.0], [18.3, 21.0], [18.4, 22.0], [18.5, 22.0], [18.6, 22.0], [18.7, 22.0], [18.8, 22.0], [18.9, 22.0], [19.0, 23.0], [19.1, 23.0], [19.2, 23.0], [19.3, 23.0], [19.4, 23.0], [19.5, 23.0], [19.6, 24.0], [19.7, 24.0], [19.8, 24.0], [19.9, 24.0], [20.0, 24.0], [20.1, 24.0], [20.2, 24.0], [20.3, 25.0], [20.4, 25.0], [20.5, 25.0], [20.6, 25.0], [20.7, 25.0], [20.8, 25.0], [20.9, 26.0], [21.0, 26.0], [21.1, 26.0], [21.2, 26.0], [21.3, 26.0], [21.4, 26.0], [21.5, 26.0], [21.6, 27.0], [21.7, 27.0], [21.8, 27.0], [21.9, 27.0], [22.0, 27.0], [22.1, 28.0], [22.2, 28.0], [22.3, 28.0], [22.4, 28.0], [22.5, 28.0], [22.6, 28.0], [22.7, 29.0], [22.8, 29.0], [22.9, 29.0], [23.0, 29.0], [23.1, 29.0], [23.2, 29.0], [23.3, 30.0], [23.4, 30.0], [23.5, 30.0], [23.6, 30.0], [23.7, 30.0], [23.8, 31.0], [23.9, 31.0], [24.0, 31.0], [24.1, 31.0], [24.2, 31.0], [24.3, 31.0], [24.4, 32.0], [24.5, 32.0], [24.6, 32.0], [24.7, 32.0], [24.8, 32.0], [24.9, 32.0], [25.0, 33.0], [25.1, 33.0], [25.2, 33.0], [25.3, 33.0], [25.4, 33.0], [25.5, 33.0], [25.6, 34.0], [25.7, 34.0], [25.8, 34.0], [25.9, 34.0], [26.0, 34.0], [26.1, 34.0], [26.2, 35.0], [26.3, 35.0], [26.4, 35.0], [26.5, 35.0], [26.6, 35.0], [26.7, 36.0], [26.8, 36.0], [26.9, 36.0], [27.0, 36.0], [27.1, 36.0], [27.2, 37.0], [27.3, 37.0], [27.4, 37.0], [27.5, 37.0], [27.6, 37.0], [27.7, 37.0], [27.8, 38.0], [27.9, 38.0], [28.0, 38.0], [28.1, 38.0], [28.2, 38.0], [28.3, 39.0], [28.4, 39.0], [28.5, 39.0], [28.6, 39.0], [28.7, 39.0], [28.8, 39.0], [28.9, 40.0], [29.0, 40.0], [29.1, 40.0], [29.2, 40.0], [29.3, 40.0], [29.4, 40.0], [29.5, 41.0], [29.6, 41.0], [29.7, 41.0], [29.8, 41.0], [29.9, 41.0], [30.0, 41.0], [30.1, 42.0], [30.2, 42.0], [30.3, 42.0], [30.4, 42.0], [30.5, 42.0], [30.6, 43.0], [30.7, 43.0], [30.8, 43.0], [30.9, 43.0], [31.0, 43.0], [31.1, 44.0], [31.2, 44.0], [31.3, 44.0], [31.4, 44.0], [31.5, 44.0], [31.6, 44.0], [31.7, 45.0], [31.8, 45.0], [31.9, 45.0], [32.0, 45.0], [32.1, 45.0], [32.2, 46.0], [32.3, 46.0], [32.4, 46.0], [32.5, 46.0], [32.6, 46.0], [32.7, 47.0], [32.8, 47.0], [32.9, 47.0], [33.0, 47.0], [33.1, 47.0], [33.2, 47.0], [33.3, 48.0], [33.4, 48.0], [33.5, 48.0], [33.6, 48.0], [33.7, 48.0], [33.8, 48.0], [33.9, 49.0], [34.0, 49.0], [34.1, 49.0], [34.2, 49.0], [34.3, 49.0], [34.4, 50.0], [34.5, 50.0], [34.6, 50.0], [34.7, 50.0], [34.8, 50.0], [34.9, 50.0], [35.0, 51.0], [35.1, 51.0], [35.2, 51.0], [35.3, 51.0], [35.4, 51.0], [35.5, 52.0], [35.6, 52.0], [35.7, 52.0], [35.8, 52.0], [35.9, 52.0], [36.0, 52.0], [36.1, 53.0], [36.2, 53.0], [36.3, 53.0], [36.4, 53.0], [36.5, 53.0], [36.6, 54.0], [36.7, 54.0], [36.8, 54.0], [36.9, 54.0], [37.0, 54.0], [37.1, 54.0], [37.2, 55.0], [37.3, 55.0], [37.4, 55.0], [37.5, 55.0], [37.6, 55.0], [37.7, 55.0], [37.8, 56.0], [37.9, 56.0], [38.0, 56.0], [38.1, 56.0], [38.2, 56.0], [38.3, 56.0], [38.4, 57.0], [38.5, 57.0], [38.6, 57.0], [38.7, 57.0], [38.8, 57.0], [38.9, 57.0], [39.0, 58.0], [39.1, 58.0], [39.2, 58.0], [39.3, 58.0], [39.4, 58.0], [39.5, 58.0], [39.6, 59.0], [39.7, 59.0], [39.8, 59.0], [39.9, 59.0], [40.0, 59.0], [40.1, 59.0], [40.2, 60.0], [40.3, 60.0], [40.4, 60.0], [40.5, 60.0], [40.6, 60.0], [40.7, 60.0], [40.8, 61.0], [40.9, 61.0], [41.0, 61.0], [41.1, 61.0], [41.2, 61.0], [41.3, 61.0], [41.4, 62.0], [41.5, 62.0], [41.6, 62.0], [41.7, 62.0], [41.8, 62.0], [41.9, 62.0], [42.0, 63.0], [42.1, 63.0], [42.2, 63.0], [42.3, 63.0], [42.4, 63.0], [42.5, 63.0], [42.6, 63.0], [42.7, 64.0], [42.8, 64.0], [42.9, 64.0], [43.0, 64.0], [43.1, 64.0], [43.2, 64.0], [43.3, 64.0], [43.4, 65.0], [43.5, 65.0], [43.6, 65.0], [43.7, 65.0], [43.8, 65.0], [43.9, 65.0], [44.0, 66.0], [44.1, 66.0], [44.2, 66.0], [44.3, 66.0], [44.4, 66.0], [44.5, 66.0], [44.6, 66.0], [44.7, 67.0], [44.8, 67.0], [44.9, 67.0], [45.0, 67.0], [45.1, 67.0], [45.2, 67.0], [45.3, 67.0], [45.4, 68.0], [45.5, 68.0], [45.6, 68.0], [45.7, 68.0], [45.8, 68.0], [45.9, 68.0], [46.0, 68.0], [46.1, 69.0], [46.2, 69.0], [46.3, 69.0], [46.4, 69.0], [46.5, 69.0], [46.6, 69.0], [46.7, 69.0], [46.8, 70.0], [46.9, 70.0], [47.0, 70.0], [47.1, 70.0], [47.2, 70.0], [47.3, 70.0], [47.4, 70.0], [47.5, 71.0], [47.6, 71.0], [47.7, 71.0], [47.8, 71.0], [47.9, 71.0], [48.0, 71.0], [48.1, 71.0], [48.2, 72.0], [48.3, 72.0], [48.4, 72.0], [48.5, 72.0], [48.6, 72.0], [48.7, 72.0], [48.8, 72.0], [48.9, 72.0], [49.0, 72.0], [49.1, 73.0], [49.2, 73.0], [49.3, 73.0], [49.4, 73.0], [49.5, 73.0], [49.6, 73.0], [49.7, 73.0], [49.8, 74.0], [49.9, 74.0], [50.0, 74.0], [50.1, 74.0], [50.2, 74.0], [50.3, 74.0], [50.4, 74.0], [50.5, 75.0], [50.6, 75.0], [50.7, 75.0], [50.8, 75.0], [50.9, 75.0], [51.0, 75.0], [51.1, 75.0], [51.2, 75.0], [51.3, 76.0], [51.4, 76.0], [51.5, 76.0], [51.6, 76.0], [51.7, 76.0], [51.8, 76.0], [51.9, 76.0], [52.0, 77.0], [52.1, 77.0], [52.2, 77.0], [52.3, 77.0], [52.4, 77.0], [52.5, 77.0], [52.6, 77.0], [52.7, 77.0], [52.8, 78.0], [52.9, 78.0], [53.0, 78.0], [53.1, 78.0], [53.2, 78.0], [53.3, 78.0], [53.4, 78.0], [53.5, 78.0], [53.6, 79.0], [53.7, 79.0], [53.8, 79.0], [53.9, 79.0], [54.0, 79.0], [54.1, 79.0], [54.2, 79.0], [54.3, 79.0], [54.4, 79.0], [54.5, 80.0], [54.6, 80.0], [54.7, 80.0], [54.8, 80.0], [54.9, 80.0], [55.0, 80.0], [55.1, 80.0], [55.2, 80.0], [55.3, 80.0], [55.4, 81.0], [55.5, 81.0], [55.6, 81.0], [55.7, 81.0], [55.8, 81.0], [55.9, 81.0], [56.0, 81.0], [56.1, 81.0], [56.2, 81.0], [56.3, 82.0], [56.4, 82.0], [56.5, 82.0], [56.6, 82.0], [56.7, 82.0], [56.8, 82.0], [56.9, 82.0], [57.0, 82.0], [57.1, 82.0], [57.2, 83.0], [57.3, 83.0], [57.4, 83.0], [57.5, 83.0], [57.6, 83.0], [57.7, 83.0], [57.8, 83.0], [57.9, 83.0], [58.0, 84.0], [58.1, 84.0], [58.2, 84.0], [58.3, 84.0], [58.4, 84.0], [58.5, 84.0], [58.6, 84.0], [58.7, 84.0], [58.8, 84.0], [58.9, 85.0], [59.0, 85.0], [59.1, 85.0], [59.2, 85.0], [59.3, 85.0], [59.4, 85.0], [59.5, 85.0], [59.6, 85.0], [59.7, 85.0], [59.8, 86.0], [59.9, 86.0], [60.0, 86.0], [60.1, 86.0], [60.2, 86.0], [60.3, 86.0], [60.4, 86.0], [60.5, 86.0], [60.6, 86.0], [60.7, 86.0], [60.8, 87.0], [60.9, 87.0], [61.0, 87.0], [61.1, 87.0], [61.2, 87.0], [61.3, 87.0], [61.4, 87.0], [61.5, 87.0], [61.6, 87.0], [61.7, 88.0], [61.8, 88.0], [61.9, 88.0], [62.0, 88.0], [62.1, 88.0], [62.2, 88.0], [62.3, 88.0], [62.4, 88.0], [62.5, 88.0], [62.6, 88.0], [62.7, 89.0], [62.8, 89.0], [62.9, 89.0], [63.0, 89.0], [63.1, 89.0], [63.2, 89.0], [63.3, 89.0], [63.4, 89.0], [63.5, 89.0], [63.6, 89.0], [63.7, 90.0], [63.8, 90.0], [63.9, 90.0], [64.0, 90.0], [64.1, 90.0], [64.2, 90.0], [64.3, 90.0], [64.4, 90.0], [64.5, 90.0], [64.6, 91.0], [64.7, 91.0], [64.8, 91.0], [64.9, 91.0], [65.0, 91.0], [65.1, 91.0], [65.2, 91.0], [65.3, 91.0], [65.4, 91.0], [65.5, 92.0], [65.6, 92.0], [65.7, 92.0], [65.8, 92.0], [65.9, 92.0], [66.0, 92.0], [66.1, 92.0], [66.2, 92.0], [66.3, 92.0], [66.4, 92.0], [66.5, 93.0], [66.6, 93.0], [66.7, 93.0], [66.8, 93.0], [66.9, 93.0], [67.0, 93.0], [67.1, 93.0], [67.2, 93.0], [67.3, 93.0], [67.4, 93.0], [67.5, 94.0], [67.6, 94.0], [67.7, 94.0], [67.8, 94.0], [67.9, 94.0], [68.0, 94.0], [68.1, 94.0], [68.2, 94.0], [68.3, 94.0], [68.4, 94.0], [68.5, 95.0], [68.6, 95.0], [68.7, 95.0], [68.8, 95.0], [68.9, 95.0], [69.0, 95.0], [69.1, 95.0], [69.2, 95.0], [69.3, 95.0], [69.4, 95.0], [69.5, 96.0], [69.6, 96.0], [69.7, 96.0], [69.8, 96.0], [69.9, 96.0], [70.0, 96.0], [70.1, 96.0], [70.2, 96.0], [70.3, 96.0], [70.4, 96.0], [70.5, 97.0], [70.6, 97.0], [70.7, 97.0], [70.8, 97.0], [70.9, 97.0], [71.0, 97.0], [71.1, 97.0], [71.2, 97.0], [71.3, 97.0], [71.4, 98.0], [71.5, 98.0], [71.6, 98.0], [71.7, 98.0], [71.8, 98.0], [71.9, 98.0], [72.0, 98.0], [72.1, 98.0], [72.2, 98.0], [72.3, 98.0], [72.4, 99.0], [72.5, 99.0], [72.6, 99.0], [72.7, 99.0], [72.8, 99.0], [72.9, 99.0], [73.0, 99.0], [73.1, 99.0], [73.2, 99.0], [73.3, 100.0], [73.4, 100.0], [73.5, 100.0], [73.6, 100.0], [73.7, 100.0], [73.8, 100.0], [73.9, 100.0], [74.0, 100.0], [74.1, 100.0], [74.2, 101.0], [74.3, 101.0], [74.4, 101.0], [74.5, 101.0], [74.6, 101.0], [74.7, 101.0], [74.8, 101.0], [74.9, 101.0], [75.0, 102.0], [75.1, 102.0], [75.2, 102.0], [75.3, 102.0], [75.4, 102.0], [75.5, 102.0], [75.6, 102.0], [75.7, 103.0], [75.8, 103.0], [75.9, 103.0], [76.0, 103.0], [76.1, 103.0], [76.2, 103.0], [76.3, 103.0], [76.4, 103.0], [76.5, 104.0], [76.6, 104.0], [76.7, 104.0], [76.8, 104.0], [76.9, 104.0], [77.0, 104.0], [77.1, 104.0], [77.2, 104.0], [77.3, 105.0], [77.4, 105.0], [77.5, 105.0], [77.6, 105.0], [77.7, 105.0], [77.8, 105.0], [77.9, 106.0], [78.0, 106.0], [78.1, 106.0], [78.2, 106.0], [78.3, 106.0], [78.4, 106.0], [78.5, 106.0], [78.6, 106.0], [78.7, 107.0], [78.8, 107.0], [78.9, 107.0], [79.0, 107.0], [79.1, 107.0], [79.2, 107.0], [79.3, 108.0], [79.4, 108.0], [79.5, 108.0], [79.6, 108.0], [79.7, 108.0], [79.8, 108.0], [79.9, 109.0], [80.0, 109.0], [80.1, 109.0], [80.2, 109.0], [80.3, 109.0], [80.4, 109.0], [80.5, 110.0], [80.6, 110.0], [80.7, 110.0], [80.8, 110.0], [80.9, 110.0], [81.0, 111.0], [81.1, 111.0], [81.2, 111.0], [81.3, 111.0], [81.4, 111.0], [81.5, 111.0], [81.6, 112.0], [81.7, 112.0], [81.8, 112.0], [81.9, 112.0], [82.0, 112.0], [82.1, 113.0], [82.2, 113.0], [82.3, 113.0], [82.4, 113.0], [82.5, 114.0], [82.6, 114.0], [82.7, 114.0], [82.8, 114.0], [82.9, 114.0], [83.0, 115.0], [83.1, 115.0], [83.2, 115.0], [83.3, 115.0], [83.4, 115.0], [83.5, 116.0], [83.6, 116.0], [83.7, 116.0], [83.8, 116.0], [83.9, 116.0], [84.0, 117.0], [84.1, 117.0], [84.2, 117.0], [84.3, 117.0], [84.4, 118.0], [84.5, 118.0], [84.6, 118.0], [84.7, 118.0], [84.8, 119.0], [84.9, 119.0], [85.0, 119.0], [85.1, 119.0], [85.2, 120.0], [85.3, 120.0], [85.4, 120.0], [85.5, 120.0], [85.6, 121.0], [85.7, 121.0], [85.8, 121.0], [85.9, 122.0], [86.0, 122.0], [86.1, 122.0], [86.2, 123.0], [86.3, 123.0], [86.4, 123.0], [86.5, 124.0], [86.6, 124.0], [86.7, 124.0], [86.8, 125.0], [86.9, 125.0], [87.0, 126.0], [87.1, 126.0], [87.2, 126.0], [87.3, 127.0], [87.4, 127.0], [87.5, 127.0], [87.6, 128.0], [87.7, 128.0], [87.8, 129.0], [87.9, 129.0], [88.0, 130.0], [88.1, 130.0], [88.2, 131.0], [88.3, 131.0], [88.4, 131.0], [88.5, 132.0], [88.6, 132.0], [88.7, 133.0], [88.8, 133.0], [88.9, 134.0], [89.0, 135.0], [89.1, 135.0], [89.2, 136.0], [89.3, 136.0], [89.4, 137.0], [89.5, 137.0], [89.6, 138.0], [89.7, 138.0], [89.8, 139.0], [89.9, 140.0], [90.0, 140.0], [90.1, 141.0], [90.2, 142.0], [90.3, 142.0], [90.4, 143.0], [90.5, 144.0], [90.6, 144.0], [90.7, 145.0], [90.8, 146.0], [90.9, 146.0], [91.0, 147.0], [91.1, 148.0], [91.2, 149.0], [91.3, 149.0], [91.4, 150.0], [91.5, 151.0], [91.6, 151.0], [91.7, 152.0], [91.8, 153.0], [91.9, 154.0], [92.0, 154.0], [92.1, 155.0], [92.2, 156.0], [92.3, 156.0], [92.4, 157.0], [92.5, 158.0], [92.6, 159.0], [92.7, 160.0], [92.8, 161.0], [92.9, 162.0], [93.0, 162.0], [93.1, 163.0], [93.2, 164.0], [93.3, 165.0], [93.4, 166.0], [93.5, 167.0], [93.6, 168.0], [93.7, 170.0], [93.8, 171.0], [93.9, 172.0], [94.0, 173.0], [94.1, 174.0], [94.2, 175.0], [94.3, 176.0], [94.4, 178.0], [94.5, 179.0], [94.6, 180.0], [94.7, 182.0], [94.8, 183.0], [94.9, 185.0], [95.0, 186.0], [95.1, 188.0], [95.2, 189.0], [95.3, 191.0], [95.4, 193.0], [95.5, 195.0], [95.6, 197.0], [95.7, 199.0], [95.8, 201.0], [95.9, 203.0], [96.0, 205.0], [96.1, 207.0], [96.2, 210.0], [96.3, 212.0], [96.4, 215.0], [96.5, 218.0], [96.6, 221.0], [96.7, 224.0], [96.8, 226.0], [96.9, 229.0], [97.0, 232.0], [97.1, 235.0], [97.2, 239.0], [97.3, 242.0], [97.4, 245.0], [97.5, 250.0], [97.6, 254.0], [97.7, 258.0], [97.8, 263.0], [97.9, 267.0], [98.0, 273.0], [98.1, 279.0], [98.2, 286.0], [98.3, 292.0], [98.4, 299.0], [98.5, 307.0], [98.6, 315.0], [98.7, 326.0], [98.8, 337.0], [98.9, 348.0], [99.0, 363.0], [99.1, 378.0], [99.2, 396.0], [99.3, 412.0], [99.4, 443.0], [99.5, 478.0], [99.6, 520.0], [99.7, 605.0], [99.8, 734.0], [99.9, 1025.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 4.0], [6.4, 4.0], [6.5, 4.0], [6.6, 4.0], [6.7, 4.0], [6.8, 4.0], [6.9, 4.0], [7.0, 4.0], [7.1, 4.0], [7.2, 4.0], [7.3, 4.0], [7.4, 5.0], [7.5, 5.0], [7.6, 5.0], [7.7, 5.0], [7.8, 5.0], [7.9, 5.0], [8.0, 5.0], [8.1, 5.0], [8.2, 5.0], [8.3, 5.0], [8.4, 5.0], [8.5, 6.0], [8.6, 6.0], [8.7, 6.0], [8.8, 6.0], [8.9, 6.0], [9.0, 6.0], [9.1, 6.0], [9.2, 6.0], [9.3, 6.0], [9.4, 6.0], [9.5, 7.0], [9.6, 7.0], [9.7, 7.0], [9.8, 7.0], [9.9, 7.0], [10.0, 7.0], [10.1, 7.0], [10.2, 7.0], [10.3, 7.0], [10.4, 7.0], [10.5, 8.0], [10.6, 8.0], [10.7, 8.0], [10.8, 8.0], [10.9, 8.0], [11.0, 8.0], [11.1, 8.0], [11.2, 8.0], [11.3, 8.0], [11.4, 9.0], [11.5, 9.0], [11.6, 9.0], [11.7, 9.0], [11.8, 9.0], [11.9, 9.0], [12.0, 9.0], [12.1, 9.0], [12.2, 9.0], [12.3, 9.0], [12.4, 10.0], [12.5, 10.0], [12.6, 10.0], [12.7, 10.0], [12.8, 10.0], [12.9, 10.0], [13.0, 10.0], [13.1, 10.0], [13.2, 11.0], [13.3, 11.0], [13.4, 11.0], [13.5, 11.0], [13.6, 11.0], [13.7, 11.0], [13.8, 11.0], [13.9, 11.0], [14.0, 12.0], [14.1, 12.0], [14.2, 12.0], [14.3, 12.0], [14.4, 12.0], [14.5, 12.0], [14.6, 12.0], [14.7, 13.0], [14.8, 13.0], [14.9, 13.0], [15.0, 13.0], [15.1, 13.0], [15.2, 13.0], [15.3, 13.0], [15.4, 14.0], [15.5, 14.0], [15.6, 14.0], [15.7, 14.0], [15.8, 14.0], [15.9, 14.0], [16.0, 14.0], [16.1, 15.0], [16.2, 15.0], [16.3, 15.0], [16.4, 15.0], [16.5, 15.0], [16.6, 15.0], [16.7, 15.0], [16.8, 16.0], [16.9, 16.0], [17.0, 16.0], [17.1, 16.0], [17.2, 16.0], [17.3, 16.0], [17.4, 16.0], [17.5, 16.0], [17.6, 17.0], [17.7, 17.0], [17.8, 17.0], [17.9, 17.0], [18.0, 17.0], [18.1, 17.0], [18.2, 17.0], [18.3, 18.0], [18.4, 18.0], [18.5, 18.0], [18.6, 18.0], [18.7, 18.0], [18.8, 18.0], [18.9, 19.0], [19.0, 19.0], [19.1, 19.0], [19.2, 19.0], [19.3, 19.0], [19.4, 19.0], [19.5, 19.0], [19.6, 20.0], [19.7, 20.0], [19.8, 20.0], [19.9, 20.0], [20.0, 20.0], [20.1, 20.0], [20.2, 21.0], [20.3, 21.0], [20.4, 21.0], [20.5, 21.0], [20.6, 21.0], [20.7, 21.0], [20.8, 22.0], [20.9, 22.0], [21.0, 22.0], [21.1, 22.0], [21.2, 22.0], [21.3, 22.0], [21.4, 23.0], [21.5, 23.0], [21.6, 23.0], [21.7, 23.0], [21.8, 23.0], [21.9, 23.0], [22.0, 24.0], [22.1, 24.0], [22.2, 24.0], [22.3, 24.0], [22.4, 24.0], [22.5, 24.0], [22.6, 25.0], [22.7, 25.0], [22.8, 25.0], [22.9, 25.0], [23.0, 25.0], [23.1, 25.0], [23.2, 26.0], [23.3, 26.0], [23.4, 26.0], [23.5, 26.0], [23.6, 26.0], [23.7, 26.0], [23.8, 27.0], [23.9, 27.0], [24.0, 27.0], [24.1, 27.0], [24.2, 27.0], [24.3, 27.0], [24.4, 27.0], [24.5, 28.0], [24.6, 28.0], [24.7, 28.0], [24.8, 28.0], [24.9, 28.0], [25.0, 29.0], [25.1, 29.0], [25.2, 29.0], [25.3, 29.0], [25.4, 29.0], [25.5, 30.0], [25.6, 30.0], [25.7, 30.0], [25.8, 30.0], [25.9, 30.0], [26.0, 30.0], [26.1, 31.0], [26.2, 31.0], [26.3, 31.0], [26.4, 31.0], [26.5, 31.0], [26.6, 32.0], [26.7, 32.0], [26.8, 32.0], [26.9, 32.0], [27.0, 32.0], [27.1, 32.0], [27.2, 33.0], [27.3, 33.0], [27.4, 33.0], [27.5, 33.0], [27.6, 33.0], [27.7, 33.0], [27.8, 34.0], [27.9, 34.0], [28.0, 34.0], [28.1, 34.0], [28.2, 34.0], [28.3, 35.0], [28.4, 35.0], [28.5, 35.0], [28.6, 35.0], [28.7, 35.0], [28.8, 36.0], [28.9, 36.0], [29.0, 36.0], [29.1, 36.0], [29.2, 36.0], [29.3, 37.0], [29.4, 37.0], [29.5, 37.0], [29.6, 37.0], [29.7, 37.0], [29.8, 37.0], [29.9, 38.0], [30.0, 38.0], [30.1, 38.0], [30.2, 38.0], [30.3, 38.0], [30.4, 39.0], [30.5, 39.0], [30.6, 39.0], [30.7, 39.0], [30.8, 39.0], [30.9, 40.0], [31.0, 40.0], [31.1, 40.0], [31.2, 40.0], [31.3, 40.0], [31.4, 41.0], [31.5, 41.0], [31.6, 41.0], [31.7, 41.0], [31.8, 41.0], [31.9, 41.0], [32.0, 42.0], [32.1, 42.0], [32.2, 42.0], [32.3, 42.0], [32.4, 42.0], [32.5, 43.0], [32.6, 43.0], [32.7, 43.0], [32.8, 43.0], [32.9, 43.0], [33.0, 43.0], [33.1, 44.0], [33.2, 44.0], [33.3, 44.0], [33.4, 44.0], [33.5, 45.0], [33.6, 45.0], [33.7, 45.0], [33.8, 45.0], [33.9, 45.0], [34.0, 46.0], [34.1, 46.0], [34.2, 46.0], [34.3, 46.0], [34.4, 46.0], [34.5, 47.0], [34.6, 47.0], [34.7, 47.0], [34.8, 47.0], [34.9, 47.0], [35.0, 48.0], [35.1, 48.0], [35.2, 48.0], [35.3, 48.0], [35.4, 48.0], [35.5, 49.0], [35.6, 49.0], [35.7, 49.0], [35.8, 49.0], [35.9, 49.0], [36.0, 49.0], [36.1, 50.0], [36.2, 50.0], [36.3, 50.0], [36.4, 50.0], [36.5, 51.0], [36.6, 51.0], [36.7, 51.0], [36.8, 51.0], [36.9, 51.0], [37.0, 52.0], [37.1, 52.0], [37.2, 52.0], [37.3, 52.0], [37.4, 52.0], [37.5, 53.0], [37.6, 53.0], [37.7, 53.0], [37.8, 53.0], [37.9, 54.0], [38.0, 54.0], [38.1, 54.0], [38.2, 54.0], [38.3, 54.0], [38.4, 55.0], [38.5, 55.0], [38.6, 55.0], [38.7, 55.0], [38.8, 55.0], [38.9, 56.0], [39.0, 56.0], [39.1, 56.0], [39.2, 56.0], [39.3, 56.0], [39.4, 57.0], [39.5, 57.0], [39.6, 57.0], [39.7, 57.0], [39.8, 57.0], [39.9, 57.0], [40.0, 58.0], [40.1, 58.0], [40.2, 58.0], [40.3, 58.0], [40.4, 58.0], [40.5, 59.0], [40.6, 59.0], [40.7, 59.0], [40.8, 59.0], [40.9, 59.0], [41.0, 60.0], [41.1, 60.0], [41.2, 60.0], [41.3, 60.0], [41.4, 60.0], [41.5, 61.0], [41.6, 61.0], [41.7, 61.0], [41.8, 61.0], [41.9, 61.0], [42.0, 61.0], [42.1, 62.0], [42.2, 62.0], [42.3, 62.0], [42.4, 62.0], [42.5, 62.0], [42.6, 63.0], [42.7, 63.0], [42.8, 63.0], [42.9, 63.0], [43.0, 63.0], [43.1, 63.0], [43.2, 64.0], [43.3, 64.0], [43.4, 64.0], [43.5, 64.0], [43.6, 64.0], [43.7, 64.0], [43.8, 65.0], [43.9, 65.0], [44.0, 65.0], [44.1, 65.0], [44.2, 65.0], [44.3, 65.0], [44.4, 66.0], [44.5, 66.0], [44.6, 66.0], [44.7, 66.0], [44.8, 66.0], [44.9, 66.0], [45.0, 67.0], [45.1, 67.0], [45.2, 67.0], [45.3, 67.0], [45.4, 67.0], [45.5, 67.0], [45.6, 68.0], [45.7, 68.0], [45.8, 68.0], [45.9, 68.0], [46.0, 68.0], [46.1, 68.0], [46.2, 69.0], [46.3, 69.0], [46.4, 69.0], [46.5, 69.0], [46.6, 69.0], [46.7, 69.0], [46.8, 70.0], [46.9, 70.0], [47.0, 70.0], [47.1, 70.0], [47.2, 70.0], [47.3, 70.0], [47.4, 71.0], [47.5, 71.0], [47.6, 71.0], [47.7, 71.0], [47.8, 71.0], [47.9, 71.0], [48.0, 72.0], [48.1, 72.0], [48.2, 72.0], [48.3, 72.0], [48.4, 72.0], [48.5, 72.0], [48.6, 72.0], [48.7, 73.0], [48.8, 73.0], [48.9, 73.0], [49.0, 73.0], [49.1, 73.0], [49.2, 73.0], [49.3, 73.0], [49.4, 74.0], [49.5, 74.0], [49.6, 74.0], [49.7, 74.0], [49.8, 74.0], [49.9, 74.0], [50.0, 75.0], [50.1, 75.0], [50.2, 75.0], [50.3, 75.0], [50.4, 75.0], [50.5, 75.0], [50.6, 75.0], [50.7, 76.0], [50.8, 76.0], [50.9, 76.0], [51.0, 76.0], [51.1, 76.0], [51.2, 76.0], [51.3, 77.0], [51.4, 77.0], [51.5, 77.0], [51.6, 77.0], [51.7, 77.0], [51.8, 77.0], [51.9, 77.0], [52.0, 78.0], [52.1, 78.0], [52.2, 78.0], [52.3, 78.0], [52.4, 78.0], [52.5, 78.0], [52.6, 78.0], [52.7, 79.0], [52.8, 79.0], [52.9, 79.0], [53.0, 79.0], [53.1, 79.0], [53.2, 79.0], [53.3, 79.0], [53.4, 80.0], [53.5, 80.0], [53.6, 80.0], [53.7, 80.0], [53.8, 80.0], [53.9, 80.0], [54.0, 80.0], [54.1, 80.0], [54.2, 80.0], [54.3, 81.0], [54.4, 81.0], [54.5, 81.0], [54.6, 81.0], [54.7, 81.0], [54.8, 81.0], [54.9, 81.0], [55.0, 81.0], [55.1, 82.0], [55.2, 82.0], [55.3, 82.0], [55.4, 82.0], [55.5, 82.0], [55.6, 82.0], [55.7, 82.0], [55.8, 82.0], [55.9, 83.0], [56.0, 83.0], [56.1, 83.0], [56.2, 83.0], [56.3, 83.0], [56.4, 83.0], [56.5, 83.0], [56.6, 83.0], [56.7, 84.0], [56.8, 84.0], [56.9, 84.0], [57.0, 84.0], [57.1, 84.0], [57.2, 84.0], [57.3, 84.0], [57.4, 84.0], [57.5, 85.0], [57.6, 85.0], [57.7, 85.0], [57.8, 85.0], [57.9, 85.0], [58.0, 85.0], [58.1, 85.0], [58.2, 85.0], [58.3, 85.0], [58.4, 86.0], [58.5, 86.0], [58.6, 86.0], [58.7, 86.0], [58.8, 86.0], [58.9, 86.0], [59.0, 86.0], [59.1, 86.0], [59.2, 86.0], [59.3, 87.0], [59.4, 87.0], [59.5, 87.0], [59.6, 87.0], [59.7, 87.0], [59.8, 87.0], [59.9, 87.0], [60.0, 87.0], [60.1, 88.0], [60.2, 88.0], [60.3, 88.0], [60.4, 88.0], [60.5, 88.0], [60.6, 88.0], [60.7, 88.0], [60.8, 88.0], [60.9, 88.0], [61.0, 89.0], [61.1, 89.0], [61.2, 89.0], [61.3, 89.0], [61.4, 89.0], [61.5, 89.0], [61.6, 89.0], [61.7, 89.0], [61.8, 89.0], [61.9, 89.0], [62.0, 90.0], [62.1, 90.0], [62.2, 90.0], [62.3, 90.0], [62.4, 90.0], [62.5, 90.0], [62.6, 90.0], [62.7, 90.0], [62.8, 90.0], [62.9, 91.0], [63.0, 91.0], [63.1, 91.0], [63.2, 91.0], [63.3, 91.0], [63.4, 91.0], [63.5, 91.0], [63.6, 91.0], [63.7, 91.0], [63.8, 92.0], [63.9, 92.0], [64.0, 92.0], [64.1, 92.0], [64.2, 92.0], [64.3, 92.0], [64.4, 92.0], [64.5, 92.0], [64.6, 92.0], [64.7, 92.0], [64.8, 93.0], [64.9, 93.0], [65.0, 93.0], [65.1, 93.0], [65.2, 93.0], [65.3, 93.0], [65.4, 93.0], [65.5, 93.0], [65.6, 93.0], [65.7, 93.0], [65.8, 93.0], [65.9, 94.0], [66.0, 94.0], [66.1, 94.0], [66.2, 94.0], [66.3, 94.0], [66.4, 94.0], [66.5, 94.0], [66.6, 94.0], [66.7, 94.0], [66.8, 95.0], [66.9, 95.0], [67.0, 95.0], [67.1, 95.0], [67.2, 95.0], [67.3, 95.0], [67.4, 95.0], [67.5, 95.0], [67.6, 95.0], [67.7, 95.0], [67.8, 96.0], [67.9, 96.0], [68.0, 96.0], [68.1, 96.0], [68.2, 96.0], [68.3, 96.0], [68.4, 96.0], [68.5, 96.0], [68.6, 96.0], [68.7, 96.0], [68.8, 97.0], [68.9, 97.0], [69.0, 97.0], [69.1, 97.0], [69.2, 97.0], [69.3, 97.0], [69.4, 97.0], [69.5, 97.0], [69.6, 97.0], [69.7, 97.0], [69.8, 98.0], [69.9, 98.0], [70.0, 98.0], [70.1, 98.0], [70.2, 98.0], [70.3, 98.0], [70.4, 98.0], [70.5, 98.0], [70.6, 98.0], [70.7, 98.0], [70.8, 99.0], [70.9, 99.0], [71.0, 99.0], [71.1, 99.0], [71.2, 99.0], [71.3, 99.0], [71.4, 99.0], [71.5, 99.0], [71.6, 99.0], [71.7, 100.0], [71.8, 100.0], [71.9, 100.0], [72.0, 100.0], [72.1, 100.0], [72.2, 100.0], [72.3, 100.0], [72.4, 100.0], [72.5, 100.0], [72.6, 100.0], [72.7, 101.0], [72.8, 101.0], [72.9, 101.0], [73.0, 101.0], [73.1, 101.0], [73.2, 101.0], [73.3, 101.0], [73.4, 101.0], [73.5, 101.0], [73.6, 102.0], [73.7, 102.0], [73.8, 102.0], [73.9, 102.0], [74.0, 102.0], [74.1, 102.0], [74.2, 102.0], [74.3, 102.0], [74.4, 102.0], [74.5, 103.0], [74.6, 103.0], [74.7, 103.0], [74.8, 103.0], [74.9, 103.0], [75.0, 103.0], [75.1, 103.0], [75.2, 103.0], [75.3, 104.0], [75.4, 104.0], [75.5, 104.0], [75.6, 104.0], [75.7, 104.0], [75.8, 104.0], [75.9, 104.0], [76.0, 104.0], [76.1, 105.0], [76.2, 105.0], [76.3, 105.0], [76.4, 105.0], [76.5, 105.0], [76.6, 105.0], [76.7, 105.0], [76.8, 106.0], [76.9, 106.0], [77.0, 106.0], [77.1, 106.0], [77.2, 106.0], [77.3, 106.0], [77.4, 106.0], [77.5, 106.0], [77.6, 107.0], [77.7, 107.0], [77.8, 107.0], [77.9, 107.0], [78.0, 107.0], [78.1, 107.0], [78.2, 107.0], [78.3, 108.0], [78.4, 108.0], [78.5, 108.0], [78.6, 108.0], [78.7, 108.0], [78.8, 108.0], [78.9, 108.0], [79.0, 109.0], [79.1, 109.0], [79.2, 109.0], [79.3, 109.0], [79.4, 109.0], [79.5, 109.0], [79.6, 110.0], [79.7, 110.0], [79.8, 110.0], [79.9, 110.0], [80.0, 110.0], [80.1, 110.0], [80.2, 111.0], [80.3, 111.0], [80.4, 111.0], [80.5, 111.0], [80.6, 111.0], [80.7, 111.0], [80.8, 112.0], [80.9, 112.0], [81.0, 112.0], [81.1, 112.0], [81.2, 112.0], [81.3, 112.0], [81.4, 113.0], [81.5, 113.0], [81.6, 113.0], [81.7, 113.0], [81.8, 113.0], [81.9, 114.0], [82.0, 114.0], [82.1, 114.0], [82.2, 114.0], [82.3, 114.0], [82.4, 115.0], [82.5, 115.0], [82.6, 115.0], [82.7, 115.0], [82.8, 115.0], [82.9, 115.0], [83.0, 116.0], [83.1, 116.0], [83.2, 116.0], [83.3, 116.0], [83.4, 116.0], [83.5, 117.0], [83.6, 117.0], [83.7, 117.0], [83.8, 117.0], [83.9, 117.0], [84.0, 118.0], [84.1, 118.0], [84.2, 118.0], [84.3, 118.0], [84.4, 119.0], [84.5, 119.0], [84.6, 119.0], [84.7, 119.0], [84.8, 119.0], [84.9, 120.0], [85.0, 120.0], [85.1, 120.0], [85.2, 120.0], [85.3, 121.0], [85.4, 121.0], [85.5, 121.0], [85.6, 121.0], [85.7, 122.0], [85.8, 122.0], [85.9, 122.0], [86.0, 122.0], [86.1, 123.0], [86.2, 123.0], [86.3, 123.0], [86.4, 124.0], [86.5, 124.0], [86.6, 124.0], [86.7, 125.0], [86.8, 125.0], [86.9, 125.0], [87.0, 126.0], [87.1, 126.0], [87.2, 127.0], [87.3, 127.0], [87.4, 127.0], [87.5, 128.0], [87.6, 128.0], [87.7, 128.0], [87.8, 129.0], [87.9, 129.0], [88.0, 130.0], [88.1, 130.0], [88.2, 131.0], [88.3, 131.0], [88.4, 131.0], [88.5, 132.0], [88.6, 132.0], [88.7, 133.0], [88.8, 133.0], [88.9, 134.0], [89.0, 134.0], [89.1, 135.0], [89.2, 135.0], [89.3, 136.0], [89.4, 136.0], [89.5, 137.0], [89.6, 137.0], [89.7, 138.0], [89.8, 138.0], [89.9, 139.0], [90.0, 139.0], [90.1, 140.0], [90.2, 140.0], [90.3, 141.0], [90.4, 142.0], [90.5, 142.0], [90.6, 143.0], [90.7, 144.0], [90.8, 144.0], [90.9, 145.0], [91.0, 145.0], [91.1, 146.0], [91.2, 147.0], [91.3, 148.0], [91.4, 148.0], [91.5, 149.0], [91.6, 150.0], [91.7, 151.0], [91.8, 152.0], [91.9, 152.0], [92.0, 153.0], [92.1, 154.0], [92.2, 155.0], [92.3, 155.0], [92.4, 156.0], [92.5, 157.0], [92.6, 158.0], [92.7, 159.0], [92.8, 159.0], [92.9, 160.0], [93.0, 161.0], [93.1, 162.0], [93.2, 163.0], [93.3, 164.0], [93.4, 165.0], [93.5, 166.0], [93.6, 168.0], [93.7, 169.0], [93.8, 170.0], [93.9, 171.0], [94.0, 172.0], [94.1, 174.0], [94.2, 175.0], [94.3, 176.0], [94.4, 177.0], [94.5, 178.0], [94.6, 180.0], [94.7, 181.0], [94.8, 183.0], [94.9, 184.0], [95.0, 186.0], [95.1, 188.0], [95.2, 190.0], [95.3, 192.0], [95.4, 194.0], [95.5, 196.0], [95.6, 198.0], [95.7, 200.0], [95.8, 202.0], [95.9, 204.0], [96.0, 207.0], [96.1, 209.0], [96.2, 212.0], [96.3, 215.0], [96.4, 218.0], [96.5, 221.0], [96.6, 223.0], [96.7, 226.0], [96.8, 229.0], [96.9, 232.0], [97.0, 235.0], [97.1, 239.0], [97.2, 242.0], [97.3, 246.0], [97.4, 250.0], [97.5, 254.0], [97.6, 258.0], [97.7, 262.0], [97.8, 266.0], [97.9, 272.0], [98.0, 278.0], [98.1, 284.0], [98.2, 291.0], [98.3, 299.0], [98.4, 309.0], [98.5, 318.0], [98.6, 327.0], [98.7, 337.0], [98.8, 347.0], [98.9, 359.0], [99.0, 376.0], [99.1, 392.0], [99.2, 412.0], [99.3, 437.0], [99.4, 470.0], [99.5, 506.0], [99.6, 565.0], [99.7, 644.0], [99.8, 794.0], [99.9, 1019.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 3.0], [1.6, 3.0], [1.7, 3.0], [1.8, 3.0], [1.9, 3.0], [2.0, 3.0], [2.1, 3.0], [2.2, 4.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 5.0], [2.8, 5.0], [2.9, 5.0], [3.0, 5.0], [3.1, 5.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 6.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 8.0], [4.2, 8.0], [4.3, 8.0], [4.4, 8.0], [4.5, 9.0], [4.6, 9.0], [4.7, 9.0], [4.8, 10.0], [4.9, 10.0], [5.0, 10.0], [5.1, 10.0], [5.2, 11.0], [5.3, 11.0], [5.4, 11.0], [5.5, 12.0], [5.6, 12.0], [5.7, 12.0], [5.8, 13.0], [5.9, 13.0], [6.0, 13.0], [6.1, 13.0], [6.2, 14.0], [6.3, 14.0], [6.4, 14.0], [6.5, 15.0], [6.6, 15.0], [6.7, 15.0], [6.8, 16.0], [6.9, 16.0], [7.0, 16.0], [7.1, 17.0], [7.2, 17.0], [7.3, 17.0], [7.4, 18.0], [7.5, 18.0], [7.6, 18.0], [7.7, 19.0], [7.8, 19.0], [7.9, 19.0], [8.0, 20.0], [8.1, 20.0], [8.2, 21.0], [8.3, 21.0], [8.4, 21.0], [8.5, 22.0], [8.6, 22.0], [8.7, 22.0], [8.8, 23.0], [8.9, 23.0], [9.0, 23.0], [9.1, 24.0], [9.2, 24.0], [9.3, 25.0], [9.4, 25.0], [9.5, 25.0], [9.6, 26.0], [9.7, 26.0], [9.8, 27.0], [9.9, 27.0], [10.0, 27.0], [10.1, 28.0], [10.2, 28.0], [10.3, 28.0], [10.4, 29.0], [10.5, 29.0], [10.6, 30.0], [10.7, 30.0], [10.8, 30.0], [10.9, 31.0], [11.0, 31.0], [11.1, 32.0], [11.2, 32.0], [11.3, 32.0], [11.4, 33.0], [11.5, 33.0], [11.6, 33.0], [11.7, 34.0], [11.8, 34.0], [11.9, 35.0], [12.0, 35.0], [12.1, 35.0], [12.2, 36.0], [12.3, 36.0], [12.4, 37.0], [12.5, 37.0], [12.6, 38.0], [12.7, 38.0], [12.8, 39.0], [12.9, 39.0], [13.0, 39.0], [13.1, 40.0], [13.2, 40.0], [13.3, 41.0], [13.4, 41.0], [13.5, 41.0], [13.6, 42.0], [13.7, 42.0], [13.8, 43.0], [13.9, 43.0], [14.0, 43.0], [14.1, 44.0], [14.2, 44.0], [14.3, 45.0], [14.4, 45.0], [14.5, 45.0], [14.6, 46.0], [14.7, 46.0], [14.8, 47.0], [14.9, 47.0], [15.0, 48.0], [15.1, 48.0], [15.2, 48.0], [15.3, 49.0], [15.4, 49.0], [15.5, 50.0], [15.6, 50.0], [15.7, 50.0], [15.8, 51.0], [15.9, 51.0], [16.0, 52.0], [16.1, 52.0], [16.2, 53.0], [16.3, 53.0], [16.4, 53.0], [16.5, 54.0], [16.6, 54.0], [16.7, 55.0], [16.8, 55.0], [16.9, 56.0], [17.0, 56.0], [17.1, 56.0], [17.2, 57.0], [17.3, 57.0], [17.4, 58.0], [17.5, 58.0], [17.6, 58.0], [17.7, 59.0], [17.8, 59.0], [17.9, 60.0], [18.0, 60.0], [18.1, 60.0], [18.2, 61.0], [18.3, 61.0], [18.4, 62.0], [18.5, 62.0], [18.6, 63.0], [18.7, 63.0], [18.8, 63.0], [18.9, 64.0], [19.0, 64.0], [19.1, 65.0], [19.2, 65.0], [19.3, 65.0], [19.4, 66.0], [19.5, 66.0], [19.6, 67.0], [19.7, 67.0], [19.8, 68.0], [19.9, 68.0], [20.0, 68.0], [20.1, 69.0], [20.2, 69.0], [20.3, 70.0], [20.4, 70.0], [20.5, 71.0], [20.6, 71.0], [20.7, 71.0], [20.8, 72.0], [20.9, 72.0], [21.0, 73.0], [21.1, 73.0], [21.2, 73.0], [21.3, 74.0], [21.4, 74.0], [21.5, 75.0], [21.6, 75.0], [21.7, 76.0], [21.8, 76.0], [21.9, 76.0], [22.0, 77.0], [22.1, 77.0], [22.2, 78.0], [22.3, 78.0], [22.4, 78.0], [22.5, 79.0], [22.6, 79.0], [22.7, 80.0], [22.8, 80.0], [22.9, 81.0], [23.0, 81.0], [23.1, 81.0], [23.2, 82.0], [23.3, 82.0], [23.4, 83.0], [23.5, 83.0], [23.6, 83.0], [23.7, 84.0], [23.8, 84.0], [23.9, 85.0], [24.0, 85.0], [24.1, 85.0], [24.2, 86.0], [24.3, 86.0], [24.4, 87.0], [24.5, 87.0], [24.6, 87.0], [24.7, 88.0], [24.8, 88.0], [24.9, 89.0], [25.0, 89.0], [25.1, 90.0], [25.2, 90.0], [25.3, 90.0], [25.4, 91.0], [25.5, 91.0], [25.6, 92.0], [25.7, 92.0], [25.8, 92.0], [25.9, 93.0], [26.0, 93.0], [26.1, 93.0], [26.2, 94.0], [26.3, 94.0], [26.4, 95.0], [26.5, 95.0], [26.6, 95.0], [26.7, 96.0], [26.8, 96.0], [26.9, 96.0], [27.0, 97.0], [27.1, 97.0], [27.2, 97.0], [27.3, 98.0], [27.4, 98.0], [27.5, 99.0], [27.6, 99.0], [27.7, 99.0], [27.8, 100.0], [27.9, 100.0], [28.0, 100.0], [28.1, 101.0], [28.2, 101.0], [28.3, 101.0], [28.4, 102.0], [28.5, 102.0], [28.6, 102.0], [28.7, 103.0], [28.8, 103.0], [28.9, 103.0], [29.0, 104.0], [29.1, 104.0], [29.2, 104.0], [29.3, 105.0], [29.4, 105.0], [29.5, 105.0], [29.6, 106.0], [29.7, 106.0], [29.8, 106.0], [29.9, 106.0], [30.0, 107.0], [30.1, 107.0], [30.2, 107.0], [30.3, 108.0], [30.4, 108.0], [30.5, 108.0], [30.6, 109.0], [30.7, 109.0], [30.8, 109.0], [30.9, 110.0], [31.0, 110.0], [31.1, 110.0], [31.2, 111.0], [31.3, 111.0], [31.4, 111.0], [31.5, 112.0], [31.6, 112.0], [31.7, 112.0], [31.8, 113.0], [31.9, 113.0], [32.0, 113.0], [32.1, 114.0], [32.2, 114.0], [32.3, 114.0], [32.4, 115.0], [32.5, 115.0], [32.6, 115.0], [32.7, 115.0], [32.8, 116.0], [32.9, 116.0], [33.0, 116.0], [33.1, 117.0], [33.2, 117.0], [33.3, 117.0], [33.4, 118.0], [33.5, 118.0], [33.6, 118.0], [33.7, 118.0], [33.8, 119.0], [33.9, 119.0], [34.0, 119.0], [34.1, 120.0], [34.2, 120.0], [34.3, 120.0], [34.4, 121.0], [34.5, 121.0], [34.6, 121.0], [34.7, 121.0], [34.8, 122.0], [34.9, 122.0], [35.0, 122.0], [35.1, 123.0], [35.2, 123.0], [35.3, 123.0], [35.4, 123.0], [35.5, 124.0], [35.6, 124.0], [35.7, 124.0], [35.8, 125.0], [35.9, 125.0], [36.0, 125.0], [36.1, 126.0], [36.2, 126.0], [36.3, 126.0], [36.4, 126.0], [36.5, 127.0], [36.6, 127.0], [36.7, 127.0], [36.8, 128.0], [36.9, 128.0], [37.0, 128.0], [37.1, 128.0], [37.2, 129.0], [37.3, 129.0], [37.4, 129.0], [37.5, 130.0], [37.6, 130.0], [37.7, 130.0], [37.8, 130.0], [37.9, 131.0], [38.0, 131.0], [38.1, 131.0], [38.2, 132.0], [38.3, 132.0], [38.4, 132.0], [38.5, 133.0], [38.6, 133.0], [38.7, 133.0], [38.8, 133.0], [38.9, 134.0], [39.0, 134.0], [39.1, 134.0], [39.2, 135.0], [39.3, 135.0], [39.4, 135.0], [39.5, 135.0], [39.6, 136.0], [39.7, 136.0], [39.8, 136.0], [39.9, 137.0], [40.0, 137.0], [40.1, 137.0], [40.2, 137.0], [40.3, 138.0], [40.4, 138.0], [40.5, 138.0], [40.6, 139.0], [40.7, 139.0], [40.8, 139.0], [40.9, 139.0], [41.0, 140.0], [41.1, 140.0], [41.2, 140.0], [41.3, 140.0], [41.4, 141.0], [41.5, 141.0], [41.6, 141.0], [41.7, 142.0], [41.8, 142.0], [41.9, 142.0], [42.0, 142.0], [42.1, 143.0], [42.2, 143.0], [42.3, 143.0], [42.4, 143.0], [42.5, 144.0], [42.6, 144.0], [42.7, 144.0], [42.8, 144.0], [42.9, 145.0], [43.0, 145.0], [43.1, 145.0], [43.2, 145.0], [43.3, 146.0], [43.4, 146.0], [43.5, 146.0], [43.6, 147.0], [43.7, 147.0], [43.8, 147.0], [43.9, 147.0], [44.0, 147.0], [44.1, 148.0], [44.2, 148.0], [44.3, 148.0], [44.4, 148.0], [44.5, 149.0], [44.6, 149.0], [44.7, 149.0], [44.8, 149.0], [44.9, 150.0], [45.0, 150.0], [45.1, 150.0], [45.2, 150.0], [45.3, 151.0], [45.4, 151.0], [45.5, 151.0], [45.6, 151.0], [45.7, 151.0], [45.8, 152.0], [45.9, 152.0], [46.0, 152.0], [46.1, 152.0], [46.2, 153.0], [46.3, 153.0], [46.4, 153.0], [46.5, 153.0], [46.6, 153.0], [46.7, 154.0], [46.8, 154.0], [46.9, 154.0], [47.0, 154.0], [47.1, 155.0], [47.2, 155.0], [47.3, 155.0], [47.4, 155.0], [47.5, 155.0], [47.6, 156.0], [47.7, 156.0], [47.8, 156.0], [47.9, 156.0], [48.0, 157.0], [48.1, 157.0], [48.2, 157.0], [48.3, 157.0], [48.4, 157.0], [48.5, 158.0], [48.6, 158.0], [48.7, 158.0], [48.8, 158.0], [48.9, 159.0], [49.0, 159.0], [49.1, 159.0], [49.2, 159.0], [49.3, 159.0], [49.4, 160.0], [49.5, 160.0], [49.6, 160.0], [49.7, 160.0], [49.8, 160.0], [49.9, 161.0], [50.0, 161.0], [50.1, 161.0], [50.2, 161.0], [50.3, 162.0], [50.4, 162.0], [50.5, 162.0], [50.6, 162.0], [50.7, 162.0], [50.8, 163.0], [50.9, 163.0], [51.0, 163.0], [51.1, 163.0], [51.2, 163.0], [51.3, 164.0], [51.4, 164.0], [51.5, 164.0], [51.6, 164.0], [51.7, 164.0], [51.8, 164.0], [51.9, 165.0], [52.0, 165.0], [52.1, 165.0], [52.2, 165.0], [52.3, 165.0], [52.4, 166.0], [52.5, 166.0], [52.6, 166.0], [52.7, 166.0], [52.8, 166.0], [52.9, 167.0], [53.0, 167.0], [53.1, 167.0], [53.2, 167.0], [53.3, 167.0], [53.4, 168.0], [53.5, 168.0], [53.6, 168.0], [53.7, 168.0], [53.8, 168.0], [53.9, 168.0], [54.0, 169.0], [54.1, 169.0], [54.2, 169.0], [54.3, 169.0], [54.4, 169.0], [54.5, 170.0], [54.6, 170.0], [54.7, 170.0], [54.8, 170.0], [54.9, 170.0], [55.0, 171.0], [55.1, 171.0], [55.2, 171.0], [55.3, 171.0], [55.4, 171.0], [55.5, 171.0], [55.6, 172.0], [55.7, 172.0], [55.8, 172.0], [55.9, 172.0], [56.0, 172.0], [56.1, 173.0], [56.2, 173.0], [56.3, 173.0], [56.4, 173.0], [56.5, 173.0], [56.6, 173.0], [56.7, 174.0], [56.8, 174.0], [56.9, 174.0], [57.0, 174.0], [57.1, 174.0], [57.2, 175.0], [57.3, 175.0], [57.4, 175.0], [57.5, 175.0], [57.6, 175.0], [57.7, 176.0], [57.8, 176.0], [57.9, 176.0], [58.0, 176.0], [58.1, 176.0], [58.2, 176.0], [58.3, 177.0], [58.4, 177.0], [58.5, 177.0], [58.6, 177.0], [58.7, 177.0], [58.8, 177.0], [58.9, 178.0], [59.0, 178.0], [59.1, 178.0], [59.2, 178.0], [59.3, 178.0], [59.4, 179.0], [59.5, 179.0], [59.6, 179.0], [59.7, 179.0], [59.8, 179.0], [59.9, 179.0], [60.0, 180.0], [60.1, 180.0], [60.2, 180.0], [60.3, 180.0], [60.4, 180.0], [60.5, 181.0], [60.6, 181.0], [60.7, 181.0], [60.8, 181.0], [60.9, 181.0], [61.0, 182.0], [61.1, 182.0], [61.2, 182.0], [61.3, 182.0], [61.4, 182.0], [61.5, 183.0], [61.6, 183.0], [61.7, 183.0], [61.8, 183.0], [61.9, 183.0], [62.0, 183.0], [62.1, 184.0], [62.2, 184.0], [62.3, 184.0], [62.4, 184.0], [62.5, 184.0], [62.6, 185.0], [62.7, 185.0], [62.8, 185.0], [62.9, 185.0], [63.0, 185.0], [63.1, 186.0], [63.2, 186.0], [63.3, 186.0], [63.4, 186.0], [63.5, 186.0], [63.6, 186.0], [63.7, 187.0], [63.8, 187.0], [63.9, 187.0], [64.0, 187.0], [64.1, 187.0], [64.2, 188.0], [64.3, 188.0], [64.4, 188.0], [64.5, 188.0], [64.6, 188.0], [64.7, 188.0], [64.8, 189.0], [64.9, 189.0], [65.0, 189.0], [65.1, 189.0], [65.2, 189.0], [65.3, 189.0], [65.4, 190.0], [65.5, 190.0], [65.6, 190.0], [65.7, 190.0], [65.8, 190.0], [65.9, 191.0], [66.0, 191.0], [66.1, 191.0], [66.2, 191.0], [66.3, 191.0], [66.4, 191.0], [66.5, 192.0], [66.6, 192.0], [66.7, 192.0], [66.8, 192.0], [66.9, 192.0], [67.0, 192.0], [67.1, 193.0], [67.2, 193.0], [67.3, 193.0], [67.4, 193.0], [67.5, 193.0], [67.6, 193.0], [67.7, 194.0], [67.8, 194.0], [67.9, 194.0], [68.0, 194.0], [68.1, 194.0], [68.2, 195.0], [68.3, 195.0], [68.4, 195.0], [68.5, 195.0], [68.6, 195.0], [68.7, 195.0], [68.8, 196.0], [68.9, 196.0], [69.0, 196.0], [69.1, 196.0], [69.2, 196.0], [69.3, 197.0], [69.4, 197.0], [69.5, 197.0], [69.6, 197.0], [69.7, 197.0], [69.8, 198.0], [69.9, 198.0], [70.0, 198.0], [70.1, 198.0], [70.2, 198.0], [70.3, 199.0], [70.4, 199.0], [70.5, 199.0], [70.6, 199.0], [70.7, 199.0], [70.8, 200.0], [70.9, 200.0], [71.0, 200.0], [71.1, 200.0], [71.2, 200.0], [71.3, 201.0], [71.4, 201.0], [71.5, 201.0], [71.6, 201.0], [71.7, 201.0], [71.8, 202.0], [71.9, 202.0], [72.0, 202.0], [72.1, 202.0], [72.2, 203.0], [72.3, 203.0], [72.4, 203.0], [72.5, 203.0], [72.6, 203.0], [72.7, 204.0], [72.8, 204.0], [72.9, 204.0], [73.0, 204.0], [73.1, 205.0], [73.2, 205.0], [73.3, 205.0], [73.4, 205.0], [73.5, 205.0], [73.6, 206.0], [73.7, 206.0], [73.8, 206.0], [73.9, 206.0], [74.0, 207.0], [74.1, 207.0], [74.2, 207.0], [74.3, 207.0], [74.4, 208.0], [74.5, 208.0], [74.6, 208.0], [74.7, 208.0], [74.8, 208.0], [74.9, 209.0], [75.0, 209.0], [75.1, 209.0], [75.2, 209.0], [75.3, 210.0], [75.4, 210.0], [75.5, 210.0], [75.6, 210.0], [75.7, 211.0], [75.8, 211.0], [75.9, 211.0], [76.0, 211.0], [76.1, 212.0], [76.2, 212.0], [76.3, 212.0], [76.4, 212.0], [76.5, 213.0], [76.6, 213.0], [76.7, 213.0], [76.8, 213.0], [76.9, 214.0], [77.0, 214.0], [77.1, 214.0], [77.2, 214.0], [77.3, 215.0], [77.4, 215.0], [77.5, 215.0], [77.6, 215.0], [77.7, 215.0], [77.8, 216.0], [77.9, 216.0], [78.0, 216.0], [78.1, 216.0], [78.2, 217.0], [78.3, 217.0], [78.4, 217.0], [78.5, 217.0], [78.6, 218.0], [78.7, 218.0], [78.8, 218.0], [78.9, 219.0], [79.0, 219.0], [79.1, 219.0], [79.2, 219.0], [79.3, 220.0], [79.4, 220.0], [79.5, 220.0], [79.6, 221.0], [79.7, 221.0], [79.8, 221.0], [79.9, 221.0], [80.0, 222.0], [80.1, 222.0], [80.2, 222.0], [80.3, 223.0], [80.4, 223.0], [80.5, 223.0], [80.6, 223.0], [80.7, 224.0], [80.8, 224.0], [80.9, 224.0], [81.0, 225.0], [81.1, 225.0], [81.2, 225.0], [81.3, 226.0], [81.4, 226.0], [81.5, 226.0], [81.6, 227.0], [81.7, 227.0], [81.8, 227.0], [81.9, 227.0], [82.0, 228.0], [82.1, 228.0], [82.2, 228.0], [82.3, 229.0], [82.4, 229.0], [82.5, 230.0], [82.6, 230.0], [82.7, 230.0], [82.8, 231.0], [82.9, 231.0], [83.0, 231.0], [83.1, 232.0], [83.2, 232.0], [83.3, 233.0], [83.4, 233.0], [83.5, 234.0], [83.6, 234.0], [83.7, 234.0], [83.8, 235.0], [83.9, 235.0], [84.0, 236.0], [84.1, 236.0], [84.2, 237.0], [84.3, 237.0], [84.4, 238.0], [84.5, 238.0], [84.6, 239.0], [84.7, 239.0], [84.8, 240.0], [84.9, 240.0], [85.0, 241.0], [85.1, 241.0], [85.2, 242.0], [85.3, 242.0], [85.4, 243.0], [85.5, 243.0], [85.6, 244.0], [85.7, 244.0], [85.8, 245.0], [85.9, 246.0], [86.0, 246.0], [86.1, 247.0], [86.2, 247.0], [86.3, 248.0], [86.4, 248.0], [86.5, 249.0], [86.6, 249.0], [86.7, 250.0], [86.8, 250.0], [86.9, 251.0], [87.0, 252.0], [87.1, 252.0], [87.2, 253.0], [87.3, 253.0], [87.4, 254.0], [87.5, 255.0], [87.6, 255.0], [87.7, 256.0], [87.8, 257.0], [87.9, 257.0], [88.0, 258.0], [88.1, 259.0], [88.2, 259.0], [88.3, 260.0], [88.4, 261.0], [88.5, 262.0], [88.6, 262.0], [88.7, 263.0], [88.8, 264.0], [88.9, 265.0], [89.0, 265.0], [89.1, 266.0], [89.2, 267.0], [89.3, 268.0], [89.4, 269.0], [89.5, 269.0], [89.6, 270.0], [89.7, 271.0], [89.8, 272.0], [89.9, 273.0], [90.0, 273.0], [90.1, 275.0], [90.2, 275.0], [90.3, 276.0], [90.4, 277.0], [90.5, 278.0], [90.6, 279.0], [90.7, 280.0], [90.8, 281.0], [90.9, 282.0], [91.0, 283.0], [91.1, 285.0], [91.2, 286.0], [91.3, 287.0], [91.4, 288.0], [91.5, 289.0], [91.6, 291.0], [91.7, 292.0], [91.8, 293.0], [91.9, 294.0], [92.0, 296.0], [92.1, 297.0], [92.2, 298.0], [92.3, 300.0], [92.4, 301.0], [92.5, 302.0], [92.6, 304.0], [92.7, 305.0], [92.8, 307.0], [92.9, 308.0], [93.0, 310.0], [93.1, 311.0], [93.2, 313.0], [93.3, 315.0], [93.4, 317.0], [93.5, 318.0], [93.6, 320.0], [93.7, 322.0], [93.8, 324.0], [93.9, 325.0], [94.0, 327.0], [94.1, 329.0], [94.2, 332.0], [94.3, 334.0], [94.4, 336.0], [94.5, 338.0], [94.6, 341.0], [94.7, 343.0], [94.8, 346.0], [94.9, 348.0], [95.0, 350.0], [95.1, 353.0], [95.2, 356.0], [95.3, 359.0], [95.4, 362.0], [95.5, 365.0], [95.6, 368.0], [95.7, 371.0], [95.8, 374.0], [95.9, 377.0], [96.0, 380.0], [96.1, 384.0], [96.2, 388.0], [96.3, 392.0], [96.4, 396.0], [96.5, 399.0], [96.6, 403.0], [96.7, 407.0], [96.8, 412.0], [96.9, 416.0], [97.0, 421.0], [97.1, 426.0], [97.2, 431.0], [97.3, 437.0], [97.4, 443.0], [97.5, 449.0], [97.6, 456.0], [97.7, 464.0], [97.8, 471.0], [97.9, 479.0], [98.0, 487.0], [98.1, 497.0], [98.2, 506.0], [98.3, 515.0], [98.4, 526.0], [98.5, 536.0], [98.6, 549.0], [98.7, 563.0], [98.8, 580.0], [98.9, 601.0], [99.0, 623.0], [99.1, 649.0], [99.2, 680.0], [99.3, 722.0], [99.4, 795.0], [99.5, 872.0], [99.6, 980.0], [99.7, 1071.0], [99.8, 1206.0], [99.9, 1669.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 183099.0, "series": [{"data": [[0.0, 183099.0], [600.0, 148.0], [700.0, 156.0], [200.0, 6664.0], [800.0, 104.0], [900.0, 78.0], [1000.0, 81.0], [1100.0, 42.0], [300.0, 2076.0], [1200.0, 25.0], [1300.0, 35.0], [1400.0, 31.0], [1500.0, 32.0], [100.0, 56237.0], [400.0, 795.0], [1600.0, 16.0], [1700.0, 14.0], [1800.0, 3.0], [500.0, 364.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 179179.0], [600.0, 230.0], [700.0, 146.0], [200.0, 6556.0], [800.0, 134.0], [900.0, 99.0], [1000.0, 55.0], [1100.0, 23.0], [300.0, 2090.0], [1200.0, 18.0], [1300.0, 22.0], [1400.0, 22.0], [1500.0, 15.0], [100.0, 60027.0], [400.0, 846.0], [1600.0, 32.0], [1700.0, 75.0], [1900.0, 2.0], [500.0, 429.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 69495.0], [600.0, 899.0], [700.0, 374.0], [2800.0, 1.0], [200.0, 53823.0], [800.0, 329.0], [900.0, 220.0], [1000.0, 254.0], [1100.0, 168.0], [300.0, 10510.0], [1200.0, 64.0], [1300.0, 32.0], [1400.0, 36.0], [1500.0, 32.0], [100.0, 107424.0], [400.0, 4092.0], [1600.0, 166.0], [1700.0, 140.0], [1800.0, 22.0], [1900.0, 11.0], [500.0, 1897.0], [2000.0, 11.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 189.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 742951.0, "series": [{"data": [[0.0, 742951.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2226.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 189.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 4634.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 459.7967676845103, "minX": 1.64631558E12, "maxY": 500.0, "series": [{"data": [[1.64631558E12, 471.3673041671697], [1.6463157E12, 459.7967676845103], [1.64631564E12, 500.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6463157E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.5, "minX": 1.0, "maxY": 304.2325581395349, "series": [{"data": [[3.0, 1.05], [4.0, 1.75], [5.0, 1.7142857142857144], [6.0, 1.5], [7.0, 2.742857142857143], [8.0, 3.3333333333333335], [9.0, 2.0], [10.0, 1.8], [11.0, 2.5], [12.0, 2.0], [13.0, 3.807692307692308], [14.0, 2.437499999999999], [15.0, 4.200000000000001], [16.0, 5.0], [17.0, 6.0], [18.0, 5.166666666666667], [19.0, 4.666666666666667], [20.0, 9.222222222222221], [21.0, 12.0], [22.0, 7.5], [23.0, 6.57142857142857], [24.0, 5.222222222222223], [25.0, 5.428571428571428], [26.0, 8.75], [27.0, 3.0], [28.0, 6.5675675675675675], [29.0, 5.199999999999999], [30.0, 9.629629629629628], [31.0, 14.25], [33.0, 10.0], [32.0, 12.5], [35.0, 15.571428571428571], [34.0, 11.866666666666667], [36.0, 13.333333333333334], [37.0, 23.615384615384613], [38.0, 10.68421052631579], [39.0, 13.42857142857143], [40.0, 17.266666666666666], [41.0, 30.875000000000004], [42.0, 10.46153846153846], [43.0, 16.285714285714285], [44.0, 17.413793103448274], [45.0, 24.625], [46.0, 11.76923076923077], [47.0, 10.259259259259261], [48.0, 12.26086956521739], [49.0, 22.214285714285715], [50.0, 27.22222222222222], [51.0, 22.060606060606062], [52.0, 12.319999999999999], [53.0, 6.3125], [54.0, 19.79310344827586], [55.0, 10.6], [56.0, 11.524999999999999], [57.0, 10.828571428571427], [58.0, 12.13793103448276], [59.0, 24.86486486486486], [61.0, 21.030303030303024], [60.0, 13.950000000000001], [62.0, 14.921052631578947], [63.0, 36.63157894736842], [64.0, 23.8], [65.0, 35.2], [66.0, 19.878048780487802], [67.0, 17.4], [68.0, 17.928571428571427], [71.0, 17.71428571428571], [70.0, 10.799999999999999], [69.0, 15.2], [72.0, 23.083333333333336], [73.0, 13.066666666666668], [74.0, 14.2], [75.0, 10.814814814814815], [76.0, 16.516129032258064], [77.0, 34.904761904761905], [78.0, 28.124999999999996], [79.0, 17.456140350877195], [80.0, 36.95833333333334], [81.0, 30.051282051282055], [82.0, 28.57142857142857], [83.0, 29.235294117647058], [84.0, 26.678571428571427], [85.0, 17.583333333333336], [86.0, 35.125], [87.0, 17.666666666666668], [88.0, 21.799999999999997], [89.0, 33.470588235294116], [90.0, 29.77777777777777], [91.0, 25.684210526315784], [92.0, 28.227272727272723], [93.0, 27.099999999999998], [94.0, 40.47619047619048], [95.0, 47.2608695652174], [96.0, 40.38095238095238], [97.0, 31.901960784313722], [98.0, 27.52000000000001], [99.0, 34.91304347826086], [100.0, 21.370370370370367], [101.0, 25.519230769230766], [102.0, 31.043478260869573], [103.0, 31.541666666666668], [104.0, 34.00000000000001], [105.0, 35.727272727272734], [106.0, 56.49999999999999], [107.0, 47.523809523809526], [108.0, 50.925000000000004], [110.0, 38.11428571428571], [109.0, 47.80645161290323], [111.0, 29.0], [112.0, 48.291666666666664], [113.0, 43.38709677419355], [114.0, 44.36666666666668], [115.0, 46.3448275862069], [117.0, 46.54098360655738], [116.0, 60.7391304347826], [119.0, 34.62162162162163], [118.0, 29.0], [120.0, 30.04166666666666], [121.0, 15.478260869565219], [123.0, 31.11111111111111], [122.0, 15.285714285714286], [124.0, 31.937499999999986], [125.0, 25.666666666666668], [126.0, 18.333333333333336], [127.0, 30.722222222222225], [128.0, 22.0], [129.0, 31.53846153846155], [130.0, 55.666666666666664], [131.0, 54.36363636363636], [132.0, 34.36363636363637], [133.0, 32.473684210526315], [134.0, 33.88235294117648], [135.0, 31.968750000000007], [136.0, 23.264705882352942], [137.0, 17.636363636363637], [138.0, 28.733333333333334], [139.0, 20.97142857142857], [140.0, 36.84615384615385], [141.0, 38.488888888888894], [142.0, 35.666666666666664], [143.0, 56.5925925925926], [144.0, 65.6551724137931], [145.0, 56.59259259259259], [146.0, 65.15625], [148.0, 45.63333333333334], [147.0, 63.30612244897958], [149.0, 16.5], [150.0, 30.75], [151.0, 41.846153846153854], [152.0, 33.94029850746268], [153.0, 42.84210526315789], [154.0, 67.12], [159.0, 51.20689655172414], [157.0, 34.885714285714286], [158.0, 25.965517241379313], [155.0, 51.295454545454554], [156.0, 45.73972602739727], [163.0, 38.060606060606055], [164.0, 35.54666666666667], [165.0, 60.85000000000001], [166.0, 45.577777777777776], [167.0, 35.1304347826087], [162.0, 38.33333333333333], [161.0, 43.13333333333334], [160.0, 45.95652173913044], [168.0, 62.81818181818182], [169.0, 67.44736842105262], [173.0, 64.87500000000001], [172.0, 95.97826086956518], [174.0, 90.2857142857143], [171.0, 74.21276595744682], [170.0, 56.099999999999994], [175.0, 158.86363636363637], [182.0, 35.199999999999996], [181.0, 43.529411764705884], [180.0, 96.16666666666666], [179.0, 143.0], [178.0, 64.84210526315789], [183.0, 198.0], [176.0, 61.35], [177.0, 47.652173913043484], [186.0, 123.88235294117649], [187.0, 43.76923076923077], [185.0, 43.43749999999999], [188.0, 28.88524590163934], [189.0, 39.28571428571429], [184.0, 24.5], [191.0, 38.87719298245614], [190.0, 31.916666666666664], [192.0, 37.63636363636364], [193.0, 53.27272727272726], [195.0, 48.932432432432435], [196.0, 46.80357142857143], [198.0, 42.666666666666664], [199.0, 31.677419354838708], [194.0, 67.85294117647061], [197.0, 45.35164835164836], [200.0, 33.15], [201.0, 22.896551724137925], [202.0, 50.9375], [203.0, 30.333333333333332], [204.0, 22.142857142857142], [205.0, 39.55000000000001], [206.0, 25.54054054054054], [207.0, 46.642857142857146], [208.0, 67.70270270270272], [209.0, 61.699999999999974], [211.0, 36.879999999999995], [210.0, 55.55], [212.0, 37.86956521739131], [213.0, 29.5], [214.0, 26.80952380952381], [215.0, 66.06382978723403], [216.0, 59.666666666666664], [217.0, 37.103448275862064], [218.0, 42.48275862068967], [219.0, 35.91304347826087], [220.0, 50.21176470588237], [221.0, 62.499999999999986], [222.0, 44.0344827586207], [223.0, 39.42168674698798], [224.0, 32.411764705882355], [225.0, 33.866666666666674], [226.0, 31.536585365853664], [227.0, 50.216216216216225], [228.0, 64.66666666666669], [231.0, 27.736842105263158], [229.0, 49.1904761904762], [230.0, 50.64285714285714], [232.0, 29.166666666666668], [233.0, 45.0246913580247], [234.0, 42.214285714285715], [235.0, 58.314285714285695], [236.0, 57.452380952380956], [237.0, 36.4313725490196], [238.0, 41.68478260869565], [239.0, 46.699999999999996], [240.0, 41.7], [241.0, 45.883720930232556], [242.0, 40.367346938775505], [243.0, 56.794520547945204], [247.0, 46.592592592592595], [246.0, 31.38888888888889], [245.0, 28.857142857142858], [244.0, 29.6], [248.0, 41.92307692307691], [250.0, 44.64], [251.0, 31.380952380952383], [252.0, 45.45], [253.0, 24.34285714285714], [254.0, 37.62264150943395], [255.0, 72.0], [249.0, 46.81249999999999], [258.0, 22.0], [257.0, 50.51162790697676], [256.0, 61.8], [259.0, 18.931818181818176], [268.0, 66.32142857142858], [269.0, 153.14999999999995], [270.0, 109.74999999999997], [271.0, 97.47692307692304], [260.0, 14.25], [261.0, 61.758620689655196], [262.0, 73.94999999999999], [263.0, 38.117647058823536], [264.0, 57.319148936170215], [265.0, 70.03571428571428], [266.0, 56.77251184834121], [267.0, 118.83333333333333], [273.0, 63.36363636363636], [272.0, 102.12048192771081], [274.0, 79.67961165048544], [275.0, 54.87500000000001], [276.0, 49.76190476190477], [277.0, 29.153846153846153], [278.0, 119.11111111111111], [279.0, 66.00000000000001], [281.0, 111.37142857142857], [283.0, 78.0], [282.0, 39.37931034482758], [280.0, 65.68817204301072], [286.0, 50.75999999999999], [284.0, 86.6923076923077], [285.0, 57.375], [287.0, 70.23684210526316], [288.0, 86.5], [289.0, 66.63636363636365], [292.0, 87.02040816326534], [291.0, 70.99999999999999], [300.0, 57.8372093023256], [301.0, 51.23076923076923], [302.0, 40.13953488372094], [303.0, 53.53932584269662], [293.0, 86.03174603174607], [294.0, 99.43076923076923], [290.0, 69.475], [295.0, 53.166666666666664], [296.0, 119.06], [298.0, 84.38095238095237], [297.0, 104.47999999999999], [299.0, 68.41379310344828], [306.0, 85.48571428571431], [304.0, 74.9818181818182], [307.0, 65.31250000000003], [316.0, 77.64601769911508], [317.0, 105.39130434782608], [318.0, 58.41463414634147], [319.0, 50.648648648648646], [309.0, 46.25], [308.0, 61.28], [310.0, 68.12499999999999], [305.0, 99.85714285714286], [311.0, 113.02479338842976], [315.0, 59.19867549668876], [314.0, 101.57575757575758], [313.0, 79.5], [312.0, 99.16666666666666], [321.0, 52.50000000000001], [320.0, 57.762886597938135], [322.0, 51.666666666666664], [323.0, 42.875], [324.0, 56.42857142857143], [325.0, 63.57142857142857], [326.0, 38.666666666666664], [327.0, 64.06666666666666], [328.0, 67.86021505376344], [335.0, 67.85714285714285], [334.0, 62.13157894736843], [332.0, 45.038961038961034], [333.0, 153.84057971014488], [329.0, 80.42307692307695], [330.0, 90.79069767441858], [331.0, 38.75], [351.0, 169.21428571428567], [341.0, 88.05555555555554], [340.0, 59.50877192982455], [342.0, 80.11111111111111], [344.0, 92.85714285714286], [345.0, 77.52830188679242], [347.0, 130.55319148936172], [346.0, 111.44444444444443], [348.0, 106.99019607843137], [343.0, 54.94642857142858], [336.0, 60.16666666666667], [338.0, 50.0], [337.0, 64.2], [339.0, 48.94871794871795], [350.0, 123.24786324786328], [349.0, 103.6741573033708], [352.0, 108.39743589743588], [354.0, 104.02857142857142], [355.0, 41.666666666666664], [364.0, 59.39597315436244], [365.0, 59.53225806451613], [366.0, 88.15789473684211], [367.0, 75.48717948717949], [356.0, 45.67346938775509], [353.0, 94.58192090395481], [357.0, 78.3875], [358.0, 63.16279069767441], [359.0, 27.46666666666667], [360.0, 45.29729729729729], [361.0, 61.960264900662246], [362.0, 51.93939393939394], [363.0, 64.20833333333333], [369.0, 51.77586206896553], [368.0, 3.8888888888888897], [370.0, 61.17391304347825], [371.0, 55.83636363636364], [372.0, 38.57142857142857], [373.0, 63.721518987341774], [375.0, 40.28571428571428], [374.0, 70.81159420289856], [376.0, 87.4318181818182], [382.0, 66.19999999999999], [383.0, 44.322580645161274], [380.0, 71.87313432835823], [381.0, 72.82926829268294], [377.0, 91.54901960784314], [378.0, 59.0], [379.0, 75.4509803921569], [385.0, 66.32142857142856], [384.0, 53.61702127659575], [392.0, 82.6268656716418], [398.0, 73.31632653061223], [399.0, 82.76288659793815], [393.0, 143.5], [394.0, 54.96470588235295], [395.0, 81.24509803921572], [396.0, 74.90151515151517], [387.0, 65.2704918032787], [386.0, 45.562500000000014], [391.0, 83.8809523809524], [389.0, 67.80165289256199], [390.0, 80.9230769230769], [388.0, 57.77611940298508], [397.0, 50.162162162162154], [413.0, 116.66101694915255], [405.0, 75.88095238095238], [404.0, 98.47999999999999], [400.0, 66.6941176470588], [409.0, 75.82352941176462], [411.0, 93.3658536585366], [410.0, 75.15200000000004], [412.0, 82.8809523809524], [403.0, 78.86206896551727], [414.0, 107.01307189542482], [415.0, 60.67307692307693], [408.0, 82.88888888888889], [406.0, 72.08069164265123], [407.0, 60.9217391304348], [401.0, 75.20689655172414], [402.0, 81.26666666666667], [423.0, 81.29113924050635], [421.0, 86.4925373134328], [420.0, 80.49473684210527], [419.0, 76.14935064935064], [418.0, 60.24074074074074], [417.0, 61.42000000000001], [416.0, 74.28057553956835], [422.0, 86.45454545454544], [426.0, 84.26842105263164], [425.0, 65.26760563380282], [427.0, 79.95238095238093], [431.0, 87.71774193548384], [424.0, 81.84848484848486], [428.0, 62.8888888888889], [429.0, 80.07368421052635], [430.0, 76.88888888888891], [432.0, 90.38683127572011], [433.0, 95.41304347826087], [434.0, 99.71999999999996], [435.0, 83.7948717948718], [444.0, 82.41558441558442], [445.0, 83.21212121212118], [446.0, 107.44], [440.0, 93.14388489208633], [447.0, 138.45098039215682], [436.0, 103.4105263157895], [437.0, 77.21999999999998], [438.0, 60.75531914893617], [439.0, 41.387755102040806], [441.0, 176.41666666666666], [442.0, 97.275], [443.0, 80.25000000000001], [451.0, 81.54166666666671], [449.0, 112.88372093023258], [448.0, 124.97905759162293], [450.0, 98.6774193548387], [452.0, 94.90322580645162], [454.0, 97.67588932806315], [453.0, 75.80487804878048], [455.0, 97.71910112359546], [456.0, 33.454545454545446], [462.0, 45.81395348837209], [463.0, 72.65116279069774], [460.0, 61.84615384615385], [461.0, 64.85999999999997], [457.0, 22.769230769230766], [458.0, 21.206896551724142], [459.0, 36.45], [467.0, 92.14790996784575], [464.0, 43.85714285714286], [471.0, 99.40909090909092], [470.0, 100.68918918918916], [469.0, 84.21527777777777], [468.0, 76.56666666666666], [465.0, 71.84090909090911], [466.0, 70.8101265822785], [479.0, 73.73684210526316], [476.0, 83.80167597765364], [477.0, 64.68807339449539], [475.0, 77.81314168377818], [473.0, 95.64980544747083], [472.0, 84.0122699386503], [474.0, 82.75168918918908], [478.0, 62.98387096774194], [482.0, 70.69124423963136], [483.0, 46.40387481371088], [492.0, 90.61914460285132], [493.0, 93.65094339622644], [494.0, 96.77400899060089], [495.0, 100.04598737601452], [484.0, 51.15202702702706], [485.0, 56.85714285714287], [486.0, 73.00442477876106], [487.0, 89.51485148514853], [488.0, 73.3258426966292], [480.0, 72.07766990291262], [481.0, 43.76126126126125], [489.0, 101.60753880266081], [490.0, 46.93333333333333], [491.0, 91.44674085850559], [499.0, 99.14916026188462], [500.0, 80.6696661537442], [496.0, 110.19327731092436], [497.0, 78.84924623115583], [498.0, 136.8239130434784], [1.0, 1.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[482.56787200000514, 80.13061199999778]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[3.0, 0.7999999999999998], [4.0, 0.5], [5.0, 1.8571428571428572], [6.0, 1.75], [7.0, 2.685714285714285], [8.0, 12.0], [9.0, 2.0], [10.0, 2.6], [11.0, 2.0], [12.0, 2.0], [13.0, 5.923076923076923], [14.0, 3.375], [15.0, 4.85], [16.0, 5.666666666666667], [17.0, 12.0], [18.0, 9.333333333333334], [19.0, 8.666666666666666], [20.0, 5.777777777777778], [21.0, 4.0], [22.0, 4.5], [23.0, 5.857142857142857], [24.0, 7.777777777777778], [25.0, 5.428571428571429], [26.0, 5.25], [27.0, 6.0], [28.0, 5.999999999999999], [29.0, 5.8999999999999995], [30.0, 15.111111111111112], [31.0, 15.625000000000002], [33.0, 11.0], [32.0, 10.5], [35.0, 18.142857142857142], [34.0, 11.799999999999999], [36.0, 34.0], [37.0, 77.61538461538461], [38.0, 30.105263157894736], [39.0, 33.03571428571428], [40.0, 24.266666666666666], [41.0, 40.5], [42.0, 20.576923076923077], [43.0, 32.96428571428572], [44.0, 37.6896551724138], [45.0, 32.875], [46.0, 15.538461538461537], [47.0, 12.407407407407408], [48.0, 17.565217391304348], [49.0, 18.28571428571428], [50.0, 23.777777777777775], [51.0, 21.454545454545457], [52.0, 13.879999999999997], [53.0, 8.0625], [54.0, 9.137931034482758], [55.0, 23.733333333333338], [56.0, 11.324999999999998], [57.0, 11.057142857142859], [58.0, 12.689655172413794], [59.0, 12.16216216216216], [61.0, 14.303030303030306], [60.0, 12.749999999999998], [62.0, 23.289473684210524], [63.0, 38.157894736842096], [64.0, 24.628571428571423], [65.0, 37.36666666666666], [66.0, 22.975609756097548], [67.0, 13.799999999999999], [68.0, 22.476190476190474], [71.0, 29.857142857142858], [70.0, 23.75], [69.0, 14.6], [72.0, 25.208333333333332], [73.0, 17.466666666666665], [74.0, 11.799999999999999], [75.0, 10.148148148148149], [76.0, 13.870967741935484], [77.0, 23.61904761904762], [78.0, 44.18750000000001], [79.0, 27.33333333333334], [80.0, 55.125], [81.0, 30.974358974358978], [82.0, 25.28571428571428], [83.0, 49.41176470588236], [84.0, 23.785714285714285], [85.0, 20.75], [86.0, 30.124999999999996], [87.0, 12.5], [88.0, 25.449999999999992], [89.0, 23.20588235294117], [90.0, 25.48148148148148], [91.0, 21.000000000000004], [92.0, 28.545454545454543], [93.0, 16.05], [94.0, 30.333333333333336], [95.0, 43.17391304347825], [96.0, 46.57142857142857], [97.0, 38.05882352941178], [98.0, 38.239999999999995], [99.0, 35.608695652173914], [100.0, 15.370370370370374], [101.0, 23.0576923076923], [102.0, 31.217391304347817], [103.0, 42.04166666666666], [104.0, 29.5], [105.0, 30.242424242424246], [106.0, 49.666666666666664], [107.0, 41.07142857142857], [108.0, 44.450000000000024], [110.0, 42.57142857142857], [109.0, 56.06451612903226], [111.0, 21.419354838709676], [112.0, 39.125], [113.0, 31.580645161290324], [114.0, 25.066666666666663], [115.0, 25.275862068965516], [117.0, 33.0983606557377], [116.0, 34.82608695652174], [119.0, 33.81081081081082], [118.0, 47.083333333333336], [120.0, 51.85416666666666], [121.0, 26.826086956521735], [123.0, 16.77777777777778], [122.0, 31.285714285714285], [124.0, 16.968749999999996], [125.0, 8.916666666666666], [126.0, 20.0], [127.0, 27.722222222222225], [128.0, 17.61538461538462], [129.0, 17.82051282051282], [130.0, 36.416666666666664], [131.0, 36.86363636363637], [132.0, 50.272727272727266], [133.0, 44.36842105263157], [134.0, 36.352941176470594], [135.0, 27.875], [136.0, 24.176470588235297], [137.0, 18.0], [138.0, 26.666666666666664], [139.0, 17.57142857142857], [140.0, 23.615384615384613], [141.0, 28.11111111111111], [142.0, 25.166666666666668], [143.0, 25.962962962962962], [144.0, 32.6896551724138], [145.0, 28.703703703703702], [146.0, 79.93750000000001], [148.0, 90.4], [147.0, 70.85714285714288], [149.0, 24.000000000000004], [150.0, 53.125], [151.0, 52.07692307692308], [152.0, 39.50746268656715], [153.0, 34.05263157894737], [154.0, 32.120000000000005], [159.0, 35.41379310344828], [157.0, 50.8857142857143], [158.0, 57.6551724137931], [155.0, 35.795454545454554], [156.0, 42.6849315068493], [163.0, 19.666666666666668], [164.0, 31.42666666666667], [165.0, 21.9], [166.0, 33.75555555555555], [167.0, 47.391304347826086], [162.0, 27.999999999999996], [161.0, 33.0], [160.0, 34.52173913043479], [168.0, 60.81818181818182], [169.0, 48.23684210526316], [173.0, 27.062499999999993], [172.0, 73.99999999999997], [174.0, 58.41758241758244], [171.0, 68.1063829787234], [170.0, 62.699999999999996], [175.0, 79.36363636363635], [182.0, 81.03333333333332], [181.0, 89.70588235294117], [180.0, 42.0], [179.0, 48.333333333333336], [178.0, 29.815789473684216], [183.0, 75.0], [176.0, 41.099999999999994], [177.0, 21.43478260869565], [186.0, 37.70588235294117], [187.0, 28.615384615384613], [185.0, 102.37499999999999], [188.0, 43.40983606557375], [189.0, 85.57142857142857], [184.0, 153.0], [191.0, 38.57894736842106], [190.0, 38.833333333333336], [192.0, 31.636363636363633], [193.0, 27.63636363636364], [195.0, 30.97297297297298], [196.0, 53.446428571428584], [198.0, 64.0], [199.0, 44.064516129032256], [194.0, 28.38235294117647], [197.0, 40.42857142857142], [200.0, 28.299999999999997], [201.0, 57.3793103448276], [202.0, 35.49999999999999], [203.0, 19.0], [204.0, 16.142857142857142], [205.0, 35.75000000000001], [206.0, 22.13513513513513], [207.0, 30.0], [208.0, 33.243243243243235], [209.0, 32.19999999999999], [211.0, 46.05999999999998], [210.0, 75.075], [212.0, 44.78260869565218], [213.0, 32.90909090909091], [214.0, 37.52380952380953], [215.0, 55.4468085106383], [216.0, 39.333333333333336], [217.0, 60.0], [218.0, 45.706896551724135], [219.0, 38.391304347826086], [220.0, 43.57647058823527], [221.0, 46.91428571428571], [222.0, 41.793103448275865], [223.0, 36.97590361445782], [224.0, 28.88235294117647], [225.0, 29.91111111111111], [226.0, 33.512195121951216], [227.0, 34.29729729729729], [228.0, 28.125000000000004], [231.0, 51.578947368421055], [229.0, 42.42857142857142], [230.0, 43.452380952380956], [232.0, 40.66666666666667], [233.0, 40.2962962962963], [234.0, 31.92857142857143], [235.0, 82.22857142857143], [236.0, 100.69047619047623], [237.0, 44.137254901960766], [238.0, 45.41304347826087], [239.0, 26.900000000000002], [240.0, 27.8], [241.0, 43.18604651162791], [242.0, 47.244897959183675], [243.0, 46.178082191780824], [247.0, 30.648148148148138], [246.0, 40.77777777777778], [245.0, 45.21428571428571], [244.0, 41.9], [248.0, 34.09230769230769], [250.0, 41.06000000000001], [251.0, 32.00000000000001], [252.0, 47.75], [253.0, 21.285714285714292], [254.0, 31.37735849056604], [255.0, 30.625], [249.0, 38.9375], [258.0, 12.0], [257.0, 45.76744186046513], [256.0, 52.2], [259.0, 25.20454545454546], [268.0, 60.85714285714286], [269.0, 62.1], [270.0, 94.53846153846155], [271.0, 112.47692307692306], [260.0, 25.625], [261.0, 39.206896551724135], [262.0, 25.299999999999997], [263.0, 38.529411764705884], [264.0, 47.085106382978715], [265.0, 34.71428571428571], [266.0, 58.1658767772512], [267.0, 76.25], [273.0, 40.86363636363637], [272.0, 96.92771084337352], [274.0, 61.825242718446596], [275.0, 55.59375], [276.0, 37.38095238095239], [277.0, 16.46153846153846], [278.0, 90.44444444444444], [279.0, 37.230769230769226], [281.0, 81.42857142857142], [283.0, 50.5], [282.0, 51.6551724137931], [280.0, 50.000000000000014], [286.0, 66.19999999999999], [284.0, 48.61538461538462], [285.0, 59.6875], [287.0, 101.68421052631578], [288.0, 88.59090909090908], [289.0, 69.8727272727273], [292.0, 73.91836734693877], [291.0, 60.78181818181817], [300.0, 57.883720930232556], [301.0, 54.769230769230774], [302.0, 53.27906976744186], [303.0, 62.65168539325842], [293.0, 63.19047619047621], [294.0, 66.41538461538462], [290.0, 70.62500000000001], [295.0, 18.333333333333332], [296.0, 62.98], [298.0, 109.95238095238093], [297.0, 105.83999999999999], [299.0, 84.34482758620689], [306.0, 41.14285714285714], [304.0, 52.61818181818182], [307.0, 57.79017857142855], [316.0, 65.13274336283186], [317.0, 67.5217391304348], [318.0, 100.70731707317073], [319.0, 84.5135135135135], [309.0, 33.666666666666664], [308.0, 52.719999999999985], [310.0, 30.250000000000004], [305.0, 49.0], [311.0, 68.12396694214873], [315.0, 59.00662251655629], [314.0, 61.666666666666664], [313.0, 64.4], [312.0, 55.88888888888889], [321.0, 44.1578947368421], [320.0, 66.89690721649487], [322.0, 53.0], [323.0, 74.99999999999999], [324.0, 37.78571428571429], [325.0, 55.65714285714286], [326.0, 43.333333333333336], [327.0, 42.233333333333334], [328.0, 47.10752688172042], [335.0, 54.57142857142857], [334.0, 66.55263157894738], [332.0, 54.98701298701296], [333.0, 71.21739130434783], [329.0, 54.32692307692308], [330.0, 54.093023255813975], [331.0, 26.107142857142854], [351.0, 77.33333333333334], [341.0, 80.2777777777778], [340.0, 49.42105263157896], [342.0, 120.55555555555556], [344.0, 74.85714285714286], [345.0, 103.40566037735852], [347.0, 75.55319148936172], [346.0, 101.44444444444447], [348.0, 71.69607843137257], [343.0, 110.01785714285714], [336.0, 60.666666666666664], [338.0, 60.285714285714285], [337.0, 58.06666666666667], [339.0, 55.0], [350.0, 76.51282051282051], [349.0, 83.73033707865171], [352.0, 75.48717948717952], [354.0, 58.628571428571426], [355.0, 35.199999999999996], [364.0, 85.9731543624161], [365.0, 55.225806451612904], [366.0, 52.81954887218044], [367.0, 50.07692307692307], [356.0, 31.08163265306122], [353.0, 70.06214689265533], [357.0, 57.61250000000001], [358.0, 64.04651162790697], [359.0, 37.13333333333333], [360.0, 46.270270270270274], [361.0, 58.27814569536423], [362.0, 47.636363636363626], [363.0, 64.4895833333333], [369.0, 45.77586206896551], [368.0, 6.666666666666667], [370.0, 68.2391304347826], [371.0, 48.49090909090909], [372.0, 14.761904761904761], [373.0, 49.784810126582286], [375.0, 34.55102040816327], [374.0, 81.6231884057971], [376.0, 78.84090909090911], [382.0, 58.977777777777774], [383.0, 32.193548387096776], [380.0, 62.298507462686594], [381.0, 71.87804878048782], [377.0, 76.98039215686272], [378.0, 73.4264705882353], [379.0, 67.46078431372547], [385.0, 68.04464285714285], [384.0, 48.57446808510638], [392.0, 90.22388059701493], [398.0, 61.765306122449005], [399.0, 64.91752577319589], [393.0, 36.0], [394.0, 44.01176470588234], [395.0, 82.6372549019608], [396.0, 63.56818181818179], [387.0, 71.1885245901639], [386.0, 72.73437500000001], [391.0, 86.02380952380955], [389.0, 86.13223140495872], [390.0, 61.23076923076924], [388.0, 104.70149253731344], [397.0, 72.21621621621622], [413.0, 121.93220338983052], [405.0, 117.38095238095238], [404.0, 93.96], [409.0, 77.42352941176469], [400.0, 62.91764705882352], [411.0, 111.78048780487806], [410.0, 77.44000000000003], [412.0, 115.96031746031744], [403.0, 75.39080459770118], [414.0, 68.76470588235298], [415.0, 54.36538461538462], [408.0, 75.11111111111113], [406.0, 71.99711815561966], [407.0, 72.51304347826088], [401.0, 66.94252873563221], [402.0, 91.60000000000001], [423.0, 72.60759493670882], [421.0, 71.68656716417914], [420.0, 57.6421052631579], [419.0, 75.72727272727272], [418.0, 89.44444444444446], [417.0, 75.03999999999999], [416.0, 62.165467625899325], [422.0, 88.78787878787881], [426.0, 80.87368421052628], [425.0, 78.83098591549296], [427.0, 81.0079365079365], [431.0, 67.62903225806453], [424.0, 81.18181818181819], [428.0, 68.05555555555554], [429.0, 77.61052631578944], [430.0, 46.14814814814814], [433.0, 50.173913043478265], [434.0, 68.4533333333333], [432.0, 85.49794238683123], [435.0, 68.15384615384619], [436.0, 68.66315789473686], [437.0, 72.28000000000004], [438.0, 78.89361702127657], [439.0, 56.04081632653061], [441.0, 54.416666666666664], [440.0, 76.7553956834532], [447.0, 69.83333333333333], [446.0, 92.29333333333335], [444.0, 81.56277056277052], [445.0, 88.5212121212121], [442.0, 82.10000000000001], [443.0, 46.74999999999999], [451.0, 80.16071428571429], [449.0, 146.81395348837208], [448.0, 89.80104712041886], [450.0, 122.1774193548387], [452.0, 113.5806451612903], [454.0, 84.21343873517782], [453.0, 104.2682926829268], [455.0, 111.96629213483146], [456.0, 113.31818181818183], [462.0, 39.2093023255814], [463.0, 74.7441860465116], [460.0, 74.65384615384617], [461.0, 69.01999999999998], [457.0, 21.76923076923077], [458.0, 23.137931034482758], [459.0, 52.54999999999999], [467.0, 86.10932475884245], [464.0, 55.74999999999999], [471.0, 93.5909090909091], [470.0, 98.43243243243244], [469.0, 86.66666666666666], [468.0, 89.86666666666667], [465.0, 97.36363636363637], [466.0, 91.12658227848095], [479.0, 50.96052631578948], [476.0, 63.00837988826814], [477.0, 68.51376146788992], [475.0, 79.36139630390139], [473.0, 81.62062256809335], [472.0, 88.0429447852761], [474.0, 73.63682432432438], [478.0, 57.99193548387098], [482.0, 110.88940092165903], [483.0, 36.87332339791358], [492.0, 83.4582484725051], [493.0, 97.84276729559745], [494.0, 94.19820187985296], [495.0, 96.7944093778177], [484.0, 87.92398648648654], [485.0, 66.98319327731093], [486.0, 125.66371681415933], [487.0, 94.2747524752475], [488.0, 87.52808988764049], [480.0, 50.077669902912625], [481.0, 33.87837837837837], [489.0, 89.35920177383599], [490.0, 66.22222222222223], [491.0, 91.14149443561203], [499.0, 95.3299174494732], [500.0, 81.17289661566186], [496.0, 87.34453781512607], [497.0, 94.65829145728648], [498.0, 121.78043478260867], [1.0, 0.5]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[482.5678720000049, 80.00349600000052]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[3.0, 1.95], [4.0, 2.25], [5.0, 3.5714285714285716], [6.0, 3.25], [7.0, 5.485714285714285], [8.0, 15.333333333333334], [9.0, 4.0], [10.0, 4.4], [11.0, 4.5], [12.0, 4.0], [13.0, 9.769230769230766], [14.0, 5.875], [15.0, 9.100000000000001], [16.0, 10.666666666666666], [17.0, 18.5], [18.0, 14.5], [19.0, 13.333333333333334], [20.0, 15.0], [21.0, 16.0], [22.0, 12.0], [23.0, 12.428571428571429], [24.0, 13.0], [25.0, 11.0], [26.0, 14.0], [27.0, 9.0], [28.0, 12.594594594594595], [29.0, 11.1], [30.0, 24.77777777777778], [31.0, 29.874999999999996], [33.0, 21.0], [32.0, 23.0], [35.0, 34.285714285714285], [34.0, 23.800000000000004], [36.0, 47.666666666666664], [37.0, 115.0], [38.0, 50.73684210526315], [39.0, 51.464285714285715], [40.0, 42.2], [41.0, 89.81249999999999], [42.0, 33.46153846153846], [43.0, 50.964285714285715], [44.0, 56.75862068965517], [45.0, 57.62499999999999], [46.0, 27.30769230769231], [47.0, 22.7037037037037], [48.0, 30.869565217391308], [49.0, 42.78571428571429], [50.0, 53.22222222222222], [51.0, 45.78787878787879], [52.0, 26.959999999999997], [53.0, 15.312500000000002], [54.0, 29.103448275862075], [55.0, 36.13333333333333], [56.0, 23.125], [57.0, 21.971428571428575], [58.0, 24.999999999999993], [59.0, 37.78378378378379], [61.0, 36.909090909090885], [60.0, 26.8], [62.0, 39.02631578947368], [63.0, 75.0], [64.0, 51.1142857142857], [65.0, 78.36666666666666], [66.0, 43.80487804878049], [67.0, 33.0], [68.0, 45.785714285714285], [71.0, 67.42857142857143], [70.0, 57.75], [69.0, 29.8], [72.0, 55.333333333333336], [73.0, 35.333333333333336], [74.0, 26.733333333333334], [75.0, 22.148148148148152], [76.0, 30.548387096774203], [77.0, 59.33333333333333], [78.0, 75.25], [79.0, 46.59649122807019], [80.0, 100.20833333333331], [81.0, 67.53846153846153], [82.0, 54.92857142857142], [83.0, 80.70588235294117], [84.0, 54.28571428571428], [85.0, 38.333333333333336], [86.0, 69.6875], [87.0, 30.166666666666668], [88.0, 47.95], [89.0, 57.52941176470587], [90.0, 57.11111111111111], [91.0, 48.10526315789473], [92.0, 59.40909090909091], [93.0, 43.35000000000001], [94.0, 71.1904761904762], [95.0, 93.95652173913044], [96.0, 93.42857142857142], [97.0, 72.29411764705884], [98.0, 76.75999999999999], [99.0, 77.6086956521739], [100.0, 37.407407407407405], [101.0, 50.019230769230745], [102.0, 63.78260869565217], [103.0, 73.99999999999999], [104.0, 67.94444444444443], [105.0, 70.69696969696969], [106.0, 112.5], [107.0, 90.64285714285715], [108.0, 101.17500000000001], [110.0, 82.97142857142858], [109.0, 113.96774193548387], [111.0, 51.87096774193548], [112.0, 91.20833333333333], [113.0, 76.87096774193547], [114.0, 70.23333333333335], [115.0, 72.79310344827586], [117.0, 91.08196721311472], [116.0, 98.86956521739133], [119.0, 69.56756756756758], [118.0, 88.16666666666666], [120.0, 83.60416666666667], [121.0, 42.869565217391305], [123.0, 48.55555555555556], [122.0, 46.57142857142857], [124.0, 49.328125], [125.0, 40.91666666666667], [126.0, 39.0], [127.0, 58.44444444444444], [128.0, 41.730769230769226], [129.0, 53.20512820512821], [130.0, 99.58333333333333], [131.0, 93.27272727272728], [132.0, 92.63636363636364], [133.0, 79.10526315789474], [134.0, 72.52941176470588], [135.0, 66.00000000000001], [136.0, 49.32352941176471], [137.0, 35.90909090909091], [138.0, 56.8], [139.0, 40.2857142857143], [140.0, 60.46153846153846], [141.0, 67.37777777777777], [142.0, 61.083333333333336], [143.0, 84.66666666666667], [144.0, 98.51724137931033], [145.0, 87.44444444444446], [146.0, 158.12500000000003], [148.0, 148.83333333333331], [147.0, 142.5510204081633], [149.0, 40.625], [150.0, 91.87499999999999], [151.0, 96.07692307692307], [152.0, 74.16417910447757], [153.0, 81.73684210526315], [154.0, 104.44], [159.0, 87.65517241379311], [157.0, 91.34285714285717], [158.0, 87.96551724137932], [155.0, 91.5681818181818], [156.0, 94.38356164383562], [163.0, 57.818181818181806], [164.0, 66.99999999999999], [165.0, 82.80000000000001], [166.0, 79.4], [167.0, 82.56521739130436], [162.0, 66.33333333333333], [161.0, 76.2], [160.0, 80.52173913043477], [168.0, 123.8181818181818], [169.0, 123.44736842105262], [173.0, 98.5], [172.0, 182.32608695652175], [174.0, 150.53846153846158], [171.0, 153.76595744680853], [170.0, 128.5], [175.0, 245.59090909090907], [182.0, 118.39999999999998], [181.0, 141.29411764705884], [180.0, 138.16666666666666], [179.0, 191.33333333333334], [178.0, 94.6578947368421], [183.0, 288.0], [176.0, 102.44999999999999], [177.0, 69.1521739130435], [186.0, 161.64705882352942], [187.0, 72.38461538461537], [185.0, 159.62500000000003], [188.0, 72.93442622950822], [189.0, 127.9047619047619], [184.0, 177.5], [191.0, 78.35087719298248], [190.0, 70.74999999999999], [192.0, 69.36363636363636], [193.0, 86.12121212121212], [195.0, 88.27027027027026], [196.0, 107.53571428571428], [198.0, 106.66666666666667], [199.0, 82.64516129032259], [194.0, 105.29411764705883], [197.0, 85.79120879120877], [200.0, 61.55], [201.0, 85.58620689655173], [202.0, 87.625], [203.0, 49.666666666666664], [204.0, 38.714285714285715], [205.0, 75.45000000000002], [206.0, 50.51351351351352], [207.0, 77.14285714285715], [208.0, 102.64864864864865], [209.0, 97.33333333333333], [211.0, 88.23999999999995], [210.0, 146.12499999999997], [212.0, 82.69565217391305], [213.0, 67.62121212121211], [214.0, 71.69047619047619], [215.0, 153.12765957446805], [216.0, 100.5], [217.0, 162.51724137931032], [218.0, 94.8103448275862], [219.0, 74.60869565217389], [220.0, 96.04705882352943], [221.0, 127.0428571428571], [222.0, 105.3103448275862], [223.0, 76.50602409638553], [224.0, 62.529411764705884], [225.0, 64.6], [226.0, 71.8048780487805], [227.0, 91.2972972972973], [228.0, 93.41666666666669], [231.0, 80.73684210526316], [229.0, 97.38095238095238], [230.0, 94.14285714285717], [232.0, 69.83333333333333], [233.0, 85.33333333333333], [234.0, 75.85714285714286], [235.0, 143.34285714285718], [236.0, 168.90476190476193], [237.0, 87.66666666666669], [238.0, 91.10869565217389], [239.0, 75.22500000000001], [240.0, 69.60000000000001], [241.0, 93.67441860465114], [242.0, 93.69387755102038], [243.0, 103.79452054794521], [247.0, 82.8888888888889], [246.0, 72.16666666666667], [245.0, 74.07142857142857], [244.0, 71.6], [248.0, 79.9230769230769], [250.0, 88.32], [251.0, 64.11904761904762], [252.0, 93.68750000000001], [253.0, 47.48571428571429], [254.0, 69.1320754716981], [255.0, 102.62499999999999], [249.0, 85.81249999999999], [258.0, 34.0], [257.0, 96.2906976744186], [256.0, 114.0], [259.0, 46.38636363636365], [268.0, 127.67857142857143], [269.0, 228.32500000000002], [270.0, 230.40384615384613], [271.0, 233.8769230769231], [260.0, 42.0], [261.0, 102.10344827586206], [262.0, 99.89999999999999], [263.0, 76.6470588235294], [264.0, 109.55319148936172], [265.0, 105.78571428571426], [266.0, 115.87677725118482], [267.0, 214.58333333333334], [273.0, 108.63636363636363], [272.0, 216.2891566265061], [274.0, 147.56310679611659], [275.0, 112.3125], [276.0, 88.9047619047619], [277.0, 49.38461538461539], [278.0, 230.55555555555554], [279.0, 103.75641025641023], [281.0, 201.05714285714285], [283.0, 202.5], [282.0, 91.10344827586208], [280.0, 115.70967741935485], [286.0, 118.96], [284.0, 143.6153846153846], [285.0, 117.0625], [287.0, 176.31578947368416], [288.0, 180.86363636363635], [289.0, 143.60000000000002], [292.0, 170.4081632653061], [291.0, 139.96363636363634], [300.0, 115.81395348837209], [301.0, 106.0], [302.0, 93.44186046511629], [303.0, 116.2921348314607], [293.0, 158.84126984126985], [294.0, 186.20000000000007], [290.0, 156.64999999999998], [295.0, 71.5], [296.0, 205.71999999999997], [298.0, 212.09523809523807], [297.0, 227.44], [299.0, 159.17241379310346], [306.0, 132.9714285714286], [304.0, 129.74545454545455], [307.0, 123.68303571428574], [316.0, 151.8672566371681], [317.0, 185.13043478260866], [318.0, 164.0731707317073], [319.0, 139.94594594594594], [309.0, 80.0], [308.0, 114.02666666666667], [310.0, 102.04166666666667], [305.0, 153.09523809523813], [311.0, 193.36363636363643], [315.0, 123.44370860927152], [314.0, 197.66666666666669], [313.0, 144.1], [312.0, 166.44444444444446], [321.0, 99.44736842105266], [320.0, 140.70103092783503], [322.0, 104.77777777777777], [323.0, 117.875], [324.0, 94.71428571428571], [325.0, 119.22857142857144], [326.0, 82.0], [327.0, 107.43333333333332], [328.0, 120.45161290322581], [335.0, 122.71428571428571], [334.0, 128.71052631578954], [332.0, 111.96103896103895], [333.0, 238.07246376811588], [329.0, 148.65384615384616], [330.0, 153.2558139534884], [331.0, 76.64285714285715], [351.0, 251.09523809523813], [341.0, 168.5], [340.0, 108.92982456140346], [342.0, 205.55555555555554], [344.0, 173.99999999999997], [345.0, 180.97169811320748], [347.0, 206.12765957446808], [346.0, 212.88888888888894], [348.0, 185.45098039215688], [343.0, 164.96428571428564], [336.0, 120.83333333333333], [338.0, 110.42857142857143], [337.0, 122.26666666666668], [339.0, 103.94871794871796], [350.0, 203.52991452991452], [349.0, 195.16853932584266], [352.0, 185.9871794871795], [354.0, 162.8], [355.0, 77.00000000000001], [364.0, 145.64429530201352], [365.0, 115.30645161290327], [366.0, 142.48872180451124], [367.0, 127.60256410256412], [356.0, 78.28571428571429], [353.0, 165.06779661016944], [357.0, 136.27499999999992], [358.0, 127.48837209302326], [359.0, 65.86666666666666], [360.0, 93.91891891891892], [361.0, 121.90728476821191], [362.0, 100.27272727272728], [363.0, 128.75], [369.0, 97.67241379310346], [368.0, 10.777777777777779], [370.0, 129.48913043478274], [371.0, 104.70909090909093], [372.0, 53.90476190476191], [373.0, 114.11392405063289], [375.0, 75.95918367346937], [374.0, 152.47826086956525], [376.0, 167.0681818181818], [382.0, 126.20000000000002], [383.0, 85.29032258064518], [380.0, 134.2686567164179], [381.0, 145.51219512195124], [377.0, 187.54901960784315], [378.0, 136.22058823529412], [379.0, 143.36764705882354], [385.0, 138.16071428571428], [384.0, 105.68085106382975], [392.0, 172.88059701492534], [398.0, 135.09183673469389], [399.0, 147.71134020618555], [393.0, 179.5], [394.0, 98.99999999999999], [395.0, 165.62745098039218], [396.0, 141.8106060606061], [387.0, 138.35245901639345], [386.0, 121.42187499999999], [391.0, 169.9404761904762], [389.0, 154.25619834710741], [390.0, 142.15384615384616], [388.0, 164.17910447761196], [397.0, 130.02702702702697], [413.0, 250.66101694915253], [405.0, 195.07142857142856], [404.0, 192.44000000000003], [409.0, 153.5176470588235], [400.0, 131.45882352941175], [411.0, 208.02439024390245], [410.0, 152.64800000000002], [412.0, 207.97619047619048], [403.0, 154.27586206896558], [414.0, 178.7254901960784], [415.0, 126.9423076923077], [408.0, 158.0], [406.0, 144.29106628242062], [407.0, 133.43478260869563], [401.0, 142.18390804597703], [402.0, 172.86666666666665], [423.0, 154.120253164557], [421.0, 159.3731343283582], [420.0, 141.5368421052631], [419.0, 154.3246753246754], [418.0, 149.75925925925927], [417.0, 147.08], [416.0, 139.4460431654677], [422.0, 179.75757575757575], [426.0, 165.19473684210521], [425.0, 144.1690140845071], [427.0, 160.97619047619048], [431.0, 155.45967741935482], [424.0, 163.0707070707071], [428.0, 131.13888888888889], [429.0, 157.7368421052631], [430.0, 123.1111111111111], [433.0, 148.45652173913044], [434.0, 171.41333333333336], [432.0, 176.65432098765433], [435.0, 155.34615384615387], [436.0, 173.97894736842105], [437.0, 151.65999999999994], [438.0, 139.89361702127658], [439.0, 99.0204081632653], [441.0, 253.58333333333337], [440.0, 170.4748201438848], [447.0, 209.52941176470586], [446.0, 202.9066666666667], [444.0, 164.021645021645], [445.0, 172.93939393939397], [442.0, 179.37500000000003], [443.0, 130.375], [451.0, 169.76190476190484], [449.0, 304.2325581395349], [448.0, 227.83769633507842], [450.0, 266.8064516129032], [452.0, 211.81451612903223], [454.0, 182.28063241106716], [453.0, 182.99999999999997], [455.0, 211.1797752808989], [456.0, 147.6363636363636], [462.0, 87.25581395348838], [463.0, 148.13953488372093], [460.0, 136.6153846153846], [461.0, 134.4], [457.0, 45.30769230769231], [458.0, 46.13793103448277], [459.0, 90.7], [467.0, 178.76205787781342], [464.0, 100.28571428571429], [471.0, 192.99999999999994], [470.0, 199.16216216216216], [469.0, 170.90277777777771], [468.0, 166.46666666666664], [465.0, 169.4318181818182], [466.0, 162.0379746835443], [479.0, 129.2236842105263], [476.0, 148.27374301675965], [477.0, 138.74311926605503], [475.0, 157.20944558521566], [473.0, 177.29571984435813], [472.0, 172.0736196319019], [474.0, 156.44425675675683], [478.0, 121.99999999999997], [482.0, 181.94239631336401], [483.0, 83.81371087928466], [492.0, 174.12423625254578], [493.0, 191.61635220125794], [494.0, 191.03391908459332], [495.0, 196.92696122632987], [484.0, 170.07770270270265], [485.0, 124.69747899159661], [486.0, 201.49557522123888], [487.0, 188.4183168316832], [488.0, 160.8876404494382], [480.0, 129.87864077669897], [481.0, 85.0720720720721], [489.0, 191.02882483370288], [490.0, 116.73333333333335], [491.0, 182.63275039745642], [499.0, 194.79120409906088], [500.0, 168.13789198023392], [496.0, 197.6134453781513], [497.0, 174.09045226130664], [498.0, 258.62173913043483], [1.0, 1.5]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[482.5678720000037, 165.83393600000016]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 460008.13333333336, "minX": 1.64631558E12, "maxY": 1.63817495E7, "series": [{"data": [[1.64631558E12, 7096350.833333333], [1.6463157E12, 9058399.666666666], [1.64631564E12, 1.63817495E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64631558E12, 460008.13333333336], [1.6463157E12, 586636.7], [1.64631564E12, 1061688.5]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6463157E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 62.601651772634156, "minX": 1.64631558E12, "maxY": 173.48499346292564, "series": [{"data": [[1.64631558E12, 74.35729743608461], [1.6463157E12, 87.13029610792505], [1.64631564E12, 78.76092984086782]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.64631558E12, 62.601651772634156], [1.6463157E12, 86.10560652101815], [1.64631564E12, 84.18409749513764]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.64631558E12, 152.66183105307516], [1.6463157E12, 173.48499346292564], [1.64631564E12, 167.30914189924562]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6463157E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 62.54552446527956, "minX": 1.64631558E12, "maxY": 87.10368805942372, "series": [{"data": [[1.64631558E12, 72.77484136008515], [1.6463157E12, 87.10368805942372], [1.64631564E12, 78.50661391424559]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.64631558E12, 62.54552446527956], [1.6463157E12, 86.10511686852819], [1.64631564E12, 84.17651542217381]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.64631558E12, 62.578476323222205], [1.6463157E12, 85.99227044811236], [1.64631564E12, 84.20800660994168]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6463157E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64631558E12, "maxY": 1.8137769137659188, "series": [{"data": [[1.64631558E12, 0.0], [1.6463157E12, 0.0], [1.64631564E12, 0.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.64631558E12, 1.8135987401113447], [1.6463157E12, 0.04817316416319915], [1.64631564E12, 0.6175380096066164]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.64631558E12, 1.8137769137659188], [1.6463157E12, 0.048834101978362764], [1.64631564E12, 0.618625418086774]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6463157E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64631558E12, "maxY": 1953.0, "series": [{"data": [[1.64631558E12, 1247.0], [1.6463157E12, 597.0], [1.64631564E12, 1953.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64631558E12, 1.0], [1.6463157E12, 1.0], [1.64631564E12, 1.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64631558E12, 1.0], [1.6463157E12, 1.0], [1.64631564E12, 1.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64631558E12, 1.0], [1.6463157E12, 1.0], [1.64631564E12, 1.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64631558E12, 0.0], [1.6463157E12, 0.0], [1.64631564E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64631558E12, 38.0], [1.6463157E12, 51.0], [1.64631564E12, 103.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6463157E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 6.0, "minX": 485.0, "maxY": 1670.0, "series": [{"data": [[485.0, 467.0], [1486.0, 23.0], [1505.0, 9.0], [2071.0, 63.0], [2192.0, 46.0], [2228.0, 68.0], [2320.0, 44.0], [2427.0, 44.0], [2381.0, 33.0], [2399.0, 26.0], [2463.0, 96.5], [2514.0, 80.0], [2496.0, 103.5], [2471.0, 60.0], [2575.0, 61.0], [2568.0, 101.0], [2596.0, 28.0], [2680.0, 83.0], [2616.0, 52.0], [2620.0, 45.0], [2721.0, 44.0], [2770.0, 48.0], [2797.0, 71.0], [2839.0, 51.0], [2931.0, 74.0], [2898.0, 20.0], [2904.0, 18.0], [2844.0, 46.0], [3060.0, 62.0], [2993.0, 32.0], [3099.0, 18.0], [3136.0, 33.0], [3130.0, 29.0], [3319.0, 99.0], [3215.0, 41.0], [3378.0, 75.5], [3336.0, 109.0], [3338.0, 39.0], [3453.0, 29.0], [3408.0, 59.0], [3539.0, 39.0], [3563.0, 40.5], [3652.0, 170.0], [3598.0, 125.0], [3595.0, 20.0], [3586.0, 21.0], [3815.0, 41.0], [3769.0, 41.0], [3745.0, 65.0], [3845.0, 89.0], [3858.0, 40.0], [3890.0, 21.0], [3958.0, 46.0], [4066.0, 46.0], [4032.0, 35.0], [4037.0, 33.0], [4252.0, 41.0], [4153.0, 28.0], [4272.0, 15.0], [4180.0, 33.0], [4373.0, 26.0], [4436.0, 18.0], [4425.0, 19.0], [4596.0, 6.0], [4501.0, 19.0], [4626.0, 56.0], [4833.0, 38.0], [4700.0, 14.0], [4782.0, 13.0], [4775.0, 34.0], [5024.0, 45.0], [4957.0, 26.0], [4958.0, 34.0], [5393.0, 60.0], [5564.0, 64.0], [5645.0, 77.0], [5675.0, 102.0], [5978.0, 62.0], [6198.0, 67.0], [6436.0, 102.0], [6626.0, 58.0], [6647.0, 81.0], [6828.0, 77.0], [6842.0, 92.0], [7065.0, 68.0], [7148.0, 100.0], [6965.0, 96.0], [7067.0, 37.0], [7266.0, 89.0], [7390.0, 96.0], [7384.0, 116.0], [7617.0, 91.0], [7603.0, 81.0], [7595.0, 111.0], [7587.0, 74.0], [7487.0, 101.0], [7647.0, 112.0], [7619.0, 78.0], [7634.0, 60.0], [7535.0, 105.0], [7674.0, 120.0], [7534.0, 111.0], [7673.0, 114.0], [7538.0, 112.0], [7542.0, 110.0], [7914.0, 94.0], [7694.0, 75.0], [7691.0, 105.0], [7854.0, 104.0], [7891.0, 105.0], [7906.0, 109.0], [7901.0, 92.0], [7911.0, 107.0], [7890.0, 106.0], [7779.0, 92.0], [7799.0, 105.0], [7881.0, 102.0], [7728.0, 109.0], [7723.0, 103.0], [7865.0, 106.0], [7808.0, 105.0], [7819.0, 106.0], [7963.0, 103.0], [8040.0, 90.0], [8024.0, 90.0], [8022.0, 106.0], [8146.0, 101.5], [8054.0, 107.0], [7990.0, 101.0], [7992.0, 104.0], [8129.0, 83.0], [7958.0, 108.0], [7941.0, 106.0], [8169.0, 96.0], [8115.0, 107.0], [8216.0, 95.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[485.0, 713.0], [2427.0, 569.0], [2381.0, 609.0], [2399.0, 571.0], [2463.0, 517.0], [2514.0, 534.0], [2496.0, 540.5], [2471.0, 513.0], [2575.0, 629.5], [2568.0, 597.0], [2596.0, 673.0], [2680.0, 568.0], [2616.0, 558.5], [2620.0, 684.0], [2721.0, 828.0], [2770.0, 675.0], [2797.0, 568.0], [2839.0, 569.0], [2931.0, 523.0], [2898.0, 508.0], [2904.0, 619.0], [2844.0, 638.0], [3060.0, 517.0], [2993.0, 669.0], [3136.0, 577.0], [3130.0, 532.0], [3319.0, 539.0], [3215.0, 902.0], [3378.0, 607.5], [3336.0, 569.0], [3338.0, 601.0], [3453.0, 532.0], [3408.0, 603.0], [3539.0, 634.0], [3563.0, 552.0], [3652.0, 649.0], [3598.0, 591.0], [3595.0, 537.0], [3586.0, 571.0], [3815.0, 951.0], [3769.0, 583.0], [3745.0, 633.0], [3845.0, 547.0], [3858.0, 654.0], [3890.0, 533.0], [3958.0, 583.0], [4066.0, 551.0], [4032.0, 589.0], [4037.0, 1670.0], [4252.0, 685.5], [4153.0, 880.5], [4272.0, 809.0], [4180.0, 511.0], [4373.0, 890.5], [4436.0, 665.5], [4425.0, 648.0], [4596.0, 654.0], [4501.0, 893.0], [4626.0, 583.5], [4833.0, 707.0], [4700.0, 744.0], [4782.0, 867.5], [4775.0, 1043.0], [5024.0, 554.0], [4958.0, 576.5], [5393.0, 651.0], [5564.0, 523.0], [5645.0, 575.0], [5675.0, 552.0], [5978.0, 550.0], [6436.0, 536.0], [6626.0, 661.0], [6647.0, 567.0], [6828.0, 541.5], [6842.0, 527.0], [7065.0, 668.0], [7148.0, 542.0], [6965.0, 557.0], [7266.0, 652.0], [7390.0, 812.0], [7603.0, 502.0], [7487.0, 597.5], [7617.0, 589.5], [7535.0, 521.0], [7534.0, 518.0], [7538.0, 537.0], [7890.0, 530.0], [7694.0, 523.0], [7691.0, 608.0], [7854.0, 539.0], [7891.0, 530.0], [7911.0, 526.5], [7914.0, 623.0], [7779.0, 524.0], [7799.0, 530.0], [7865.0, 534.5], [7808.0, 548.5], [7728.0, 570.0], [7723.0, 540.0], [8040.0, 633.0], [7963.0, 518.0], [8054.0, 605.0], [7990.0, 642.0], [8115.0, 608.0], [7992.0, 526.0], [8129.0, 504.0], [8216.0, 523.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 8216.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 4.0, "minX": 485.0, "maxY": 818.0, "series": [{"data": [[485.0, 445.0], [1486.0, 17.0], [1505.0, 7.0], [2071.0, 46.0], [2192.0, 36.0], [2228.0, 48.0], [2320.0, 27.0], [2427.0, 30.0], [2381.0, 24.0], [2399.0, 16.0], [2463.0, 61.0], [2514.0, 55.0], [2496.0, 52.0], [2471.0, 37.0], [2575.0, 32.0], [2568.0, 57.0], [2596.0, 14.0], [2680.0, 45.0], [2616.0, 34.0], [2620.0, 29.0], [2721.0, 29.0], [2770.0, 32.0], [2797.0, 41.0], [2839.0, 33.0], [2931.0, 44.5], [2898.0, 13.0], [2904.0, 13.0], [2844.0, 31.0], [3060.0, 33.0], [2993.0, 24.0], [3099.0, 13.0], [3136.0, 22.0], [3130.0, 20.0], [3319.0, 78.0], [3215.0, 24.0], [3378.0, 45.0], [3336.0, 75.0], [3338.0, 27.0], [3453.0, 21.0], [3408.0, 36.0], [3539.0, 24.0], [3563.0, 22.0], [3652.0, 138.0], [3598.0, 86.0], [3595.0, 14.0], [3586.0, 15.0], [3815.0, 28.0], [3769.0, 28.0], [3745.0, 47.0], [3845.0, 54.0], [3858.0, 25.0], [3890.0, 15.0], [3958.0, 33.0], [4066.0, 34.0], [4032.0, 25.0], [4037.0, 25.0], [4252.0, 27.0], [4153.0, 21.0], [4272.0, 10.0], [4180.0, 26.0], [4373.0, 23.0], [4436.0, 14.0], [4425.0, 15.0], [4596.0, 4.0], [4501.0, 12.0], [4626.0, 38.0], [4833.0, 30.0], [4700.0, 10.0], [4782.0, 10.0], [4775.0, 24.0], [5024.0, 30.0], [4957.0, 18.0], [4958.0, 24.0], [5393.0, 43.0], [5564.0, 50.0], [5645.0, 54.0], [5675.0, 80.0], [5978.0, 40.0], [6198.0, 53.0], [6436.0, 79.0], [6626.0, 44.0], [6647.0, 62.0], [6828.0, 63.0], [6842.0, 73.0], [7065.0, 55.0], [7148.0, 84.0], [6965.0, 88.0], [7067.0, 29.0], [7266.0, 73.0], [7390.0, 81.0], [7384.0, 94.0], [7617.0, 72.0], [7603.0, 67.0], [7595.0, 102.0], [7587.0, 64.0], [7487.0, 84.0], [7647.0, 95.0], [7619.0, 64.0], [7634.0, 50.0], [7535.0, 90.0], [7674.0, 95.0], [7534.0, 102.0], [7673.0, 98.0], [7538.0, 98.0], [7542.0, 96.0], [7914.0, 81.0], [7694.0, 60.0], [7691.0, 91.0], [7854.0, 91.0], [7891.0, 85.0], [7906.0, 99.0], [7901.0, 84.0], [7911.0, 92.0], [7890.0, 97.0], [7779.0, 77.0], [7799.0, 97.0], [7881.0, 95.0], [7728.0, 96.0], [7723.0, 93.0], [7865.0, 93.0], [7808.0, 96.0], [7819.0, 98.0], [7963.0, 88.0], [8040.0, 76.0], [8024.0, 76.0], [8022.0, 95.0], [8146.0, 87.0], [8054.0, 87.0], [7990.0, 91.0], [7992.0, 89.0], [8129.0, 75.0], [7958.0, 101.0], [7941.0, 95.0], [8169.0, 80.0], [8115.0, 94.0], [8216.0, 83.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[485.0, 81.0], [2427.0, 56.0], [2381.0, 121.0], [2399.0, 458.0], [2463.0, 441.0], [2514.0, 151.0], [2496.0, 311.5], [2471.0, 486.0], [2575.0, 58.0], [2568.0, 255.5], [2596.0, 69.0], [2680.0, 180.5], [2616.0, 176.0], [2620.0, 214.0], [2721.0, 193.5], [2770.0, 5.5], [2797.0, 314.0], [2839.0, 163.0], [2931.0, 338.0], [2898.0, 25.0], [2904.0, 340.0], [2844.0, 344.0], [3060.0, 471.0], [2993.0, 19.0], [3136.0, 172.0], [3130.0, 494.5], [3319.0, 395.5], [3215.0, 21.0], [3378.0, 277.0], [3336.0, 43.0], [3338.0, 239.0], [3453.0, 13.0], [3408.0, 126.0], [3539.0, 412.0], [3563.0, 473.0], [3652.0, 385.0], [3598.0, 404.0], [3595.0, 504.0], [3586.0, 69.0], [3815.0, 220.0], [3769.0, 118.0], [3745.0, 198.0], [3845.0, 136.0], [3858.0, 496.0], [3890.0, 482.5], [3958.0, 68.0], [4066.0, 233.0], [4032.0, 130.5], [4037.0, 799.0], [4252.0, 41.0], [4153.0, 164.0], [4272.0, 411.0], [4180.0, 357.0], [4373.0, 699.0], [4436.0, 393.5], [4425.0, 16.0], [4596.0, 179.0], [4501.0, 371.0], [4626.0, 250.0], [4833.0, 337.0], [4700.0, 29.0], [4782.0, 22.5], [4775.0, 818.0], [5024.0, 183.5], [4958.0, 180.5], [5393.0, 406.0], [5564.0, 263.0], [5645.0, 346.0], [5675.0, 299.0], [5978.0, 476.0], [6436.0, 397.0], [6626.0, 343.0], [6647.0, 433.0], [6828.0, 353.0], [6842.0, 449.0], [7065.0, 552.0], [7148.0, 466.0], [6965.0, 448.0], [7266.0, 580.0], [7390.0, 475.5], [7603.0, 423.0], [7487.0, 301.5], [7617.0, 216.5], [7535.0, 148.0], [7534.0, 215.0], [7538.0, 91.0], [7890.0, 103.5], [7694.0, 413.0], [7691.0, 517.5], [7854.0, 139.0], [7891.0, 437.5], [7911.0, 121.0], [7914.0, 168.5], [7779.0, 267.0], [7799.0, 298.0], [7865.0, 99.0], [7808.0, 217.5], [7728.0, 116.0], [7723.0, 453.0], [8040.0, 376.0], [7963.0, 410.0], [8054.0, 531.0], [7990.0, 144.0], [8115.0, 137.0], [7992.0, 102.0], [8129.0, 109.0], [8216.0, 99.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 8216.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2731.75, "minX": 1.64631558E12, "maxY": 6302.333333333333, "series": [{"data": [[1.64631558E12, 2731.75], [1.6463157E12, 3465.9166666666665], [1.64631564E12, 6302.333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6463157E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 910.1333333333333, "minX": 1.64631558E12, "maxY": 4195.7, "series": [{"data": [[1.64631558E12, 1817.5333333333333], [1.6463157E12, 2320.1], [1.64631564E12, 4195.7]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.64631558E12, 910.1333333333333], [1.6463157E12, 1157.2833333333333], [1.64631564E12, 2099.25]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6463157E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.3, "minX": 1.64631558E12, "maxY": 2099.25, "series": [{"data": [[1.64631558E12, 873.15], [1.6463157E12, 1158.75], [1.64631564E12, 2057.5333333333333]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.64631558E12, 35.61666666666667], [1.6463157E12, 1.3], [1.64631564E12, 40.31666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.64631558E12, 910.1333333333333], [1.6463157E12, 1157.2833333333333], [1.64631564E12, 2099.25]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.64631558E12, 908.7666666666667], [1.6463157E12, 1160.05], [1.64631564E12, 2097.85]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6463157E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.3, "minX": 1.64631558E12, "maxY": 6254.633333333333, "series": [{"data": [[1.64631558E12, 2692.05], [1.6463157E12, 3476.0833333333335], [1.64631564E12, 6254.633333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.64631558E12, 35.61666666666667], [1.6463157E12, 1.3], [1.64631564E12, 40.31666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6463157E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

