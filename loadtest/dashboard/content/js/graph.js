/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 2638.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 3.0], [2.4, 3.0], [2.5, 3.0], [2.6, 3.0], [2.7, 3.0], [2.8, 3.0], [2.9, 3.0], [3.0, 4.0], [3.1, 4.0], [3.2, 4.0], [3.3, 4.0], [3.4, 4.0], [3.5, 4.0], [3.6, 5.0], [3.7, 5.0], [3.8, 5.0], [3.9, 5.0], [4.0, 5.0], [4.1, 5.0], [4.2, 6.0], [4.3, 6.0], [4.4, 6.0], [4.5, 6.0], [4.6, 6.0], [4.7, 6.0], [4.8, 7.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 8.0], [5.5, 8.0], [5.6, 8.0], [5.7, 8.0], [5.8, 8.0], [5.9, 8.0], [6.0, 8.0], [6.1, 9.0], [6.2, 9.0], [6.3, 9.0], [6.4, 9.0], [6.5, 9.0], [6.6, 9.0], [6.7, 9.0], [6.8, 9.0], [6.9, 10.0], [7.0, 10.0], [7.1, 10.0], [7.2, 10.0], [7.3, 10.0], [7.4, 10.0], [7.5, 11.0], [7.6, 11.0], [7.7, 11.0], [7.8, 11.0], [7.9, 11.0], [8.0, 11.0], [8.1, 11.0], [8.2, 12.0], [8.3, 12.0], [8.4, 12.0], [8.5, 12.0], [8.6, 12.0], [8.7, 13.0], [8.8, 13.0], [8.9, 13.0], [9.0, 13.0], [9.1, 13.0], [9.2, 13.0], [9.3, 13.0], [9.4, 14.0], [9.5, 14.0], [9.6, 14.0], [9.7, 14.0], [9.8, 14.0], [9.9, 14.0], [10.0, 15.0], [10.1, 15.0], [10.2, 15.0], [10.3, 15.0], [10.4, 15.0], [10.5, 15.0], [10.6, 15.0], [10.7, 16.0], [10.8, 16.0], [10.9, 16.0], [11.0, 16.0], [11.1, 16.0], [11.2, 16.0], [11.3, 16.0], [11.4, 16.0], [11.5, 16.0], [11.6, 17.0], [11.7, 17.0], [11.8, 17.0], [11.9, 17.0], [12.0, 17.0], [12.1, 17.0], [12.2, 17.0], [12.3, 17.0], [12.4, 18.0], [12.5, 18.0], [12.6, 18.0], [12.7, 18.0], [12.8, 18.0], [12.9, 18.0], [13.0, 18.0], [13.1, 19.0], [13.2, 19.0], [13.3, 19.0], [13.4, 19.0], [13.5, 19.0], [13.6, 19.0], [13.7, 19.0], [13.8, 20.0], [13.9, 20.0], [14.0, 20.0], [14.1, 20.0], [14.2, 20.0], [14.3, 20.0], [14.4, 21.0], [14.5, 21.0], [14.6, 21.0], [14.7, 21.0], [14.8, 21.0], [14.9, 21.0], [15.0, 22.0], [15.1, 22.0], [15.2, 22.0], [15.3, 22.0], [15.4, 22.0], [15.5, 22.0], [15.6, 22.0], [15.7, 23.0], [15.8, 23.0], [15.9, 23.0], [16.0, 23.0], [16.1, 23.0], [16.2, 23.0], [16.3, 23.0], [16.4, 23.0], [16.5, 24.0], [16.6, 24.0], [16.7, 24.0], [16.8, 24.0], [16.9, 24.0], [17.0, 24.0], [17.1, 24.0], [17.2, 24.0], [17.3, 25.0], [17.4, 25.0], [17.5, 25.0], [17.6, 25.0], [17.7, 25.0], [17.8, 25.0], [17.9, 25.0], [18.0, 25.0], [18.1, 26.0], [18.2, 26.0], [18.3, 26.0], [18.4, 26.0], [18.5, 26.0], [18.6, 26.0], [18.7, 26.0], [18.8, 26.0], [18.9, 27.0], [19.0, 27.0], [19.1, 27.0], [19.2, 27.0], [19.3, 27.0], [19.4, 27.0], [19.5, 27.0], [19.6, 28.0], [19.7, 28.0], [19.8, 28.0], [19.9, 28.0], [20.0, 28.0], [20.1, 28.0], [20.2, 28.0], [20.3, 29.0], [20.4, 29.0], [20.5, 29.0], [20.6, 29.0], [20.7, 29.0], [20.8, 29.0], [20.9, 29.0], [21.0, 30.0], [21.1, 30.0], [21.2, 30.0], [21.3, 30.0], [21.4, 30.0], [21.5, 30.0], [21.6, 30.0], [21.7, 31.0], [21.8, 31.0], [21.9, 31.0], [22.0, 31.0], [22.1, 31.0], [22.2, 31.0], [22.3, 31.0], [22.4, 31.0], [22.5, 32.0], [22.6, 32.0], [22.7, 32.0], [22.8, 32.0], [22.9, 32.0], [23.0, 32.0], [23.1, 32.0], [23.2, 32.0], [23.3, 33.0], [23.4, 33.0], [23.5, 33.0], [23.6, 33.0], [23.7, 33.0], [23.8, 33.0], [23.9, 33.0], [24.0, 33.0], [24.1, 33.0], [24.2, 34.0], [24.3, 34.0], [24.4, 34.0], [24.5, 34.0], [24.6, 34.0], [24.7, 34.0], [24.8, 34.0], [24.9, 34.0], [25.0, 35.0], [25.1, 35.0], [25.2, 35.0], [25.3, 35.0], [25.4, 35.0], [25.5, 35.0], [25.6, 35.0], [25.7, 36.0], [25.8, 36.0], [25.9, 36.0], [26.0, 36.0], [26.1, 36.0], [26.2, 36.0], [26.3, 36.0], [26.4, 36.0], [26.5, 37.0], [26.6, 37.0], [26.7, 37.0], [26.8, 37.0], [26.9, 37.0], [27.0, 37.0], [27.1, 37.0], [27.2, 38.0], [27.3, 38.0], [27.4, 38.0], [27.5, 38.0], [27.6, 38.0], [27.7, 38.0], [27.8, 38.0], [27.9, 39.0], [28.0, 39.0], [28.1, 39.0], [28.2, 39.0], [28.3, 39.0], [28.4, 39.0], [28.5, 39.0], [28.6, 39.0], [28.7, 40.0], [28.8, 40.0], [28.9, 40.0], [29.0, 40.0], [29.1, 40.0], [29.2, 40.0], [29.3, 40.0], [29.4, 40.0], [29.5, 40.0], [29.6, 41.0], [29.7, 41.0], [29.8, 41.0], [29.9, 41.0], [30.0, 41.0], [30.1, 41.0], [30.2, 41.0], [30.3, 41.0], [30.4, 42.0], [30.5, 42.0], [30.6, 42.0], [30.7, 42.0], [30.8, 42.0], [30.9, 42.0], [31.0, 42.0], [31.1, 42.0], [31.2, 42.0], [31.3, 43.0], [31.4, 43.0], [31.5, 43.0], [31.6, 43.0], [31.7, 43.0], [31.8, 43.0], [31.9, 43.0], [32.0, 43.0], [32.1, 44.0], [32.2, 44.0], [32.3, 44.0], [32.4, 44.0], [32.5, 44.0], [32.6, 44.0], [32.7, 44.0], [32.8, 44.0], [32.9, 45.0], [33.0, 45.0], [33.1, 45.0], [33.2, 45.0], [33.3, 45.0], [33.4, 45.0], [33.5, 45.0], [33.6, 45.0], [33.7, 46.0], [33.8, 46.0], [33.9, 46.0], [34.0, 46.0], [34.1, 46.0], [34.2, 46.0], [34.3, 46.0], [34.4, 47.0], [34.5, 47.0], [34.6, 47.0], [34.7, 47.0], [34.8, 47.0], [34.9, 47.0], [35.0, 47.0], [35.1, 47.0], [35.2, 48.0], [35.3, 48.0], [35.4, 48.0], [35.5, 48.0], [35.6, 48.0], [35.7, 48.0], [35.8, 48.0], [35.9, 48.0], [36.0, 48.0], [36.1, 49.0], [36.2, 49.0], [36.3, 49.0], [36.4, 49.0], [36.5, 49.0], [36.6, 49.0], [36.7, 49.0], [36.8, 49.0], [36.9, 49.0], [37.0, 50.0], [37.1, 50.0], [37.2, 50.0], [37.3, 50.0], [37.4, 50.0], [37.5, 50.0], [37.6, 50.0], [37.7, 50.0], [37.8, 51.0], [37.9, 51.0], [38.0, 51.0], [38.1, 51.0], [38.2, 51.0], [38.3, 51.0], [38.4, 51.0], [38.5, 51.0], [38.6, 52.0], [38.7, 52.0], [38.8, 52.0], [38.9, 52.0], [39.0, 52.0], [39.1, 52.0], [39.2, 52.0], [39.3, 52.0], [39.4, 53.0], [39.5, 53.0], [39.6, 53.0], [39.7, 53.0], [39.8, 53.0], [39.9, 53.0], [40.0, 53.0], [40.1, 54.0], [40.2, 54.0], [40.3, 54.0], [40.4, 54.0], [40.5, 54.0], [40.6, 54.0], [40.7, 54.0], [40.8, 54.0], [40.9, 54.0], [41.0, 55.0], [41.1, 55.0], [41.2, 55.0], [41.3, 55.0], [41.4, 55.0], [41.5, 55.0], [41.6, 55.0], [41.7, 55.0], [41.8, 56.0], [41.9, 56.0], [42.0, 56.0], [42.1, 56.0], [42.2, 56.0], [42.3, 56.0], [42.4, 56.0], [42.5, 56.0], [42.6, 56.0], [42.7, 57.0], [42.8, 57.0], [42.9, 57.0], [43.0, 57.0], [43.1, 57.0], [43.2, 57.0], [43.3, 57.0], [43.4, 57.0], [43.5, 57.0], [43.6, 58.0], [43.7, 58.0], [43.8, 58.0], [43.9, 58.0], [44.0, 58.0], [44.1, 58.0], [44.2, 58.0], [44.3, 58.0], [44.4, 59.0], [44.5, 59.0], [44.6, 59.0], [44.7, 59.0], [44.8, 59.0], [44.9, 59.0], [45.0, 59.0], [45.1, 59.0], [45.2, 60.0], [45.3, 60.0], [45.4, 60.0], [45.5, 60.0], [45.6, 60.0], [45.7, 60.0], [45.8, 60.0], [45.9, 60.0], [46.0, 61.0], [46.1, 61.0], [46.2, 61.0], [46.3, 61.0], [46.4, 61.0], [46.5, 61.0], [46.6, 61.0], [46.7, 61.0], [46.8, 62.0], [46.9, 62.0], [47.0, 62.0], [47.1, 62.0], [47.2, 62.0], [47.3, 62.0], [47.4, 62.0], [47.5, 63.0], [47.6, 63.0], [47.7, 63.0], [47.8, 63.0], [47.9, 63.0], [48.0, 63.0], [48.1, 63.0], [48.2, 63.0], [48.3, 63.0], [48.4, 64.0], [48.5, 64.0], [48.6, 64.0], [48.7, 64.0], [48.8, 64.0], [48.9, 64.0], [49.0, 64.0], [49.1, 64.0], [49.2, 65.0], [49.3, 65.0], [49.4, 65.0], [49.5, 65.0], [49.6, 65.0], [49.7, 65.0], [49.8, 65.0], [49.9, 65.0], [50.0, 65.0], [50.1, 66.0], [50.2, 66.0], [50.3, 66.0], [50.4, 66.0], [50.5, 66.0], [50.6, 66.0], [50.7, 66.0], [50.8, 66.0], [50.9, 67.0], [51.0, 67.0], [51.1, 67.0], [51.2, 67.0], [51.3, 67.0], [51.4, 67.0], [51.5, 67.0], [51.6, 67.0], [51.7, 68.0], [51.8, 68.0], [51.9, 68.0], [52.0, 68.0], [52.1, 68.0], [52.2, 68.0], [52.3, 68.0], [52.4, 68.0], [52.5, 69.0], [52.6, 69.0], [52.7, 69.0], [52.8, 69.0], [52.9, 69.0], [53.0, 69.0], [53.1, 69.0], [53.2, 69.0], [53.3, 70.0], [53.4, 70.0], [53.5, 70.0], [53.6, 70.0], [53.7, 70.0], [53.8, 70.0], [53.9, 70.0], [54.0, 70.0], [54.1, 71.0], [54.2, 71.0], [54.3, 71.0], [54.4, 71.0], [54.5, 71.0], [54.6, 71.0], [54.7, 71.0], [54.8, 71.0], [54.9, 72.0], [55.0, 72.0], [55.1, 72.0], [55.2, 72.0], [55.3, 72.0], [55.4, 72.0], [55.5, 72.0], [55.6, 72.0], [55.7, 72.0], [55.8, 73.0], [55.9, 73.0], [56.0, 73.0], [56.1, 73.0], [56.2, 73.0], [56.3, 73.0], [56.4, 73.0], [56.5, 73.0], [56.6, 74.0], [56.7, 74.0], [56.8, 74.0], [56.9, 74.0], [57.0, 74.0], [57.1, 74.0], [57.2, 74.0], [57.3, 74.0], [57.4, 75.0], [57.5, 75.0], [57.6, 75.0], [57.7, 75.0], [57.8, 75.0], [57.9, 75.0], [58.0, 75.0], [58.1, 75.0], [58.2, 76.0], [58.3, 76.0], [58.4, 76.0], [58.5, 76.0], [58.6, 76.0], [58.7, 76.0], [58.8, 76.0], [58.9, 77.0], [59.0, 77.0], [59.1, 77.0], [59.2, 77.0], [59.3, 77.0], [59.4, 77.0], [59.5, 77.0], [59.6, 78.0], [59.7, 78.0], [59.8, 78.0], [59.9, 78.0], [60.0, 78.0], [60.1, 78.0], [60.2, 78.0], [60.3, 78.0], [60.4, 79.0], [60.5, 79.0], [60.6, 79.0], [60.7, 79.0], [60.8, 79.0], [60.9, 79.0], [61.0, 79.0], [61.1, 79.0], [61.2, 80.0], [61.3, 80.0], [61.4, 80.0], [61.5, 80.0], [61.6, 80.0], [61.7, 80.0], [61.8, 80.0], [61.9, 81.0], [62.0, 81.0], [62.1, 81.0], [62.2, 81.0], [62.3, 81.0], [62.4, 81.0], [62.5, 81.0], [62.6, 81.0], [62.7, 82.0], [62.8, 82.0], [62.9, 82.0], [63.0, 82.0], [63.1, 82.0], [63.2, 82.0], [63.3, 82.0], [63.4, 83.0], [63.5, 83.0], [63.6, 83.0], [63.7, 83.0], [63.8, 83.0], [63.9, 83.0], [64.0, 83.0], [64.1, 84.0], [64.2, 84.0], [64.3, 84.0], [64.4, 84.0], [64.5, 84.0], [64.6, 84.0], [64.7, 84.0], [64.8, 85.0], [64.9, 85.0], [65.0, 85.0], [65.1, 85.0], [65.2, 85.0], [65.3, 85.0], [65.4, 85.0], [65.5, 86.0], [65.6, 86.0], [65.7, 86.0], [65.8, 86.0], [65.9, 86.0], [66.0, 86.0], [66.1, 86.0], [66.2, 87.0], [66.3, 87.0], [66.4, 87.0], [66.5, 87.0], [66.6, 87.0], [66.7, 87.0], [66.8, 87.0], [66.9, 88.0], [67.0, 88.0], [67.1, 88.0], [67.2, 88.0], [67.3, 88.0], [67.4, 88.0], [67.5, 88.0], [67.6, 89.0], [67.7, 89.0], [67.8, 89.0], [67.9, 89.0], [68.0, 89.0], [68.1, 89.0], [68.2, 89.0], [68.3, 90.0], [68.4, 90.0], [68.5, 90.0], [68.6, 90.0], [68.7, 90.0], [68.8, 90.0], [68.9, 91.0], [69.0, 91.0], [69.1, 91.0], [69.2, 91.0], [69.3, 91.0], [69.4, 91.0], [69.5, 91.0], [69.6, 92.0], [69.7, 92.0], [69.8, 92.0], [69.9, 92.0], [70.0, 92.0], [70.1, 92.0], [70.2, 93.0], [70.3, 93.0], [70.4, 93.0], [70.5, 93.0], [70.6, 93.0], [70.7, 93.0], [70.8, 94.0], [70.9, 94.0], [71.0, 94.0], [71.1, 94.0], [71.2, 94.0], [71.3, 94.0], [71.4, 95.0], [71.5, 95.0], [71.6, 95.0], [71.7, 95.0], [71.8, 95.0], [71.9, 95.0], [72.0, 96.0], [72.1, 96.0], [72.2, 96.0], [72.3, 96.0], [72.4, 96.0], [72.5, 96.0], [72.6, 97.0], [72.7, 97.0], [72.8, 97.0], [72.9, 97.0], [73.0, 97.0], [73.1, 97.0], [73.2, 98.0], [73.3, 98.0], [73.4, 98.0], [73.5, 98.0], [73.6, 98.0], [73.7, 99.0], [73.8, 99.0], [73.9, 99.0], [74.0, 99.0], [74.1, 99.0], [74.2, 100.0], [74.3, 100.0], [74.4, 100.0], [74.5, 100.0], [74.6, 100.0], [74.7, 101.0], [74.8, 101.0], [74.9, 101.0], [75.0, 101.0], [75.1, 101.0], [75.2, 102.0], [75.3, 102.0], [75.4, 102.0], [75.5, 102.0], [75.6, 102.0], [75.7, 103.0], [75.8, 103.0], [75.9, 103.0], [76.0, 103.0], [76.1, 103.0], [76.2, 104.0], [76.3, 104.0], [76.4, 104.0], [76.5, 104.0], [76.6, 104.0], [76.7, 105.0], [76.8, 105.0], [76.9, 105.0], [77.0, 105.0], [77.1, 106.0], [77.2, 106.0], [77.3, 106.0], [77.4, 106.0], [77.5, 106.0], [77.6, 107.0], [77.7, 107.0], [77.8, 107.0], [77.9, 107.0], [78.0, 108.0], [78.1, 108.0], [78.2, 108.0], [78.3, 108.0], [78.4, 109.0], [78.5, 109.0], [78.6, 109.0], [78.7, 109.0], [78.8, 110.0], [78.9, 110.0], [79.0, 110.0], [79.1, 110.0], [79.2, 111.0], [79.3, 111.0], [79.4, 111.0], [79.5, 111.0], [79.6, 112.0], [79.7, 112.0], [79.8, 112.0], [79.9, 113.0], [80.0, 113.0], [80.1, 113.0], [80.2, 113.0], [80.3, 114.0], [80.4, 114.0], [80.5, 114.0], [80.6, 114.0], [80.7, 115.0], [80.8, 115.0], [80.9, 115.0], [81.0, 116.0], [81.1, 116.0], [81.2, 116.0], [81.3, 116.0], [81.4, 117.0], [81.5, 117.0], [81.6, 117.0], [81.7, 118.0], [81.8, 118.0], [81.9, 118.0], [82.0, 119.0], [82.1, 119.0], [82.2, 119.0], [82.3, 119.0], [82.4, 120.0], [82.5, 120.0], [82.6, 120.0], [82.7, 121.0], [82.8, 121.0], [82.9, 121.0], [83.0, 122.0], [83.1, 122.0], [83.2, 122.0], [83.3, 123.0], [83.4, 123.0], [83.5, 123.0], [83.6, 124.0], [83.7, 124.0], [83.8, 124.0], [83.9, 125.0], [84.0, 125.0], [84.1, 126.0], [84.2, 126.0], [84.3, 126.0], [84.4, 127.0], [84.5, 127.0], [84.6, 128.0], [84.7, 128.0], [84.8, 128.0], [84.9, 129.0], [85.0, 129.0], [85.1, 130.0], [85.2, 130.0], [85.3, 130.0], [85.4, 131.0], [85.5, 131.0], [85.6, 132.0], [85.7, 132.0], [85.8, 133.0], [85.9, 133.0], [86.0, 134.0], [86.1, 134.0], [86.2, 135.0], [86.3, 135.0], [86.4, 136.0], [86.5, 136.0], [86.6, 137.0], [86.7, 137.0], [86.8, 138.0], [86.9, 138.0], [87.0, 139.0], [87.1, 139.0], [87.2, 140.0], [87.3, 140.0], [87.4, 141.0], [87.5, 142.0], [87.6, 142.0], [87.7, 143.0], [87.8, 143.0], [87.9, 144.0], [88.0, 145.0], [88.1, 145.0], [88.2, 146.0], [88.3, 146.0], [88.4, 147.0], [88.5, 148.0], [88.6, 148.0], [88.7, 149.0], [88.8, 150.0], [88.9, 151.0], [89.0, 151.0], [89.1, 152.0], [89.2, 153.0], [89.3, 153.0], [89.4, 154.0], [89.5, 155.0], [89.6, 156.0], [89.7, 156.0], [89.8, 157.0], [89.9, 158.0], [90.0, 159.0], [90.1, 160.0], [90.2, 161.0], [90.3, 162.0], [90.4, 163.0], [90.5, 163.0], [90.6, 164.0], [90.7, 165.0], [90.8, 166.0], [90.9, 167.0], [91.0, 168.0], [91.1, 169.0], [91.2, 170.0], [91.3, 171.0], [91.4, 172.0], [91.5, 173.0], [91.6, 174.0], [91.7, 176.0], [91.8, 177.0], [91.9, 178.0], [92.0, 179.0], [92.1, 180.0], [92.2, 182.0], [92.3, 183.0], [92.4, 184.0], [92.5, 185.0], [92.6, 187.0], [92.7, 188.0], [92.8, 189.0], [92.9, 191.0], [93.0, 192.0], [93.1, 194.0], [93.2, 195.0], [93.3, 196.0], [93.4, 198.0], [93.5, 199.0], [93.6, 201.0], [93.7, 202.0], [93.8, 204.0], [93.9, 205.0], [94.0, 207.0], [94.1, 208.0], [94.2, 210.0], [94.3, 212.0], [94.4, 214.0], [94.5, 216.0], [94.6, 218.0], [94.7, 220.0], [94.8, 222.0], [94.9, 224.0], [95.0, 226.0], [95.1, 228.0], [95.2, 230.0], [95.3, 233.0], [95.4, 235.0], [95.5, 238.0], [95.6, 240.0], [95.7, 243.0], [95.8, 246.0], [95.9, 249.0], [96.0, 251.0], [96.1, 255.0], [96.2, 258.0], [96.3, 261.0], [96.4, 264.0], [96.5, 267.0], [96.6, 270.0], [96.7, 274.0], [96.8, 277.0], [96.9, 282.0], [97.0, 286.0], [97.1, 290.0], [97.2, 294.0], [97.3, 298.0], [97.4, 303.0], [97.5, 308.0], [97.6, 314.0], [97.7, 319.0], [97.8, 325.0], [97.9, 330.0], [98.0, 337.0], [98.1, 343.0], [98.2, 350.0], [98.3, 357.0], [98.4, 365.0], [98.5, 374.0], [98.6, 384.0], [98.7, 395.0], [98.8, 407.0], [98.9, 420.0], [99.0, 437.0], [99.1, 459.0], [99.2, 483.0], [99.3, 511.0], [99.4, 545.0], [99.5, 580.0], [99.6, 623.0], [99.7, 669.0], [99.8, 792.0], [99.9, 1121.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 3.0], [3.0, 3.0], [3.1, 3.0], [3.2, 3.0], [3.3, 3.0], [3.4, 3.0], [3.5, 3.0], [3.6, 3.0], [3.7, 4.0], [3.8, 4.0], [3.9, 4.0], [4.0, 4.0], [4.1, 4.0], [4.2, 4.0], [4.3, 4.0], [4.4, 4.0], [4.5, 5.0], [4.6, 5.0], [4.7, 5.0], [4.8, 5.0], [4.9, 5.0], [5.0, 5.0], [5.1, 5.0], [5.2, 5.0], [5.3, 6.0], [5.4, 6.0], [5.5, 6.0], [5.6, 6.0], [5.7, 6.0], [5.8, 6.0], [5.9, 6.0], [6.0, 6.0], [6.1, 7.0], [6.2, 7.0], [6.3, 7.0], [6.4, 7.0], [6.5, 7.0], [6.6, 7.0], [6.7, 7.0], [6.8, 8.0], [6.9, 8.0], [7.0, 8.0], [7.1, 8.0], [7.2, 8.0], [7.3, 8.0], [7.4, 8.0], [7.5, 8.0], [7.6, 8.0], [7.7, 9.0], [7.8, 9.0], [7.9, 9.0], [8.0, 9.0], [8.1, 9.0], [8.2, 9.0], [8.3, 9.0], [8.4, 9.0], [8.5, 9.0], [8.6, 10.0], [8.7, 10.0], [8.8, 10.0], [8.9, 10.0], [9.0, 10.0], [9.1, 10.0], [9.2, 10.0], [9.3, 11.0], [9.4, 11.0], [9.5, 11.0], [9.6, 11.0], [9.7, 11.0], [9.8, 11.0], [9.9, 11.0], [10.0, 12.0], [10.1, 12.0], [10.2, 12.0], [10.3, 12.0], [10.4, 12.0], [10.5, 12.0], [10.6, 13.0], [10.7, 13.0], [10.8, 13.0], [10.9, 13.0], [11.0, 13.0], [11.1, 13.0], [11.2, 13.0], [11.3, 14.0], [11.4, 14.0], [11.5, 14.0], [11.6, 14.0], [11.7, 14.0], [11.8, 14.0], [11.9, 14.0], [12.0, 15.0], [12.1, 15.0], [12.2, 15.0], [12.3, 15.0], [12.4, 15.0], [12.5, 15.0], [12.6, 15.0], [12.7, 15.0], [12.8, 16.0], [12.9, 16.0], [13.0, 16.0], [13.1, 16.0], [13.2, 16.0], [13.3, 16.0], [13.4, 16.0], [13.5, 16.0], [13.6, 17.0], [13.7, 17.0], [13.8, 17.0], [13.9, 17.0], [14.0, 17.0], [14.1, 17.0], [14.2, 17.0], [14.3, 17.0], [14.4, 17.0], [14.5, 18.0], [14.6, 18.0], [14.7, 18.0], [14.8, 18.0], [14.9, 18.0], [15.0, 18.0], [15.1, 18.0], [15.2, 18.0], [15.3, 19.0], [15.4, 19.0], [15.5, 19.0], [15.6, 19.0], [15.7, 19.0], [15.8, 19.0], [15.9, 20.0], [16.0, 20.0], [16.1, 20.0], [16.2, 20.0], [16.3, 20.0], [16.4, 20.0], [16.5, 20.0], [16.6, 21.0], [16.7, 21.0], [16.8, 21.0], [16.9, 21.0], [17.0, 21.0], [17.1, 21.0], [17.2, 22.0], [17.3, 22.0], [17.4, 22.0], [17.5, 22.0], [17.6, 22.0], [17.7, 22.0], [17.8, 22.0], [17.9, 23.0], [18.0, 23.0], [18.1, 23.0], [18.2, 23.0], [18.3, 23.0], [18.4, 23.0], [18.5, 23.0], [18.6, 24.0], [18.7, 24.0], [18.8, 24.0], [18.9, 24.0], [19.0, 24.0], [19.1, 24.0], [19.2, 24.0], [19.3, 24.0], [19.4, 25.0], [19.5, 25.0], [19.6, 25.0], [19.7, 25.0], [19.8, 25.0], [19.9, 25.0], [20.0, 25.0], [20.1, 25.0], [20.2, 25.0], [20.3, 26.0], [20.4, 26.0], [20.5, 26.0], [20.6, 26.0], [20.7, 26.0], [20.8, 26.0], [20.9, 26.0], [21.0, 27.0], [21.1, 27.0], [21.2, 27.0], [21.3, 27.0], [21.4, 27.0], [21.5, 27.0], [21.6, 27.0], [21.7, 28.0], [21.8, 28.0], [21.9, 28.0], [22.0, 28.0], [22.1, 28.0], [22.2, 28.0], [22.3, 28.0], [22.4, 29.0], [22.5, 29.0], [22.6, 29.0], [22.7, 29.0], [22.8, 29.0], [22.9, 29.0], [23.0, 30.0], [23.1, 30.0], [23.2, 30.0], [23.3, 30.0], [23.4, 30.0], [23.5, 30.0], [23.6, 30.0], [23.7, 31.0], [23.8, 31.0], [23.9, 31.0], [24.0, 31.0], [24.1, 31.0], [24.2, 31.0], [24.3, 31.0], [24.4, 32.0], [24.5, 32.0], [24.6, 32.0], [24.7, 32.0], [24.8, 32.0], [24.9, 32.0], [25.0, 32.0], [25.1, 32.0], [25.2, 33.0], [25.3, 33.0], [25.4, 33.0], [25.5, 33.0], [25.6, 33.0], [25.7, 33.0], [25.8, 33.0], [25.9, 34.0], [26.0, 34.0], [26.1, 34.0], [26.2, 34.0], [26.3, 34.0], [26.4, 34.0], [26.5, 34.0], [26.6, 35.0], [26.7, 35.0], [26.8, 35.0], [26.9, 35.0], [27.0, 35.0], [27.1, 35.0], [27.2, 35.0], [27.3, 36.0], [27.4, 36.0], [27.5, 36.0], [27.6, 36.0], [27.7, 36.0], [27.8, 36.0], [27.9, 36.0], [28.0, 37.0], [28.1, 37.0], [28.2, 37.0], [28.3, 37.0], [28.4, 37.0], [28.5, 37.0], [28.6, 38.0], [28.7, 38.0], [28.8, 38.0], [28.9, 38.0], [29.0, 38.0], [29.1, 38.0], [29.2, 39.0], [29.3, 39.0], [29.4, 39.0], [29.5, 39.0], [29.6, 39.0], [29.7, 39.0], [29.8, 39.0], [29.9, 39.0], [30.0, 40.0], [30.1, 40.0], [30.2, 40.0], [30.3, 40.0], [30.4, 40.0], [30.5, 40.0], [30.6, 40.0], [30.7, 41.0], [30.8, 41.0], [30.9, 41.0], [31.0, 41.0], [31.1, 41.0], [31.2, 41.0], [31.3, 41.0], [31.4, 41.0], [31.5, 42.0], [31.6, 42.0], [31.7, 42.0], [31.8, 42.0], [31.9, 42.0], [32.0, 42.0], [32.1, 42.0], [32.2, 43.0], [32.3, 43.0], [32.4, 43.0], [32.5, 43.0], [32.6, 43.0], [32.7, 43.0], [32.8, 43.0], [32.9, 44.0], [33.0, 44.0], [33.1, 44.0], [33.2, 44.0], [33.3, 44.0], [33.4, 44.0], [33.5, 44.0], [33.6, 45.0], [33.7, 45.0], [33.8, 45.0], [33.9, 45.0], [34.0, 45.0], [34.1, 45.0], [34.2, 46.0], [34.3, 46.0], [34.4, 46.0], [34.5, 46.0], [34.6, 46.0], [34.7, 46.0], [34.8, 46.0], [34.9, 47.0], [35.0, 47.0], [35.1, 47.0], [35.2, 47.0], [35.3, 47.0], [35.4, 47.0], [35.5, 47.0], [35.6, 48.0], [35.7, 48.0], [35.8, 48.0], [35.9, 48.0], [36.0, 48.0], [36.1, 48.0], [36.2, 48.0], [36.3, 49.0], [36.4, 49.0], [36.5, 49.0], [36.6, 49.0], [36.7, 49.0], [36.8, 49.0], [36.9, 49.0], [37.0, 50.0], [37.1, 50.0], [37.2, 50.0], [37.3, 50.0], [37.4, 50.0], [37.5, 50.0], [37.6, 50.0], [37.7, 51.0], [37.8, 51.0], [37.9, 51.0], [38.0, 51.0], [38.1, 51.0], [38.2, 51.0], [38.3, 51.0], [38.4, 52.0], [38.5, 52.0], [38.6, 52.0], [38.7, 52.0], [38.8, 52.0], [38.9, 52.0], [39.0, 52.0], [39.1, 53.0], [39.2, 53.0], [39.3, 53.0], [39.4, 53.0], [39.5, 53.0], [39.6, 53.0], [39.7, 54.0], [39.8, 54.0], [39.9, 54.0], [40.0, 54.0], [40.1, 54.0], [40.2, 54.0], [40.3, 54.0], [40.4, 55.0], [40.5, 55.0], [40.6, 55.0], [40.7, 55.0], [40.8, 55.0], [40.9, 55.0], [41.0, 55.0], [41.1, 56.0], [41.2, 56.0], [41.3, 56.0], [41.4, 56.0], [41.5, 56.0], [41.6, 56.0], [41.7, 57.0], [41.8, 57.0], [41.9, 57.0], [42.0, 57.0], [42.1, 57.0], [42.2, 57.0], [42.3, 57.0], [42.4, 57.0], [42.5, 58.0], [42.6, 58.0], [42.7, 58.0], [42.8, 58.0], [42.9, 58.0], [43.0, 58.0], [43.1, 59.0], [43.2, 59.0], [43.3, 59.0], [43.4, 59.0], [43.5, 59.0], [43.6, 59.0], [43.7, 59.0], [43.8, 60.0], [43.9, 60.0], [44.0, 60.0], [44.1, 60.0], [44.2, 60.0], [44.3, 60.0], [44.4, 60.0], [44.5, 61.0], [44.6, 61.0], [44.7, 61.0], [44.8, 61.0], [44.9, 61.0], [45.0, 61.0], [45.1, 62.0], [45.2, 62.0], [45.3, 62.0], [45.4, 62.0], [45.5, 62.0], [45.6, 62.0], [45.7, 62.0], [45.8, 63.0], [45.9, 63.0], [46.0, 63.0], [46.1, 63.0], [46.2, 63.0], [46.3, 63.0], [46.4, 63.0], [46.5, 64.0], [46.6, 64.0], [46.7, 64.0], [46.8, 64.0], [46.9, 64.0], [47.0, 64.0], [47.1, 65.0], [47.2, 65.0], [47.3, 65.0], [47.4, 65.0], [47.5, 65.0], [47.6, 65.0], [47.7, 65.0], [47.8, 66.0], [47.9, 66.0], [48.0, 66.0], [48.1, 66.0], [48.2, 66.0], [48.3, 66.0], [48.4, 67.0], [48.5, 67.0], [48.6, 67.0], [48.7, 67.0], [48.8, 67.0], [48.9, 67.0], [49.0, 68.0], [49.1, 68.0], [49.2, 68.0], [49.3, 68.0], [49.4, 68.0], [49.5, 68.0], [49.6, 68.0], [49.7, 69.0], [49.8, 69.0], [49.9, 69.0], [50.0, 69.0], [50.1, 69.0], [50.2, 69.0], [50.3, 70.0], [50.4, 70.0], [50.5, 70.0], [50.6, 70.0], [50.7, 70.0], [50.8, 70.0], [50.9, 71.0], [51.0, 71.0], [51.1, 71.0], [51.2, 71.0], [51.3, 71.0], [51.4, 71.0], [51.5, 71.0], [51.6, 72.0], [51.7, 72.0], [51.8, 72.0], [51.9, 72.0], [52.0, 72.0], [52.1, 72.0], [52.2, 73.0], [52.3, 73.0], [52.4, 73.0], [52.5, 73.0], [52.6, 73.0], [52.7, 73.0], [52.8, 73.0], [52.9, 74.0], [53.0, 74.0], [53.1, 74.0], [53.2, 74.0], [53.3, 74.0], [53.4, 74.0], [53.5, 75.0], [53.6, 75.0], [53.7, 75.0], [53.8, 75.0], [53.9, 75.0], [54.0, 75.0], [54.1, 75.0], [54.2, 76.0], [54.3, 76.0], [54.4, 76.0], [54.5, 76.0], [54.6, 76.0], [54.7, 76.0], [54.8, 77.0], [54.9, 77.0], [55.0, 77.0], [55.1, 77.0], [55.2, 77.0], [55.3, 77.0], [55.4, 78.0], [55.5, 78.0], [55.6, 78.0], [55.7, 78.0], [55.8, 78.0], [55.9, 78.0], [56.0, 79.0], [56.1, 79.0], [56.2, 79.0], [56.3, 79.0], [56.4, 79.0], [56.5, 79.0], [56.6, 79.0], [56.7, 80.0], [56.8, 80.0], [56.9, 80.0], [57.0, 80.0], [57.1, 80.0], [57.2, 80.0], [57.3, 80.0], [57.4, 81.0], [57.5, 81.0], [57.6, 81.0], [57.7, 81.0], [57.8, 81.0], [57.9, 81.0], [58.0, 82.0], [58.1, 82.0], [58.2, 82.0], [58.3, 82.0], [58.4, 82.0], [58.5, 82.0], [58.6, 83.0], [58.7, 83.0], [58.8, 83.0], [58.9, 83.0], [59.0, 83.0], [59.1, 83.0], [59.2, 84.0], [59.3, 84.0], [59.4, 84.0], [59.5, 84.0], [59.6, 84.0], [59.7, 84.0], [59.8, 85.0], [59.9, 85.0], [60.0, 85.0], [60.1, 85.0], [60.2, 85.0], [60.3, 85.0], [60.4, 86.0], [60.5, 86.0], [60.6, 86.0], [60.7, 86.0], [60.8, 86.0], [60.9, 86.0], [61.0, 87.0], [61.1, 87.0], [61.2, 87.0], [61.3, 87.0], [61.4, 87.0], [61.5, 87.0], [61.6, 88.0], [61.7, 88.0], [61.8, 88.0], [61.9, 88.0], [62.0, 88.0], [62.1, 88.0], [62.2, 89.0], [62.3, 89.0], [62.4, 89.0], [62.5, 89.0], [62.6, 89.0], [62.7, 89.0], [62.8, 90.0], [62.9, 90.0], [63.0, 90.0], [63.1, 90.0], [63.2, 90.0], [63.3, 90.0], [63.4, 91.0], [63.5, 91.0], [63.6, 91.0], [63.7, 91.0], [63.8, 91.0], [63.9, 92.0], [64.0, 92.0], [64.1, 92.0], [64.2, 92.0], [64.3, 92.0], [64.4, 92.0], [64.5, 93.0], [64.6, 93.0], [64.7, 93.0], [64.8, 93.0], [64.9, 93.0], [65.0, 93.0], [65.1, 94.0], [65.2, 94.0], [65.3, 94.0], [65.4, 94.0], [65.5, 94.0], [65.6, 95.0], [65.7, 95.0], [65.8, 95.0], [65.9, 95.0], [66.0, 95.0], [66.1, 95.0], [66.2, 96.0], [66.3, 96.0], [66.4, 96.0], [66.5, 96.0], [66.6, 96.0], [66.7, 96.0], [66.8, 97.0], [66.9, 97.0], [67.0, 97.0], [67.1, 97.0], [67.2, 97.0], [67.3, 98.0], [67.4, 98.0], [67.5, 98.0], [67.6, 98.0], [67.7, 98.0], [67.8, 98.0], [67.9, 99.0], [68.0, 99.0], [68.1, 99.0], [68.2, 99.0], [68.3, 99.0], [68.4, 99.0], [68.5, 100.0], [68.6, 100.0], [68.7, 100.0], [68.8, 100.0], [68.9, 100.0], [69.0, 101.0], [69.1, 101.0], [69.2, 101.0], [69.3, 101.0], [69.4, 101.0], [69.5, 102.0], [69.6, 102.0], [69.7, 102.0], [69.8, 102.0], [69.9, 102.0], [70.0, 103.0], [70.1, 103.0], [70.2, 103.0], [70.3, 103.0], [70.4, 103.0], [70.5, 104.0], [70.6, 104.0], [70.7, 104.0], [70.8, 104.0], [70.9, 104.0], [71.0, 104.0], [71.1, 105.0], [71.2, 105.0], [71.3, 105.0], [71.4, 105.0], [71.5, 105.0], [71.6, 106.0], [71.7, 106.0], [71.8, 106.0], [71.9, 106.0], [72.0, 106.0], [72.1, 107.0], [72.2, 107.0], [72.3, 107.0], [72.4, 107.0], [72.5, 107.0], [72.6, 108.0], [72.7, 108.0], [72.8, 108.0], [72.9, 108.0], [73.0, 109.0], [73.1, 109.0], [73.2, 109.0], [73.3, 109.0], [73.4, 109.0], [73.5, 110.0], [73.6, 110.0], [73.7, 110.0], [73.8, 110.0], [73.9, 111.0], [74.0, 111.0], [74.1, 111.0], [74.2, 111.0], [74.3, 111.0], [74.4, 112.0], [74.5, 112.0], [74.6, 112.0], [74.7, 112.0], [74.8, 113.0], [74.9, 113.0], [75.0, 113.0], [75.1, 113.0], [75.2, 113.0], [75.3, 114.0], [75.4, 114.0], [75.5, 114.0], [75.6, 114.0], [75.7, 115.0], [75.8, 115.0], [75.9, 115.0], [76.0, 115.0], [76.1, 116.0], [76.2, 116.0], [76.3, 116.0], [76.4, 116.0], [76.5, 117.0], [76.6, 117.0], [76.7, 117.0], [76.8, 117.0], [76.9, 118.0], [77.0, 118.0], [77.1, 118.0], [77.2, 118.0], [77.3, 119.0], [77.4, 119.0], [77.5, 119.0], [77.6, 119.0], [77.7, 120.0], [77.8, 120.0], [77.9, 120.0], [78.0, 120.0], [78.1, 121.0], [78.2, 121.0], [78.3, 121.0], [78.4, 122.0], [78.5, 122.0], [78.6, 122.0], [78.7, 122.0], [78.8, 123.0], [78.9, 123.0], [79.0, 123.0], [79.1, 123.0], [79.2, 124.0], [79.3, 124.0], [79.4, 124.0], [79.5, 125.0], [79.6, 125.0], [79.7, 125.0], [79.8, 126.0], [79.9, 126.0], [80.0, 126.0], [80.1, 126.0], [80.2, 127.0], [80.3, 127.0], [80.4, 127.0], [80.5, 128.0], [80.6, 128.0], [80.7, 128.0], [80.8, 129.0], [80.9, 129.0], [81.0, 129.0], [81.1, 130.0], [81.2, 130.0], [81.3, 130.0], [81.4, 131.0], [81.5, 131.0], [81.6, 131.0], [81.7, 132.0], [81.8, 132.0], [81.9, 133.0], [82.0, 133.0], [82.1, 133.0], [82.2, 134.0], [82.3, 134.0], [82.4, 134.0], [82.5, 135.0], [82.6, 135.0], [82.7, 136.0], [82.8, 136.0], [82.9, 136.0], [83.0, 137.0], [83.1, 137.0], [83.2, 138.0], [83.3, 138.0], [83.4, 138.0], [83.5, 139.0], [83.6, 139.0], [83.7, 140.0], [83.8, 140.0], [83.9, 141.0], [84.0, 141.0], [84.1, 142.0], [84.2, 142.0], [84.3, 142.0], [84.4, 143.0], [84.5, 143.0], [84.6, 144.0], [84.7, 144.0], [84.8, 145.0], [84.9, 145.0], [85.0, 146.0], [85.1, 146.0], [85.2, 146.0], [85.3, 147.0], [85.4, 147.0], [85.5, 148.0], [85.6, 148.0], [85.7, 149.0], [85.8, 150.0], [85.9, 150.0], [86.0, 151.0], [86.1, 151.0], [86.2, 152.0], [86.3, 152.0], [86.4, 153.0], [86.5, 153.0], [86.6, 154.0], [86.7, 154.0], [86.8, 155.0], [86.9, 156.0], [87.0, 156.0], [87.1, 157.0], [87.2, 157.0], [87.3, 158.0], [87.4, 159.0], [87.5, 159.0], [87.6, 160.0], [87.7, 161.0], [87.8, 161.0], [87.9, 162.0], [88.0, 163.0], [88.1, 163.0], [88.2, 164.0], [88.3, 165.0], [88.4, 165.0], [88.5, 166.0], [88.6, 167.0], [88.7, 168.0], [88.8, 168.0], [88.9, 169.0], [89.0, 170.0], [89.1, 171.0], [89.2, 172.0], [89.3, 172.0], [89.4, 173.0], [89.5, 174.0], [89.6, 175.0], [89.7, 176.0], [89.8, 176.0], [89.9, 177.0], [90.0, 178.0], [90.1, 179.0], [90.2, 180.0], [90.3, 181.0], [90.4, 182.0], [90.5, 183.0], [90.6, 184.0], [90.7, 185.0], [90.8, 186.0], [90.9, 187.0], [91.0, 188.0], [91.1, 189.0], [91.2, 190.0], [91.3, 192.0], [91.4, 193.0], [91.5, 194.0], [91.6, 195.0], [91.7, 196.0], [91.8, 197.0], [91.9, 199.0], [92.0, 200.0], [92.1, 201.0], [92.2, 203.0], [92.3, 204.0], [92.4, 205.0], [92.5, 207.0], [92.6, 208.0], [92.7, 210.0], [92.8, 211.0], [92.9, 212.0], [93.0, 214.0], [93.1, 216.0], [93.2, 217.0], [93.3, 219.0], [93.4, 220.0], [93.5, 222.0], [93.6, 224.0], [93.7, 226.0], [93.8, 228.0], [93.9, 229.0], [94.0, 231.0], [94.1, 233.0], [94.2, 235.0], [94.3, 237.0], [94.4, 239.0], [94.5, 241.0], [94.6, 243.0], [94.7, 245.0], [94.8, 248.0], [94.9, 250.0], [95.0, 253.0], [95.1, 255.0], [95.2, 258.0], [95.3, 260.0], [95.4, 263.0], [95.5, 266.0], [95.6, 268.0], [95.7, 271.0], [95.8, 274.0], [95.9, 278.0], [96.0, 281.0], [96.1, 285.0], [96.2, 288.0], [96.3, 292.0], [96.4, 296.0], [96.5, 299.0], [96.6, 303.0], [96.7, 307.0], [96.8, 311.0], [96.9, 316.0], [97.0, 320.0], [97.1, 326.0], [97.2, 330.0], [97.3, 335.0], [97.4, 340.0], [97.5, 345.0], [97.6, 351.0], [97.7, 357.0], [97.8, 363.0], [97.9, 371.0], [98.0, 378.0], [98.1, 385.0], [98.2, 393.0], [98.3, 403.0], [98.4, 412.0], [98.5, 423.0], [98.6, 435.0], [98.7, 448.0], [98.8, 465.0], [98.9, 482.0], [99.0, 498.0], [99.1, 518.0], [99.2, 541.0], [99.3, 562.0], [99.4, 591.0], [99.5, 625.0], [99.6, 666.0], [99.7, 738.0], [99.8, 850.0], [99.9, 1186.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 3.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 5.0], [1.4, 5.0], [1.5, 5.0], [1.6, 6.0], [1.7, 6.0], [1.8, 6.0], [1.9, 7.0], [2.0, 7.0], [2.1, 8.0], [2.2, 8.0], [2.3, 9.0], [2.4, 9.0], [2.5, 10.0], [2.6, 10.0], [2.7, 11.0], [2.8, 11.0], [2.9, 12.0], [3.0, 12.0], [3.1, 13.0], [3.2, 13.0], [3.3, 14.0], [3.4, 14.0], [3.5, 14.0], [3.6, 15.0], [3.7, 15.0], [3.8, 16.0], [3.9, 16.0], [4.0, 17.0], [4.1, 17.0], [4.2, 18.0], [4.3, 18.0], [4.4, 19.0], [4.5, 19.0], [4.6, 19.0], [4.7, 20.0], [4.8, 20.0], [4.9, 21.0], [5.0, 21.0], [5.1, 22.0], [5.2, 22.0], [5.3, 23.0], [5.4, 23.0], [5.5, 23.0], [5.6, 24.0], [5.7, 24.0], [5.8, 25.0], [5.9, 25.0], [6.0, 25.0], [6.1, 26.0], [6.2, 26.0], [6.3, 27.0], [6.4, 27.0], [6.5, 28.0], [6.6, 28.0], [6.7, 28.0], [6.8, 29.0], [6.9, 29.0], [7.0, 30.0], [7.1, 30.0], [7.2, 31.0], [7.3, 31.0], [7.4, 31.0], [7.5, 32.0], [7.6, 32.0], [7.7, 32.0], [7.8, 33.0], [7.9, 33.0], [8.0, 34.0], [8.1, 34.0], [8.2, 34.0], [8.3, 35.0], [8.4, 35.0], [8.5, 36.0], [8.6, 36.0], [8.7, 36.0], [8.8, 37.0], [8.9, 37.0], [9.0, 38.0], [9.1, 38.0], [9.2, 38.0], [9.3, 39.0], [9.4, 39.0], [9.5, 39.0], [9.6, 40.0], [9.7, 40.0], [9.8, 40.0], [9.9, 41.0], [10.0, 41.0], [10.1, 41.0], [10.2, 42.0], [10.3, 42.0], [10.4, 42.0], [10.5, 43.0], [10.6, 43.0], [10.7, 44.0], [10.8, 44.0], [10.9, 44.0], [11.0, 45.0], [11.1, 45.0], [11.2, 46.0], [11.3, 46.0], [11.4, 46.0], [11.5, 47.0], [11.6, 47.0], [11.7, 47.0], [11.8, 48.0], [11.9, 48.0], [12.0, 48.0], [12.1, 49.0], [12.2, 49.0], [12.3, 49.0], [12.4, 50.0], [12.5, 50.0], [12.6, 50.0], [12.7, 51.0], [12.8, 51.0], [12.9, 51.0], [13.0, 52.0], [13.1, 52.0], [13.2, 52.0], [13.3, 53.0], [13.4, 53.0], [13.5, 53.0], [13.6, 54.0], [13.7, 54.0], [13.8, 54.0], [13.9, 55.0], [14.0, 55.0], [14.1, 55.0], [14.2, 56.0], [14.3, 56.0], [14.4, 56.0], [14.5, 57.0], [14.6, 57.0], [14.7, 57.0], [14.8, 58.0], [14.9, 58.0], [15.0, 58.0], [15.1, 59.0], [15.2, 59.0], [15.3, 59.0], [15.4, 60.0], [15.5, 60.0], [15.6, 60.0], [15.7, 61.0], [15.8, 61.0], [15.9, 61.0], [16.0, 62.0], [16.1, 62.0], [16.2, 62.0], [16.3, 63.0], [16.4, 63.0], [16.5, 63.0], [16.6, 64.0], [16.7, 64.0], [16.8, 64.0], [16.9, 65.0], [17.0, 65.0], [17.1, 65.0], [17.2, 66.0], [17.3, 66.0], [17.4, 66.0], [17.5, 67.0], [17.6, 67.0], [17.7, 67.0], [17.8, 67.0], [17.9, 68.0], [18.0, 68.0], [18.1, 68.0], [18.2, 69.0], [18.3, 69.0], [18.4, 69.0], [18.5, 70.0], [18.6, 70.0], [18.7, 70.0], [18.8, 71.0], [18.9, 71.0], [19.0, 71.0], [19.1, 72.0], [19.2, 72.0], [19.3, 72.0], [19.4, 72.0], [19.5, 73.0], [19.6, 73.0], [19.7, 73.0], [19.8, 74.0], [19.9, 74.0], [20.0, 74.0], [20.1, 75.0], [20.2, 75.0], [20.3, 75.0], [20.4, 75.0], [20.5, 76.0], [20.6, 76.0], [20.7, 76.0], [20.8, 77.0], [20.9, 77.0], [21.0, 77.0], [21.1, 77.0], [21.2, 78.0], [21.3, 78.0], [21.4, 78.0], [21.5, 79.0], [21.6, 79.0], [21.7, 79.0], [21.8, 80.0], [21.9, 80.0], [22.0, 80.0], [22.1, 80.0], [22.2, 81.0], [22.3, 81.0], [22.4, 81.0], [22.5, 82.0], [22.6, 82.0], [22.7, 82.0], [22.8, 83.0], [22.9, 83.0], [23.0, 83.0], [23.1, 84.0], [23.2, 84.0], [23.3, 84.0], [23.4, 84.0], [23.5, 85.0], [23.6, 85.0], [23.7, 85.0], [23.8, 86.0], [23.9, 86.0], [24.0, 86.0], [24.1, 86.0], [24.2, 87.0], [24.3, 87.0], [24.4, 87.0], [24.5, 87.0], [24.6, 88.0], [24.7, 88.0], [24.8, 88.0], [24.9, 89.0], [25.0, 89.0], [25.1, 89.0], [25.2, 89.0], [25.3, 90.0], [25.4, 90.0], [25.5, 90.0], [25.6, 91.0], [25.7, 91.0], [25.8, 91.0], [25.9, 91.0], [26.0, 92.0], [26.1, 92.0], [26.2, 92.0], [26.3, 93.0], [26.4, 93.0], [26.5, 93.0], [26.6, 93.0], [26.7, 94.0], [26.8, 94.0], [26.9, 94.0], [27.0, 95.0], [27.1, 95.0], [27.2, 95.0], [27.3, 95.0], [27.4, 96.0], [27.5, 96.0], [27.6, 96.0], [27.7, 97.0], [27.8, 97.0], [27.9, 97.0], [28.0, 97.0], [28.1, 98.0], [28.2, 98.0], [28.3, 98.0], [28.4, 98.0], [28.5, 99.0], [28.6, 99.0], [28.7, 99.0], [28.8, 100.0], [28.9, 100.0], [29.0, 100.0], [29.1, 100.0], [29.2, 101.0], [29.3, 101.0], [29.4, 101.0], [29.5, 101.0], [29.6, 102.0], [29.7, 102.0], [29.8, 102.0], [29.9, 103.0], [30.0, 103.0], [30.1, 103.0], [30.2, 103.0], [30.3, 104.0], [30.4, 104.0], [30.5, 104.0], [30.6, 105.0], [30.7, 105.0], [30.8, 105.0], [30.9, 105.0], [31.0, 106.0], [31.1, 106.0], [31.2, 106.0], [31.3, 106.0], [31.4, 107.0], [31.5, 107.0], [31.6, 107.0], [31.7, 108.0], [31.8, 108.0], [31.9, 108.0], [32.0, 108.0], [32.1, 109.0], [32.2, 109.0], [32.3, 109.0], [32.4, 110.0], [32.5, 110.0], [32.6, 110.0], [32.7, 110.0], [32.8, 111.0], [32.9, 111.0], [33.0, 111.0], [33.1, 111.0], [33.2, 112.0], [33.3, 112.0], [33.4, 112.0], [33.5, 112.0], [33.6, 113.0], [33.7, 113.0], [33.8, 113.0], [33.9, 113.0], [34.0, 114.0], [34.1, 114.0], [34.2, 114.0], [34.3, 114.0], [34.4, 115.0], [34.5, 115.0], [34.6, 115.0], [34.7, 116.0], [34.8, 116.0], [34.9, 116.0], [35.0, 116.0], [35.1, 117.0], [35.2, 117.0], [35.3, 117.0], [35.4, 117.0], [35.5, 118.0], [35.6, 118.0], [35.7, 118.0], [35.8, 118.0], [35.9, 119.0], [36.0, 119.0], [36.1, 119.0], [36.2, 119.0], [36.3, 120.0], [36.4, 120.0], [36.5, 120.0], [36.6, 120.0], [36.7, 121.0], [36.8, 121.0], [36.9, 121.0], [37.0, 122.0], [37.1, 122.0], [37.2, 122.0], [37.3, 122.0], [37.4, 123.0], [37.5, 123.0], [37.6, 123.0], [37.7, 123.0], [37.8, 124.0], [37.9, 124.0], [38.0, 124.0], [38.1, 124.0], [38.2, 125.0], [38.3, 125.0], [38.4, 125.0], [38.5, 125.0], [38.6, 126.0], [38.7, 126.0], [38.8, 126.0], [38.9, 126.0], [39.0, 127.0], [39.1, 127.0], [39.2, 127.0], [39.3, 127.0], [39.4, 128.0], [39.5, 128.0], [39.6, 128.0], [39.7, 129.0], [39.8, 129.0], [39.9, 129.0], [40.0, 129.0], [40.1, 130.0], [40.2, 130.0], [40.3, 130.0], [40.4, 130.0], [40.5, 131.0], [40.6, 131.0], [40.7, 131.0], [40.8, 131.0], [40.9, 132.0], [41.0, 132.0], [41.1, 132.0], [41.2, 132.0], [41.3, 133.0], [41.4, 133.0], [41.5, 133.0], [41.6, 133.0], [41.7, 134.0], [41.8, 134.0], [41.9, 134.0], [42.0, 134.0], [42.1, 135.0], [42.2, 135.0], [42.3, 135.0], [42.4, 136.0], [42.5, 136.0], [42.6, 136.0], [42.7, 136.0], [42.8, 137.0], [42.9, 137.0], [43.0, 137.0], [43.1, 137.0], [43.2, 138.0], [43.3, 138.0], [43.4, 138.0], [43.5, 138.0], [43.6, 139.0], [43.7, 139.0], [43.8, 139.0], [43.9, 139.0], [44.0, 140.0], [44.1, 140.0], [44.2, 140.0], [44.3, 140.0], [44.4, 141.0], [44.5, 141.0], [44.6, 141.0], [44.7, 141.0], [44.8, 142.0], [44.9, 142.0], [45.0, 142.0], [45.1, 142.0], [45.2, 143.0], [45.3, 143.0], [45.4, 143.0], [45.5, 143.0], [45.6, 144.0], [45.7, 144.0], [45.8, 144.0], [45.9, 145.0], [46.0, 145.0], [46.1, 145.0], [46.2, 145.0], [46.3, 146.0], [46.4, 146.0], [46.5, 146.0], [46.6, 146.0], [46.7, 147.0], [46.8, 147.0], [46.9, 147.0], [47.0, 147.0], [47.1, 148.0], [47.2, 148.0], [47.3, 148.0], [47.4, 149.0], [47.5, 149.0], [47.6, 149.0], [47.7, 149.0], [47.8, 150.0], [47.9, 150.0], [48.0, 150.0], [48.1, 150.0], [48.2, 151.0], [48.3, 151.0], [48.4, 151.0], [48.5, 151.0], [48.6, 152.0], [48.7, 152.0], [48.8, 152.0], [48.9, 152.0], [49.0, 153.0], [49.1, 153.0], [49.2, 153.0], [49.3, 153.0], [49.4, 154.0], [49.5, 154.0], [49.6, 154.0], [49.7, 154.0], [49.8, 155.0], [49.9, 155.0], [50.0, 155.0], [50.1, 156.0], [50.2, 156.0], [50.3, 156.0], [50.4, 156.0], [50.5, 156.0], [50.6, 157.0], [50.7, 157.0], [50.8, 157.0], [50.9, 157.0], [51.0, 158.0], [51.1, 158.0], [51.2, 158.0], [51.3, 158.0], [51.4, 159.0], [51.5, 159.0], [51.6, 159.0], [51.7, 159.0], [51.8, 160.0], [51.9, 160.0], [52.0, 160.0], [52.1, 160.0], [52.2, 161.0], [52.3, 161.0], [52.4, 161.0], [52.5, 162.0], [52.6, 162.0], [52.7, 162.0], [52.8, 162.0], [52.9, 162.0], [53.0, 163.0], [53.1, 163.0], [53.2, 163.0], [53.3, 164.0], [53.4, 164.0], [53.5, 164.0], [53.6, 164.0], [53.7, 165.0], [53.8, 165.0], [53.9, 165.0], [54.0, 165.0], [54.1, 166.0], [54.2, 166.0], [54.3, 166.0], [54.4, 166.0], [54.5, 167.0], [54.6, 167.0], [54.7, 167.0], [54.8, 167.0], [54.9, 168.0], [55.0, 168.0], [55.1, 168.0], [55.2, 168.0], [55.3, 169.0], [55.4, 169.0], [55.5, 169.0], [55.6, 169.0], [55.7, 170.0], [55.8, 170.0], [55.9, 170.0], [56.0, 170.0], [56.1, 171.0], [56.2, 171.0], [56.3, 171.0], [56.4, 172.0], [56.5, 172.0], [56.6, 172.0], [56.7, 172.0], [56.8, 173.0], [56.9, 173.0], [57.0, 173.0], [57.1, 173.0], [57.2, 174.0], [57.3, 174.0], [57.4, 174.0], [57.5, 174.0], [57.6, 175.0], [57.7, 175.0], [57.8, 175.0], [57.9, 175.0], [58.0, 176.0], [58.1, 176.0], [58.2, 176.0], [58.3, 176.0], [58.4, 177.0], [58.5, 177.0], [58.6, 177.0], [58.7, 178.0], [58.8, 178.0], [58.9, 178.0], [59.0, 178.0], [59.1, 179.0], [59.2, 179.0], [59.3, 179.0], [59.4, 179.0], [59.5, 180.0], [59.6, 180.0], [59.7, 180.0], [59.8, 180.0], [59.9, 181.0], [60.0, 181.0], [60.1, 181.0], [60.2, 182.0], [60.3, 182.0], [60.4, 182.0], [60.5, 182.0], [60.6, 183.0], [60.7, 183.0], [60.8, 183.0], [60.9, 183.0], [61.0, 184.0], [61.1, 184.0], [61.2, 184.0], [61.3, 184.0], [61.4, 185.0], [61.5, 185.0], [61.6, 185.0], [61.7, 186.0], [61.8, 186.0], [61.9, 186.0], [62.0, 186.0], [62.1, 187.0], [62.2, 187.0], [62.3, 187.0], [62.4, 187.0], [62.5, 188.0], [62.6, 188.0], [62.7, 188.0], [62.8, 188.0], [62.9, 189.0], [63.0, 189.0], [63.1, 189.0], [63.2, 190.0], [63.3, 190.0], [63.4, 190.0], [63.5, 190.0], [63.6, 191.0], [63.7, 191.0], [63.8, 191.0], [63.9, 192.0], [64.0, 192.0], [64.1, 192.0], [64.2, 192.0], [64.3, 193.0], [64.4, 193.0], [64.5, 193.0], [64.6, 194.0], [64.7, 194.0], [64.8, 194.0], [64.9, 194.0], [65.0, 195.0], [65.1, 195.0], [65.2, 195.0], [65.3, 195.0], [65.4, 196.0], [65.5, 196.0], [65.6, 196.0], [65.7, 197.0], [65.8, 197.0], [65.9, 197.0], [66.0, 197.0], [66.1, 198.0], [66.2, 198.0], [66.3, 198.0], [66.4, 199.0], [66.5, 199.0], [66.6, 199.0], [66.7, 200.0], [66.8, 200.0], [66.9, 200.0], [67.0, 201.0], [67.1, 201.0], [67.2, 201.0], [67.3, 201.0], [67.4, 202.0], [67.5, 202.0], [67.6, 202.0], [67.7, 203.0], [67.8, 203.0], [67.9, 203.0], [68.0, 203.0], [68.1, 204.0], [68.2, 204.0], [68.3, 204.0], [68.4, 205.0], [68.5, 205.0], [68.6, 205.0], [68.7, 206.0], [68.8, 206.0], [68.9, 206.0], [69.0, 207.0], [69.1, 207.0], [69.2, 207.0], [69.3, 207.0], [69.4, 208.0], [69.5, 208.0], [69.6, 208.0], [69.7, 209.0], [69.8, 209.0], [69.9, 209.0], [70.0, 210.0], [70.1, 210.0], [70.2, 210.0], [70.3, 211.0], [70.4, 211.0], [70.5, 211.0], [70.6, 212.0], [70.7, 212.0], [70.8, 212.0], [70.9, 213.0], [71.0, 213.0], [71.1, 213.0], [71.2, 214.0], [71.3, 214.0], [71.4, 214.0], [71.5, 215.0], [71.6, 215.0], [71.7, 215.0], [71.8, 216.0], [71.9, 216.0], [72.0, 216.0], [72.1, 217.0], [72.2, 217.0], [72.3, 217.0], [72.4, 218.0], [72.5, 218.0], [72.6, 218.0], [72.7, 219.0], [72.8, 219.0], [72.9, 220.0], [73.0, 220.0], [73.1, 220.0], [73.2, 221.0], [73.3, 221.0], [73.4, 221.0], [73.5, 222.0], [73.6, 222.0], [73.7, 223.0], [73.8, 223.0], [73.9, 223.0], [74.0, 224.0], [74.1, 224.0], [74.2, 225.0], [74.3, 225.0], [74.4, 225.0], [74.5, 226.0], [74.6, 226.0], [74.7, 227.0], [74.8, 227.0], [74.9, 227.0], [75.0, 228.0], [75.1, 228.0], [75.2, 229.0], [75.3, 229.0], [75.4, 230.0], [75.5, 230.0], [75.6, 230.0], [75.7, 231.0], [75.8, 231.0], [75.9, 232.0], [76.0, 232.0], [76.1, 233.0], [76.2, 233.0], [76.3, 233.0], [76.4, 234.0], [76.5, 234.0], [76.6, 235.0], [76.7, 235.0], [76.8, 236.0], [76.9, 236.0], [77.0, 237.0], [77.1, 237.0], [77.2, 237.0], [77.3, 238.0], [77.4, 238.0], [77.5, 239.0], [77.6, 239.0], [77.7, 240.0], [77.8, 240.0], [77.9, 241.0], [78.0, 241.0], [78.1, 242.0], [78.2, 243.0], [78.3, 243.0], [78.4, 244.0], [78.5, 244.0], [78.6, 245.0], [78.7, 245.0], [78.8, 246.0], [78.9, 246.0], [79.0, 247.0], [79.1, 247.0], [79.2, 248.0], [79.3, 248.0], [79.4, 249.0], [79.5, 249.0], [79.6, 250.0], [79.7, 250.0], [79.8, 251.0], [79.9, 252.0], [80.0, 252.0], [80.1, 253.0], [80.2, 253.0], [80.3, 254.0], [80.4, 254.0], [80.5, 255.0], [80.6, 255.0], [80.7, 256.0], [80.8, 256.0], [80.9, 257.0], [81.0, 258.0], [81.1, 258.0], [81.2, 259.0], [81.3, 259.0], [81.4, 260.0], [81.5, 261.0], [81.6, 261.0], [81.7, 262.0], [81.8, 262.0], [81.9, 263.0], [82.0, 264.0], [82.1, 264.0], [82.2, 265.0], [82.3, 265.0], [82.4, 266.0], [82.5, 267.0], [82.6, 267.0], [82.7, 268.0], [82.8, 269.0], [82.9, 269.0], [83.0, 270.0], [83.1, 271.0], [83.2, 271.0], [83.3, 272.0], [83.4, 273.0], [83.5, 273.0], [83.6, 274.0], [83.7, 275.0], [83.8, 276.0], [83.9, 276.0], [84.0, 277.0], [84.1, 278.0], [84.2, 279.0], [84.3, 279.0], [84.4, 280.0], [84.5, 281.0], [84.6, 282.0], [84.7, 283.0], [84.8, 283.0], [84.9, 284.0], [85.0, 285.0], [85.1, 286.0], [85.2, 287.0], [85.3, 288.0], [85.4, 289.0], [85.5, 289.0], [85.6, 290.0], [85.7, 291.0], [85.8, 292.0], [85.9, 293.0], [86.0, 294.0], [86.1, 295.0], [86.2, 296.0], [86.3, 297.0], [86.4, 298.0], [86.5, 299.0], [86.6, 300.0], [86.7, 301.0], [86.8, 302.0], [86.9, 303.0], [87.0, 304.0], [87.1, 305.0], [87.2, 306.0], [87.3, 307.0], [87.4, 308.0], [87.5, 309.0], [87.6, 310.0], [87.7, 311.0], [87.8, 312.0], [87.9, 313.0], [88.0, 314.0], [88.1, 315.0], [88.2, 316.0], [88.3, 318.0], [88.4, 319.0], [88.5, 320.0], [88.6, 321.0], [88.7, 322.0], [88.8, 324.0], [88.9, 325.0], [89.0, 326.0], [89.1, 327.0], [89.2, 328.0], [89.3, 330.0], [89.4, 331.0], [89.5, 332.0], [89.6, 333.0], [89.7, 335.0], [89.8, 336.0], [89.9, 337.0], [90.0, 339.0], [90.1, 340.0], [90.2, 342.0], [90.3, 343.0], [90.4, 345.0], [90.5, 346.0], [90.6, 347.0], [90.7, 349.0], [90.8, 350.0], [90.9, 352.0], [91.0, 353.0], [91.1, 355.0], [91.2, 356.0], [91.3, 358.0], [91.4, 359.0], [91.5, 361.0], [91.6, 363.0], [91.7, 364.0], [91.8, 366.0], [91.9, 368.0], [92.0, 369.0], [92.1, 371.0], [92.2, 373.0], [92.3, 375.0], [92.4, 377.0], [92.5, 379.0], [92.6, 381.0], [92.7, 382.0], [92.8, 384.0], [92.9, 386.0], [93.0, 388.0], [93.1, 391.0], [93.2, 393.0], [93.3, 395.0], [93.4, 397.0], [93.5, 399.0], [93.6, 401.0], [93.7, 404.0], [93.8, 406.0], [93.9, 408.0], [94.0, 410.0], [94.1, 413.0], [94.2, 415.0], [94.3, 418.0], [94.4, 421.0], [94.5, 424.0], [94.6, 426.0], [94.7, 429.0], [94.8, 432.0], [94.9, 435.0], [95.0, 438.0], [95.1, 442.0], [95.2, 445.0], [95.3, 448.0], [95.4, 452.0], [95.5, 455.0], [95.6, 458.0], [95.7, 462.0], [95.8, 466.0], [95.9, 470.0], [96.0, 474.0], [96.1, 478.0], [96.2, 482.0], [96.3, 487.0], [96.4, 493.0], [96.5, 498.0], [96.6, 503.0], [96.7, 508.0], [96.8, 515.0], [96.9, 521.0], [97.0, 527.0], [97.1, 534.0], [97.2, 540.0], [97.3, 546.0], [97.4, 554.0], [97.5, 562.0], [97.6, 569.0], [97.7, 577.0], [97.8, 586.0], [97.9, 596.0], [98.0, 607.0], [98.1, 619.0], [98.2, 631.0], [98.3, 643.0], [98.4, 654.0], [98.5, 666.0], [98.6, 680.0], [98.7, 695.0], [98.8, 711.0], [98.9, 730.0], [99.0, 749.0], [99.1, 773.0], [99.2, 803.0], [99.3, 841.0], [99.4, 887.0], [99.5, 956.0], [99.6, 1047.0], [99.7, 1166.0], [99.8, 1256.0], [99.9, 1477.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 185402.0, "series": [{"data": [[0.0, 185402.0], [600.0, 491.0], [2500.0, 1.0], [700.0, 156.0], [200.0, 9546.0], [800.0, 114.0], [900.0, 54.0], [1000.0, 41.0], [1100.0, 143.0], [300.0, 3528.0], [1200.0, 40.0], [1300.0, 7.0], [1400.0, 15.0], [1500.0, 68.0], [100.0, 48370.0], [400.0, 1310.0], [1600.0, 5.0], [1700.0, 1.0], [1800.0, 1.0], [500.0, 707.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 171039.0], [2100.0, 1.0], [2200.0, 1.0], [600.0, 583.0], [2600.0, 1.0], [700.0, 232.0], [200.0, 11363.0], [800.0, 164.0], [900.0, 56.0], [1000.0, 52.0], [1100.0, 114.0], [300.0, 4410.0], [1200.0, 73.0], [1300.0, 36.0], [1400.0, 15.0], [1500.0, 63.0], [100.0, 58852.0], [400.0, 1852.0], [1600.0, 27.0], [1700.0, 4.0], [1800.0, 3.0], [1900.0, 3.0], [500.0, 1054.0], [2000.0, 2.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 71961.0], [600.0, 1974.0], [700.0, 1166.0], [800.0, 577.0], [900.0, 335.0], [1000.0, 190.0], [1100.0, 263.0], [1200.0, 221.0], [1300.0, 119.0], [1400.0, 81.0], [1500.0, 78.0], [100.0, 94736.0], [1600.0, 115.0], [1700.0, 22.0], [1800.0, 7.0], [1900.0, 8.0], [2000.0, 2.0], [2100.0, 4.0], [2200.0, 1.0], [2500.0, 1.0], [2600.0, 1.0], [200.0, 49712.0], [300.0, 17421.0], [400.0, 7493.0], [500.0, 3512.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 180.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 737062.0, "series": [{"data": [[0.0, 737062.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 4135.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 180.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 8623.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 401.6865837607239, "minX": 1.64612934E12, "maxY": 500.0, "series": [{"data": [[1.64612952E12, 410.21004820567543], [1.6461294E12, 500.0], [1.64612946E12, 500.0], [1.64612934E12, 401.6865837607239]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64612952E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.6, "minX": 1.0, "maxY": 385.3125, "series": [{"data": [[2.0, 1.0], [3.0, 7.2], [4.0, 1.4], [5.0, 1.4545454545454544], [6.0, 0.6], [7.0, 3.6666666666666665], [8.0, 3.3333333333333335], [9.0, 4.5], [10.0, 3.0], [11.0, 3.0], [12.0, 2.0], [13.0, 3.583333333333333], [14.0, 3.5], [15.0, 2.75], [16.0, 5.625], [17.0, 4.6], [18.0, 4.5], [19.0, 7.5], [20.0, 7.0], [21.0, 3.0], [22.0, 5.75], [23.0, 5.714285714285714], [24.0, 6.666666666666666], [25.0, 7.0], [26.0, 8.6], [27.0, 6.833333333333333], [28.0, 8.333333333333334], [29.0, 7.083333333333334], [30.0, 7.6875], [31.0, 12.0], [33.0, 8.473684210526315], [32.0, 9.5], [35.0, 10.333333333333334], [34.0, 12.0], [36.0, 12.4], [37.0, 24.799999999999994], [38.0, 12.891304347826086], [39.0, 12.161290322580646], [40.0, 13.235294117647058], [41.0, 19.25], [42.0, 13.035714285714288], [43.0, 10.526315789473687], [44.0, 26.904761904761905], [45.0, 27.900000000000002], [46.0, 56.75], [47.0, 47.5], [48.0, 20.851851851851848], [49.0, 15.268656716417906], [50.0, 14.5], [51.0, 10.666666666666668], [52.0, 24.72], [53.0, 19.837837837837842], [54.0, 21.272727272727273], [55.0, 25.600000000000005], [56.0, 23.41935483870968], [57.0, 33.94736842105264], [58.0, 17.428571428571427], [59.0, 28.625], [60.0, 19.84], [61.0, 19.86842105263158], [62.0, 19.18518518518519], [63.0, 24.42857142857143], [64.0, 34.35294117647058], [65.0, 35.95], [67.0, 20.921052631578945], [66.0, 17.837837837837835], [68.0, 10.214285714285715], [69.0, 30.428571428571434], [70.0, 29.363636363636374], [71.0, 26.72413793103448], [72.0, 26.416666666666664], [73.0, 28.599999999999998], [74.0, 27.56818181818182], [75.0, 28.0], [76.0, 23.833333333333336], [77.0, 34.411764705882355], [78.0, 28.652173913043484], [79.0, 15.375], [80.0, 19.599999999999998], [81.0, 20.166666666666668], [82.0, 28.866666666666667], [83.0, 37.5], [84.0, 51.800000000000004], [85.0, 30.133333333333344], [86.0, 35.99999999999999], [87.0, 35.07142857142857], [88.0, 30.642857142857146], [89.0, 55.434782608695656], [90.0, 33.92307692307693], [91.0, 51.5], [92.0, 26.3939393939394], [93.0, 47.642857142857146], [95.0, 35.93103448275862], [94.0, 43.10526315789475], [96.0, 33.7530864197531], [97.0, 24.836065573770494], [98.0, 28.74509803921568], [99.0, 13.923076923076923], [101.0, 39.75], [102.0, 40.49999999999999], [100.0, 19.666666666666668], [103.0, 28.647058823529417], [105.0, 31.283333333333342], [106.0, 19.058823529411764], [107.0, 24.333333333333332], [104.0, 25.571428571428573], [108.0, 31.25], [109.0, 30.35714285714286], [111.0, 22.733333333333334], [110.0, 22.235294117647054], [112.0, 42.96774193548387], [113.0, 37.653846153846146], [114.0, 30.679999999999993], [115.0, 37.215686274509814], [117.0, 49.61904761904762], [118.0, 45.40476190476191], [119.0, 34.08333333333332], [116.0, 49.26315789473684], [121.0, 35.84374999999999], [122.0, 21.142857142857142], [123.0, 28.285714285714285], [120.0, 35.438596491228076], [124.0, 38.62499999999999], [125.0, 33.73684210526316], [126.0, 47.36363636363637], [127.0, 29.142857142857142], [128.0, 20.142857142857142], [129.0, 13.470588235294118], [130.0, 26.25], [131.0, 22.666666666666664], [132.0, 25.24], [133.0, 27.23529411764705], [134.0, 39.41935483870969], [135.0, 34.83870967741935], [136.0, 73.72222222222221], [139.0, 57.225], [138.0, 87.45454545454547], [141.0, 44.04255319148936], [140.0, 57.048780487804876], [142.0, 17.133333333333333], [143.0, 25.803921568627437], [137.0, 74.80000000000001], [144.0, 21.666666666666668], [145.0, 30.464285714285715], [146.0, 71.74999999999999], [147.0, 52.81818181818183], [148.0, 38.50000000000001], [149.0, 40.92307692307691], [150.0, 49.52173913043479], [151.0, 55.14285714285714], [152.0, 47.37837837837837], [153.0, 52.413043478260875], [154.0, 49.285714285714285], [155.0, 44.38000000000002], [157.0, 76.32692307692307], [159.0, 70.38095238095238], [158.0, 88.97826086956523], [156.0, 32.11111111111111], [160.0, 79.07692307692307], [161.0, 59.92307692307692], [162.0, 61.888888888888886], [165.0, 73.5], [167.0, 13.999999999999998], [166.0, 61.05], [164.0, 63.03636363636364], [163.0, 50.90909090909091], [168.0, 25.736842105263165], [171.0, 46.69811320754716], [172.0, 65.0], [173.0, 25.124999999999996], [174.0, 31.5], [170.0, 64.67857142857143], [175.0, 29.76923076923077], [169.0, 46.529999999999994], [176.0, 43.52173913043479], [177.0, 56.333333333333336], [178.0, 36.0], [180.0, 44.32258064516129], [181.0, 73.48484848484848], [182.0, 55.571428571428584], [183.0, 83.33333333333334], [179.0, 41.777777777777786], [185.0, 132.82352941176472], [186.0, 88.38888888888889], [187.0, 45.54054054054054], [190.0, 61.69999999999999], [184.0, 32.384615384615394], [191.0, 55.89583333333333], [189.0, 57.02631578947368], [188.0, 83.53333333333335], [192.0, 58.316666666666656], [193.0, 45.794117647058826], [194.0, 38.800000000000004], [195.0, 54.385542168674704], [196.0, 52.37500000000001], [197.0, 37.04347826086956], [198.0, 50.076923076923066], [199.0, 56.961538461538474], [200.0, 56.25806451612903], [203.0, 51.337500000000006], [204.0, 38.879999999999995], [205.0, 21.439999999999998], [206.0, 30.88888888888889], [207.0, 31.79999999999999], [202.0, 65.78571428571426], [201.0, 51.98412698412698], [208.0, 29.677419354838705], [209.0, 39.85714285714286], [210.0, 37.85416666666666], [211.0, 36.357142857142854], [212.0, 120.33962264150946], [215.0, 67.36231884057972], [214.0, 80.57142857142857], [213.0, 73.0], [217.0, 74.51612903225809], [218.0, 41.75], [219.0, 43.0], [220.0, 46.45], [216.0, 84.58695652173914], [221.0, 57.333333333333336], [222.0, 63.01960784313726], [223.0, 85.48571428571431], [227.0, 45.2962962962963], [228.0, 35.179999999999986], [229.0, 28.400000000000002], [230.0, 30.5], [231.0, 24.192307692307693], [226.0, 56.208333333333336], [225.0, 66.2727272727273], [224.0, 78.28749999999998], [232.0, 39.8048780487805], [233.0, 44.333333333333336], [234.0, 44.3448275862069], [235.0, 48.30769230769231], [236.0, 30.5], [239.0, 47.88709677419356], [238.0, 46.00000000000001], [237.0, 43.666666666666664], [241.0, 45.59999999999999], [242.0, 45.13513513513514], [243.0, 68.08108108108107], [244.0, 89.6774193548387], [245.0, 85.2631578947368], [246.0, 91.90000000000002], [247.0, 21.560000000000002], [240.0, 59.24675324675322], [249.0, 113.00000000000001], [248.0, 81.9189189189189], [250.0, 91.73913043478262], [251.0, 149.88461538461536], [253.0, 162.35000000000002], [254.0, 104.3125], [255.0, 50.87499999999999], [252.0, 80.8767123287671], [256.0, 100.25000000000001], [257.0, 94.04838709677419], [259.0, 137.8780487804878], [258.0, 101.47058823529412], [260.0, 140.93333333333334], [261.0, 94.675], [264.0, 114.3095238095238], [263.0, 85.08196721311475], [262.0, 63.80392156862746], [267.0, 103.33333333333334], [266.0, 102.15217391304347], [265.0, 57.54166666666667], [268.0, 40.27272727272727], [271.0, 40.44117647058824], [269.0, 14.823529411764707], [270.0, 46.25], [285.0, 156.21739130434784], [274.0, 47.94117647058823], [273.0, 49.78260869565217], [272.0, 48.1], [279.0, 71.16666666666667], [278.0, 66.125], [277.0, 69.8125], [276.0, 63.97777777777776], [280.0, 69.94], [275.0, 58.17391304347826], [287.0, 71.725], [286.0, 84.8], [284.0, 78.63999999999999], [283.0, 76.0], [282.0, 54.57142857142857], [281.0, 74.47619047619048], [291.0, 190.21311475409834], [292.0, 116.07692307692312], [293.0, 104.33333333333334], [295.0, 51.77777777777777], [294.0, 121.87719298245617], [290.0, 106.72727272727273], [289.0, 118.16666666666667], [288.0, 66.36363636363636], [296.0, 54.76315789473684], [302.0, 58.18181818181819], [303.0, 67.28571428571429], [297.0, 55.99999999999999], [298.0, 46.9375], [299.0, 34.54545454545455], [300.0, 64.625], [301.0, 55.666666666666664], [305.0, 68.64285714285714], [304.0, 56.61538461538461], [306.0, 73.11111111111111], [307.0, 72.43636363636361], [308.0, 80.25], [309.0, 60.785714285714306], [310.0, 109.42105263157897], [311.0, 126.02127659574464], [312.0, 136.4772727272727], [319.0, 198.33333333333334], [318.0, 128.05882352941174], [316.0, 97.82978723404254], [317.0, 69.00877192982458], [313.0, 85.69892473118283], [314.0, 83.87499999999999], [315.0, 30.46153846153846], [322.0, 80.73076923076923], [320.0, 81.81481481481482], [321.0, 68.26865671641792], [324.0, 74.54761904761904], [325.0, 44.453125000000014], [327.0, 73.3478260869565], [326.0, 71.65625000000003], [328.0, 58.86440677966101], [329.0, 64.90123456790124], [331.0, 51.57142857142858], [330.0, 60.01324503311256], [332.0, 48.87499999999999], [323.0, 81.5], [333.0, 68.70114942528738], [334.0, 65.62650602409636], [335.0, 84.5625], [349.0, 75.50000000000003], [336.0, 89.55038759689921], [343.0, 139.37499999999997], [344.0, 92.57142857142858], [350.0, 80.53246753246752], [351.0, 113.72727272727272], [345.0, 242.8181818181818], [342.0, 152.89189189189187], [341.0, 100.62676056338026], [340.0, 133.17499999999998], [347.0, 79.10144927536231], [348.0, 84.88235294117645], [339.0, 70.86486486486487], [338.0, 126.78947368421049], [337.0, 83.82352941176472], [346.0, 89.94565217391303], [364.0, 98.23529411764704], [352.0, 78.14432989690721], [359.0, 79.28155339805825], [353.0, 75.99999999999999], [354.0, 80.3], [355.0, 64.07142857142857], [357.0, 127.30769230769229], [356.0, 64.57142857142857], [358.0, 168.18367346938777], [362.0, 76.67241379310344], [363.0, 81.67410714285717], [365.0, 62.6774193548387], [366.0, 71.55128205128204], [367.0, 74.91397849462365], [361.0, 85.26666666666665], [360.0, 111.31292517006798], [369.0, 95.75714285714287], [368.0, 78.92857142857143], [370.0, 69.59999999999997], [371.0, 93.90909090909092], [372.0, 93.47500000000001], [373.0, 101.7777777777778], [374.0, 80.86111111111111], [375.0, 89.14285714285715], [376.0, 83.8529411764706], [382.0, 66.87037037037037], [383.0, 72.61904761904762], [380.0, 78.07692307692308], [381.0, 67.03954802259891], [377.0, 72.74358974358974], [378.0, 71.5], [379.0, 68.9375], [387.0, 93.41538461538458], [385.0, 214.06666666666666], [384.0, 73.93076923076922], [386.0, 119.3373493975904], [388.0, 128.13636363636363], [390.0, 54.97841726618708], [389.0, 88.4047619047619], [391.0, 97.15254237288138], [392.0, 60.30645161290321], [393.0, 149.37162162162159], [395.0, 65.24999999999994], [394.0, 105.6265060240964], [398.0, 44.563636363636355], [397.0, 49.67088607594937], [396.0, 71.18749999999999], [399.0, 56.311475409836056], [401.0, 67.19402985074626], [400.0, 46.95], [402.0, 68.58992805755399], [403.0, 61.439999999999955], [404.0, 101.71621621621622], [405.0, 128.70731707317074], [406.0, 100.12244897959184], [407.0, 86.82352941176468], [409.0, 103.38650306748463], [408.0, 111.27710843373491], [415.0, 52.874999999999986], [414.0, 53.0], [412.0, 119.93749999999999], [413.0, 84.18213058419245], [410.0, 88.02717391304347], [411.0, 124.15277777777777], [428.0, 132.00000000000003], [416.0, 64.51136363636367], [419.0, 94.47787610619474], [418.0, 76.2], [417.0, 217.37500000000003], [422.0, 147.02272727272725], [427.0, 137.5138888888889], [421.0, 95.68518518518522], [420.0, 110.50000000000001], [425.0, 111.06703910614526], [423.0, 148.06976744186048], [426.0, 127.7251908396946], [429.0, 87.88749999999997], [430.0, 103.41221374045801], [431.0, 76.03448275862068], [424.0, 157.2682926829268], [433.0, 89.82926829268291], [432.0, 91.78333333333336], [434.0, 89.62222222222225], [435.0, 88.31103678929772], [444.0, 105.82474226804123], [445.0, 94.45255474452554], [446.0, 103.97468354430383], [447.0, 145.13793103448273], [436.0, 107.5943396226415], [437.0, 106.8888888888889], [438.0, 90.39047619047619], [439.0, 116.01333333333335], [440.0, 132.6846153846154], [441.0, 124.9056603773585], [443.0, 114.49999999999997], [442.0, 125.99999999999997], [451.0, 76.87499999999996], [449.0, 87.07692307692307], [448.0, 44.333333333333336], [454.0, 65.44444444444446], [455.0, 84.45161290322581], [450.0, 111.16666666666666], [452.0, 55.47368421052631], [453.0, 63.163636363636364], [459.0, 104.2608695652174], [458.0, 71.21052631578948], [462.0, 52.44444444444444], [456.0, 98.43538767395631], [457.0, 87.37993920972644], [463.0, 24.136363636363637], [460.0, 49.611111111111114], [461.0, 23.21428571428572], [466.0, 26.636363636363637], [464.0, 41.06896551724138], [465.0, 33.333333333333336], [467.0, 37.53846153846153], [476.0, 65.55475578406178], [479.0, 83.46478873239441], [478.0, 64.39349112426034], [477.0, 15.857142857142856], [468.0, 15.529411764705882], [469.0, 44.49999999999999], [470.0, 64.536231884058], [471.0, 35.07692307692308], [472.0, 29.294117647058822], [473.0, 36.59090909090909], [474.0, 102.15384615384613], [475.0, 63.40697674418606], [483.0, 39.6592039800995], [481.0, 73.55744680851062], [484.0, 27.68571428571429], [485.0, 23.333333333333332], [480.0, 86.67052023121389], [487.0, 45.91739130434785], [486.0, 26.722602739726035], [489.0, 58.10526315789473], [490.0, 86.67785234899333], [482.0, 39.998127340823984], [491.0, 70.07500000000003], [492.0, 40.034129692832764], [488.0, 35.33179723502304], [494.0, 48.730994152046804], [495.0, 95.48431105047759], [493.0, 43.24186046511628], [498.0, 85.37151702786373], [497.0, 70.14555256064695], [500.0, 85.92399453410601], [499.0, 55.132862190812716], [496.0, 37.657276995305175], [1.0, 1.5]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[483.0481920000023, 83.9400479999996]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 1.0], [3.0, 1.2], [4.0, 2.0], [5.0, 2.1818181818181817], [6.0, 2.6], [7.0, 3.0], [8.0, 2.3333333333333335], [9.0, 2.5], [10.0, 2.25], [11.0, 1.6666666666666665], [12.0, 2.0], [13.0, 3.25], [14.0, 4.0], [15.0, 5.0], [16.0, 3.75], [17.0, 4.6], [18.0, 7.25], [19.0, 5.0], [20.0, 5.875], [21.0, 7.0], [22.0, 6.5], [23.0, 6.285714285714285], [24.0, 4.5], [25.0, 5.0], [26.0, 6.6], [27.0, 7.833333333333334], [28.0, 8.0], [29.0, 10.416666666666666], [30.0, 7.0], [31.0, 12.0], [33.0, 7.7894736842105265], [32.0, 11.0], [35.0, 4.666666666666667], [34.0, 2.0], [36.0, 87.8], [37.0, 73.73333333333333], [38.0, 31.32608695652174], [39.0, 13.903225806451616], [40.0, 12.35294117647059], [41.0, 12.571428571428571], [42.0, 19.67857142857143], [43.0, 13.368421052631579], [44.0, 16.666666666666668], [45.0, 14.3], [46.0, 31.349999999999994], [47.0, 23.375], [48.0, 45.66666666666666], [49.0, 13.432835820895525], [50.0, 15.0], [51.0, 16.666666666666668], [52.0, 18.880000000000003], [53.0, 14.702702702702707], [54.0, 32.090909090909086], [55.0, 23.68], [56.0, 27.806451612903224], [57.0, 28.36842105263158], [58.0, 18.4], [59.0, 34.4375], [60.0, 19.959999999999997], [61.0, 25.36842105263158], [62.0, 32.44444444444445], [63.0, 26.142857142857142], [64.0, 29.000000000000004], [65.0, 33.9], [67.0, 34.81578947368422], [66.0, 21.18918918918919], [68.0, 21.571428571428577], [69.0, 26.964285714285715], [70.0, 19.90909090909091], [71.0, 18.862068965517242], [72.0, 22.833333333333332], [73.0, 22.133333333333333], [74.0, 20.886363636363633], [75.0, 38.8095238095238], [76.0, 23.70833333333333], [77.0, 42.23529411764706], [78.0, 38.47826086956522], [79.0, 19.708333333333332], [80.0, 21.77333333333332], [81.0, 19.499999999999996], [82.0, 24.53333333333333], [83.0, 19.018518518518512], [84.0, 32.733333333333334], [85.0, 28.111111111111114], [86.0, 40.97142857142857], [87.0, 36.857142857142854], [88.0, 24.5], [89.0, 48.30434782608695], [90.0, 30.48717948717949], [91.0, 51.0625], [92.0, 24.242424242424246], [93.0, 51.42857142857143], [95.0, 58.3793103448276], [94.0, 55.73684210526316], [96.0, 27.666666666666664], [97.0, 34.16393442622953], [98.0, 27.039215686274506], [99.0, 23.307692307692307], [101.0, 17.75], [102.0, 38.52380952380953], [100.0, 41.22222222222223], [103.0, 28.470588235294116], [105.0, 54.216666666666654], [106.0, 13.529411764705882], [107.0, 8.555555555555555], [104.0, 25.571428571428577], [108.0, 26.100000000000005], [109.0, 29.500000000000004], [111.0, 23.933333333333334], [110.0, 24.58823529411765], [112.0, 19.096774193548384], [113.0, 14.038461538461538], [114.0, 22.64], [115.0, 35.529411764705884], [117.0, 51.42857142857143], [118.0, 70.3809523809524], [119.0, 41.69444444444445], [116.0, 44.842105263157904], [121.0, 40.09374999999999], [122.0, 16.285714285714285], [123.0, 26.523809523809522], [120.0, 54.01754385964913], [124.0, 22.90625], [125.0, 21.473684210526315], [126.0, 18.22727272727273], [127.0, 18.5], [128.0, 7.714285714285714], [129.0, 10.294117647058824], [130.0, 32.75], [131.0, 29.833333333333336], [132.0, 10.24], [133.0, 32.00000000000001], [134.0, 28.806451612903228], [135.0, 47.09677419354838], [136.0, 30.33333333333333], [139.0, 62.02499999999998], [138.0, 37.068181818181806], [141.0, 63.276595744680854], [140.0, 62.243902439024396], [142.0, 31.266666666666662], [143.0, 37.47058823529412], [137.0, 31.200000000000003], [144.0, 22.5], [145.0, 28.035714285714285], [146.0, 36.15], [147.0, 37.818181818181806], [148.0, 33.1923076923077], [149.0, 27.499999999999996], [150.0, 30.26086956521739], [151.0, 43.642857142857146], [152.0, 38.64864864864865], [153.0, 45.34782608695652], [154.0, 35.0], [155.0, 45.64], [157.0, 92.50000000000001], [159.0, 70.0], [158.0, 71.36956521739133], [156.0, 55.66666666666667], [160.0, 78.76923076923077], [161.0, 49.53846153846153], [162.0, 22.666666666666668], [165.0, 29.342105263157894], [167.0, 54.500000000000014], [166.0, 51.400000000000006], [164.0, 34.236363636363635], [163.0, 27.27272727272727], [168.0, 64.21052631578947], [171.0, 25.37735849056604], [172.0, 94.02941176470586], [173.0, 36.74999999999999], [174.0, 42.4], [170.0, 61.857142857142854], [175.0, 36.692307692307686], [169.0, 36.14], [176.0, 49.17391304347827], [177.0, 32.95833333333333], [178.0, 29.0], [180.0, 28.258064516129032], [181.0, 26.93939393939394], [182.0, 29.84126984126985], [183.0, 37.27777777777778], [179.0, 30.722222222222214], [185.0, 40.705882352941174], [186.0, 52.388888888888886], [187.0, 40.35135135135136], [190.0, 67.10000000000001], [191.0, 90.06249999999999], [184.0, 37.35897435897435], [189.0, 91.78947368421052], [188.0, 77.13333333333334], [192.0, 92.03333333333333], [193.0, 50.47058823529412], [194.0, 37.86666666666666], [195.0, 44.10843373493975], [196.0, 50.81250000000001], [197.0, 40.56521739130435], [199.0, 27.69230769230769], [198.0, 34.53846153846154], [200.0, 43.467741935483865], [203.0, 42.67500000000001], [204.0, 34.959999999999994], [205.0, 31.96], [206.0, 48.666666666666664], [207.0, 34.39999999999999], [202.0, 43.92857142857143], [201.0, 47.396825396825406], [208.0, 45.25806451612903], [209.0, 61.85714285714286], [210.0, 45.97916666666667], [211.0, 31.642857142857142], [212.0, 61.16981132075471], [215.0, 69.42028985507247], [214.0, 45.714285714285715], [213.0, 63.88235294117647], [217.0, 56.67741935483871], [218.0, 85.0], [219.0, 86.16666666666666], [220.0, 83.15], [216.0, 53.91304347826086], [221.0, 62.33333333333333], [222.0, 53.333333333333336], [223.0, 61.65714285714287], [227.0, 92.62962962962965], [228.0, 58.680000000000014], [229.0, 36.199999999999996], [230.0, 47.25], [231.0, 20.730769230769234], [226.0, 78.9444444444444], [225.0, 66.7818181818182], [224.0, 56.41250000000001], [232.0, 46.707317073170735], [233.0, 32.25], [234.0, 35.55172413793103], [235.0, 48.53846153846154], [236.0, 41.75], [239.0, 54.46774193548388], [238.0, 63.909090909090914], [237.0, 43.77777777777778], [241.0, 65.49999999999999], [242.0, 34.37837837837837], [243.0, 22.62162162162162], [244.0, 28.967741935483872], [245.0, 50.28947368421052], [246.0, 54.06666666666667], [247.0, 52.08], [240.0, 55.66233766233767], [249.0, 54.56756756756757], [248.0, 47.67567567567567], [250.0, 54.23913043478261], [251.0, 52.807692307692314], [253.0, 61.29999999999999], [254.0, 46.75], [255.0, 53.125], [252.0, 56.39726027397259], [256.0, 58.31250000000001], [257.0, 70.98387096774195], [259.0, 135.80487804878052], [258.0, 59.97058823529411], [260.0, 109.83333333333331], [261.0, 167.20000000000005], [264.0, 136.14285714285717], [263.0, 98.31147540983606], [262.0, 78.19607843137258], [267.0, 121.66666666666667], [266.0, 117.7173913043478], [265.0, 60.20833333333335], [268.0, 35.81818181818182], [271.0, 60.39705882352941], [269.0, 31.705882352941178], [270.0, 47.050000000000004], [285.0, 52.826086956521735], [274.0, 58.352941176470594], [273.0, 72.56521739130436], [272.0, 61.400000000000006], [279.0, 57.44444444444444], [278.0, 56.125], [277.0, 75.6875], [276.0, 76.91111111111114], [280.0, 60.86999999999998], [275.0, 68.69565217391305], [287.0, 52.37499999999998], [286.0, 55.3], [284.0, 48.64], [281.0, 65.61904761904762], [283.0, 42.45454545454545], [282.0, 58.142857142857146], [291.0, 69.01639344262294], [292.0, 109.3692307692308], [293.0, 78.9761904761905], [295.0, 75.03703703703702], [294.0, 139.17543859649118], [290.0, 83.74545454545456], [289.0, 62.13333333333334], [288.0, 46.63636363636363], [296.0, 59.60526315789474], [302.0, 48.81818181818182], [303.0, 49.214285714285715], [297.0, 59.172413793103445], [298.0, 68.125], [299.0, 50.272727272727266], [300.0, 62.6], [301.0, 47.666666666666664], [305.0, 53.892857142857146], [304.0, 48.53846153846154], [306.0, 67.95555555555555], [307.0, 51.409090909090914], [308.0, 43.142857142857146], [309.0, 67.41269841269843], [310.0, 57.17543859649121], [311.0, 56.99999999999999], [312.0, 85.04545454545455], [319.0, 54.0], [318.0, 56.11764705882353], [316.0, 76.36170212765956], [317.0, 77.54385964912281], [313.0, 71.16129032258068], [314.0, 79.4479166666667], [315.0, 69.07692307692308], [322.0, 88.49999999999999], [320.0, 40.37037037037036], [321.0, 72.4179104477612], [324.0, 69.5], [325.0, 52.671875], [327.0, 67.0], [326.0, 68.90624999999999], [328.0, 70.20338983050848], [329.0, 61.46913580246912], [331.0, 56.57142857142857], [330.0, 67.81456953642385], [332.0, 75.265625], [323.0, 71.5], [333.0, 73.96551724137932], [334.0, 68.09638554216869], [335.0, 168.93750000000003], [349.0, 115.91333333333334], [336.0, 75.64341085271317], [343.0, 124.4375], [344.0, 85.33333333333333], [350.0, 57.27272727272726], [351.0, 97.0909090909091], [345.0, 121.99999999999999], [342.0, 76.43243243243246], [341.0, 83.06338028169016], [340.0, 78.55000000000001], [347.0, 98.92028985507243], [348.0, 92.76470588235297], [339.0, 70.05405405405403], [338.0, 56.8421052631579], [337.0, 70.44117647058825], [346.0, 83.3423913043478], [364.0, 172.76470588235293], [352.0, 80.24742268041238], [359.0, 96.67961165048544], [353.0, 107.69230769230768], [354.0, 161.1], [355.0, 76.21428571428572], [357.0, 113.46153846153847], [356.0, 71.57142857142857], [358.0, 82.10204081632654], [362.0, 74.0344827586207], [363.0, 78.95535714285715], [365.0, 57.225806451612904], [366.0, 79.97435897435895], [367.0, 81.3440860215054], [361.0, 73.8], [360.0, 77.12925170068026], [369.0, 86.44285714285715], [368.0, 75.28571428571429], [370.0, 78.136], [371.0, 74.36363636363637], [372.0, 89.00000000000001], [373.0, 105.36111111111113], [374.0, 100.6111111111111], [375.0, 72.99999999999999], [376.0, 80.1029411764706], [382.0, 75.5], [383.0, 63.95238095238095], [380.0, 48.0], [381.0, 84.27118644067797], [377.0, 87.69230769230766], [378.0, 89.0], [379.0, 92.5625], [387.0, 69.01538461538462], [385.0, 93.73333333333333], [384.0, 73.39999999999999], [386.0, 78.96385542168674], [388.0, 130.5454545454546], [390.0, 71.4820143884892], [389.0, 113.64285714285714], [391.0, 96.59322033898304], [392.0, 86.01612903225804], [393.0, 122.42567567567578], [395.0, 78.51470588235296], [394.0, 73.01204819277105], [398.0, 253.61818181818182], [397.0, 87.12658227848101], [396.0, 50.822916666666664], [399.0, 131.44262295081973], [401.0, 51.20895522388059], [400.0, 62.699999999999996], [402.0, 82.2014388489209], [403.0, 91.93500000000002], [404.0, 120.91891891891892], [405.0, 94.17886178861788], [406.0, 102.53061224489795], [407.0, 104.88235294117646], [409.0, 108.54601226993869], [408.0, 89.91566265060239], [415.0, 82.76136363636363], [414.0, 53.5], [412.0, 84.06249999999999], [413.0, 49.831615120274904], [410.0, 89.49456521739128], [411.0, 100.45833333333331], [428.0, 105.43589743589743], [416.0, 100.75], [419.0, 103.73451327433634], [418.0, 99.9], [417.0, 94.375], [422.0, 93.52272727272724], [427.0, 110.33333333333334], [421.0, 87.72222222222223], [420.0, 68.42857142857143], [425.0, 88.82681564245809], [423.0, 76.79069767441861], [426.0, 86.01526717557255], [429.0, 94.64999999999999], [430.0, 108.99236641221376], [431.0, 86.27586206896551], [424.0, 103.24390243902437], [433.0, 103.46341463414635], [432.0, 76.85000000000001], [434.0, 105.28888888888892], [435.0, 103.71571906354517], [444.0, 98.88659793814432], [445.0, 71.31386861313868], [446.0, 86.71518987341773], [447.0, 126.01724137931038], [436.0, 112.75471698113206], [437.0, 134.96296296296296], [438.0, 123.94285714285714], [439.0, 87.11999999999999], [440.0, 98.11538461538466], [441.0, 64.3679245283019], [443.0, 108.33035714285714], [442.0, 43.76], [451.0, 97.41145833333327], [449.0, 72.61538461538461], [448.0, 79.27777777777779], [454.0, 73.81111111111112], [455.0, 105.74193548387095], [450.0, 13.0], [452.0, 64.94736842105263], [453.0, 87.72727272727272], [459.0, 104.78260869565216], [458.0, 55.10526315789474], [462.0, 61.833333333333336], [456.0, 121.83896620278327], [457.0, 100.65349544072947], [463.0, 21.909090909090907], [460.0, 90.77777777777777], [461.0, 90.92857142857143], [466.0, 34.0], [464.0, 85.3103448275862], [465.0, 36.06666666666666], [467.0, 34.30769230769231], [476.0, 61.97532133676089], [479.0, 91.76760563380282], [478.0, 105.64053254437877], [477.0, 8.285714285714286], [468.0, 6.882352941176471], [469.0, 29.384615384615383], [470.0, 63.44927536231883], [471.0, 29.0], [472.0, 14.764705882352938], [473.0, 23.590909090909093], [474.0, 98.68461538461538], [475.0, 75.97674418604653], [483.0, 47.30099502487563], [481.0, 60.94042553191488], [484.0, 19.442857142857147], [485.0, 17.166666666666668], [480.0, 78.4682080924856], [487.0, 47.96956521739131], [486.0, 35.383561643835606], [489.0, 85.10356536502543], [482.0, 28.63483146067414], [490.0, 117.92617449664434], [491.0, 63.621794871794904], [492.0, 28.713310580204777], [493.0, 47.260465116279036], [494.0, 47.976608187134524], [495.0, 110.98908594815848], [488.0, 46.1705069124424], [498.0, 179.01238390092877], [497.0, 67.55256064690029], [500.0, 93.69716918417761], [499.0, 69.22544169611304], [496.0, 28.6150234741784], [1.0, 1.5]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[483.0481920000043, 90.83549599999883]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 2.0], [3.0, 8.4], [4.0, 3.4], [5.0, 3.6363636363636362], [6.0, 3.4], [7.0, 6.666666666666667], [8.0, 5.666666666666667], [9.0, 7.0], [10.0, 5.25], [11.0, 4.666666666666667], [12.0, 4.0], [13.0, 6.833333333333332], [14.0, 7.5], [15.0, 8.0], [16.0, 9.375000000000002], [17.0, 9.2], [18.0, 11.75], [19.0, 12.5], [20.0, 12.875], [21.0, 10.0], [22.0, 12.25], [23.0, 12.071428571428571], [24.0, 11.166666666666666], [25.0, 12.0], [26.0, 15.2], [27.0, 14.833333333333332], [28.0, 16.666666666666668], [29.0, 17.5], [30.0, 14.75], [31.0, 24.0], [33.0, 16.315789473684212], [32.0, 21.0], [35.0, 15.0], [34.0, 14.0], [36.0, 109.2], [37.0, 100.66666666666667], [38.0, 45.108695652173914], [39.0, 26.161290322580644], [40.0, 28.117647058823533], [41.0, 32.89285714285714], [42.0, 33.75000000000001], [43.0, 24.68421052631579], [44.0, 44.71428571428571], [45.0, 46.8], [46.0, 89.0], [47.0, 78.0], [48.0, 67.51851851851853], [49.0, 29.0], [50.0, 29.5], [51.0, 27.333333333333332], [52.0, 44.8], [53.0, 34.91891891891892], [54.0, 53.54545454545453], [55.0, 49.71999999999999], [56.0, 52.03225806451613], [57.0, 62.684210526315795], [58.0, 35.971428571428575], [59.0, 64.0625], [60.0, 40.919999999999995], [61.0, 45.42105263157895], [62.0, 53.037037037037024], [63.0, 50.64285714285714], [64.0, 63.5294117647059], [65.0, 71.8], [67.0, 57.315789473684205], [66.0, 40.54054054054054], [68.0, 31.785714285714285], [69.0, 57.57142857142857], [70.0, 49.3939393939394], [71.0, 45.724137931034484], [72.0, 51.58333333333333], [73.0, 52.2], [74.0, 48.88636363636364], [75.0, 69.57142857142856], [76.0, 47.70833333333335], [77.0, 78.88235294117648], [78.0, 67.86956521739131], [79.0, 35.41666666666667], [80.0, 41.65333333333335], [81.0, 39.79166666666667], [82.0, 54.4], [83.0, 57.09259259259259], [84.0, 85.13333333333334], [85.0, 58.488888888888894], [86.0, 77.0857142857143], [87.0, 72.14285714285715], [88.0, 57.92857142857143], [89.0, 106.0], [90.0, 65.76923076923077], [91.0, 103.49999999999999], [92.0, 50.69696969696968], [93.0, 99.35714285714286], [95.0, 95.9310344827586], [94.0, 100.89473684210526], [96.0, 61.703703703703724], [97.0, 59.06557377049183], [98.0, 57.15686274509805], [99.0, 39.15384615384615], [101.0, 57.833333333333336], [102.0, 79.73809523809527], [100.0, 63.44444444444446], [103.0, 59.11764705882352], [105.0, 85.91666666666666], [106.0, 32.76470588235294], [107.0, 33.22222222222222], [104.0, 51.142857142857146], [108.0, 57.5], [109.0, 59.9047619047619], [111.0, 46.8], [110.0, 46.82352941176471], [112.0, 62.29032258064515], [113.0, 51.88461538461539], [114.0, 57.32000000000001], [115.0, 75.23529411764704], [117.0, 107.57142857142856], [118.0, 126.49999999999993], [119.0, 79.91666666666669], [116.0, 102.21052631578947], [121.0, 76.59375], [122.0, 37.714285714285715], [123.0, 54.80952380952382], [120.0, 90.22807017543862], [124.0, 62.031250000000014], [125.0, 55.526315789473685], [126.0, 66.09090909090908], [127.0, 47.64285714285715], [128.0, 34.0], [129.0, 24.41176470588235], [130.0, 59.0], [131.0, 52.58333333333333], [132.0, 36.03999999999999], [133.0, 59.45098039215685], [134.0, 71.38709677419357], [135.0, 84.32258064516128], [136.0, 104.8888888888889], [139.0, 125.50000000000003], [138.0, 125.95454545454545], [141.0, 107.87234042553195], [140.0, 122.17073170731706], [142.0, 48.86666666666667], [143.0, 63.50980392156863], [137.0, 107.35], [144.0, 45.08333333333333], [145.0, 60.14285714285714], [146.0, 111.85000000000001], [147.0, 91.99999999999999], [148.0, 76.00000000000001], [149.0, 72.57692307692307], [150.0, 80.04347826086958], [151.0, 99.5], [152.0, 86.21621621621622], [153.0, 97.84782608695652], [154.0, 84.35714285714286], [155.0, 91.0], [157.0, 169.01923076923075], [159.0, 147.19047619047623], [158.0, 160.43478260869568], [156.0, 87.81481481481481], [160.0, 159.0], [161.0, 117.92307692307693], [162.0, 113.66666666666667], [165.0, 103.00000000000001], [167.0, 126.95454545454548], [166.0, 134.85], [164.0, 99.49090909090908], [163.0, 78.18181818181817], [168.0, 127.47368421052632], [171.0, 86.33962264150944], [172.0, 224.35294117647058], [173.0, 62.0625], [174.0, 73.9], [170.0, 162.0357142857143], [175.0, 66.53846153846155], [169.0, 82.70000000000002], [176.0, 93.5217391304348], [177.0, 90.41666666666669], [178.0, 65.16666666666667], [180.0, 72.64516129032259], [181.0, 100.78787878787877], [182.0, 88.5238095238095], [183.0, 142.11111111111111], [179.0, 72.5], [185.0, 203.8823529411765], [186.0, 143.00000000000003], [187.0, 89.05405405405406], [190.0, 133.23333333333332], [191.0, 150.20833333333337], [184.0, 159.15384615384616], [189.0, 149.71052631578948], [188.0, 183.86666666666665], [192.0, 152.61666666666667], [193.0, 96.35294117647058], [194.0, 76.66666666666667], [195.0, 98.53012048192768], [196.0, 103.24999999999999], [197.0, 77.65217391304346], [199.0, 88.15384615384616], [198.0, 86.26923076923077], [200.0, 103.5806451612903], [203.0, 94.71249999999999], [204.0, 74.0], [205.0, 56.0], [206.0, 86.22222222222223], [207.0, 67.0], [202.0, 109.83333333333334], [201.0, 99.41269841269842], [208.0, 74.93548387096773], [209.0, 101.7551020408163], [210.0, 84.22916666666667], [211.0, 69.64285714285714], [212.0, 184.2075471698114], [215.0, 141.55072463768113], [214.0, 126.28571428571429], [213.0, 137.02941176470588], [217.0, 150.80645161290326], [218.0, 165.25], [219.0, 146.83333333333334], [220.0, 152.9], [216.0, 142.89130434782615], [221.0, 136.85714285714286], [222.0, 117.47058823529412], [223.0, 160.54285714285712], [227.0, 144.51851851851853], [228.0, 96.32], [229.0, 64.73333333333332], [230.0, 78.75], [231.0, 46.30769230769231], [226.0, 136.9583333333333], [225.0, 137.9818181818182], [224.0, 138.7875], [232.0, 88.70731707317074], [233.0, 76.83333333333333], [234.0, 80.0], [235.0, 96.92307692307693], [236.0, 72.375], [239.0, 102.3709677419355], [238.0, 109.95454545454544], [237.0, 87.55555555555556], [241.0, 111.19999999999999], [242.0, 80.16216216216218], [243.0, 92.02702702702702], [244.0, 118.83870967741935], [245.0, 138.1578947368421], [246.0, 152.43333333333334], [247.0, 147.80000000000004], [240.0, 114.97402597402596], [249.0, 168.99999999999994], [248.0, 167.78378378378378], [250.0, 147.78260869565221], [251.0, 212.73076923076928], [253.0, 227.9], [254.0, 151.125], [255.0, 104.00000000000001], [252.0, 138.4520547945206], [256.0, 167.1875], [257.0, 165.77419354838707], [258.0, 162.79411764705884], [260.0, 252.13333333333338], [261.0, 262.02500000000003], [264.0, 252.64285714285722], [268.0, 81.81818181818183], [271.0, 126.60294117647054], [270.0, 93.30000000000001], [269.0, 57.470588235294116], [263.0, 185.8852459016394], [259.0, 278.9999999999999], [267.0, 289.58333333333337], [266.0, 222.78260869565216], [265.0, 117.79166666666666], [262.0, 144.39215686274508], [285.0, 210.8260869565217], [274.0, 139.52941176470588], [273.0, 126.13043478260873], [272.0, 109.5], [279.0, 129.3888888888889], [278.0, 122.25], [277.0, 145.49999999999997], [276.0, 140.91111111111113], [280.0, 130.86], [275.0, 126.86956521739133], [287.0, 124.87500000000001], [286.0, 140.4333333333333], [284.0, 127.82000000000001], [281.0, 140.1904761904762], [283.0, 118.45454545454547], [282.0, 112.71428571428571], [291.0, 260.81967213114757], [292.0, 225.58461538461538], [293.0, 189.28571428571428], [295.0, 127.03703703703702], [294.0, 261.19298245614044], [290.0, 194.87272727272722], [289.0, 180.26666666666668], [288.0, 121.0], [296.0, 114.36842105263158], [302.0, 107.0909090909091], [303.0, 116.5], [297.0, 115.25862068965517], [298.0, 115.18750000000001], [299.0, 85.90909090909092], [300.0, 127.45], [301.0, 103.44444444444444], [305.0, 122.53571428571429], [304.0, 105.3076923076923], [306.0, 141.08888888888896], [307.0, 124.33636363636364], [308.0, 124.03571428571428], [309.0, 128.2539682539683], [310.0, 170.40350877192984], [311.0, 183.12765957446803], [312.0, 226.27272727272725], [319.0, 267.72222222222223], [318.0, 184.44117647058823], [316.0, 216.74468085106386], [317.0, 148.42982456140354], [313.0, 159.02150537634415], [314.0, 174.71875000000003], [315.0, 207.38461538461542], [322.0, 169.38461538461536], [320.0, 122.29629629629633], [321.0, 141.7014925373134], [324.0, 160.61904761904754], [325.0, 97.16406250000006], [327.0, 165.9565217391304], [326.0, 140.56249999999997], [328.0, 145.83050847457625], [329.0, 129.3950617283951], [331.0, 108.28571428571428], [330.0, 128.47019867549668], [332.0, 124.98437499999999], [323.0, 153.0], [333.0, 142.8390804597701], [334.0, 134.13253012048193], [335.0, 385.3125], [349.0, 192.33333333333334], [336.0, 172.62015503875972], [343.0, 273.8125], [344.0, 198.3571428571429], [350.0, 137.83766233766227], [351.0, 210.8181818181818], [345.0, 383.5454545454545], [342.0, 234.39189189189185], [341.0, 184.16901408450704], [340.0, 214.90000000000003], [347.0, 178.37681159420308], [348.0, 177.72058823529406], [339.0, 144.8918918918919], [338.0, 195.05263157894737], [337.0, 154.32352941176467], [346.0, 174.76086956521732], [364.0, 271.1764705882353], [352.0, 158.4742268041237], [359.0, 177.2038834951455], [353.0, 183.76923076923077], [354.0, 241.4], [355.0, 140.3214285714286], [357.0, 242.61538461538458], [356.0, 136.14285714285714], [358.0, 252.69387755102042], [362.0, 155.44827586206898], [363.0, 161.29017857142864], [365.0, 119.93548387096773], [366.0, 151.5448717948718], [367.0, 156.27956989247315], [361.0, 164.39999999999998], [360.0, 192.4829931972789], [369.0, 183.64285714285717], [368.0, 156.07142857142856], [370.0, 149.9039999999999], [371.0, 178.81818181818184], [372.0, 182.7], [373.0, 207.19444444444449], [374.0, 184.16666666666666], [375.0, 162.2142857142857], [376.0, 164.02941176470588], [382.0, 143.07407407407408], [383.0, 136.71428571428575], [380.0, 127.46153846153845], [381.0, 152.05649717514132], [377.0, 160.56410256410254], [378.0, 160.5], [379.0, 161.50000000000003], [387.0, 166.92307692307693], [385.0, 309.8666666666667], [384.0, 148.76923076923083], [386.0, 200.1686746987951], [388.0, 307.81818181818176], [390.0, 164.15827338129503], [389.0, 205.69047619047618], [391.0, 197.9830508474576], [392.0, 151.04838709677423], [393.0, 291.2229729729729], [395.0, 144.10294117647067], [394.0, 188.3734939759036], [398.0, 307.8909090909091], [397.0, 139.64556962025316], [396.0, 122.03125], [399.0, 193.1147540983607], [401.0, 119.6865671641791], [400.0, 134.65], [402.0, 158.95683453237405], [403.0, 153.68499999999995], [404.0, 225.16216216216216], [405.0, 223.4390243902439], [406.0, 202.7142857142857], [407.0, 191.73529411764704], [409.0, 212.9263803680981], [408.0, 201.21686746987947], [415.0, 135.82954545454547], [414.0, 106.5], [412.0, 204.93749999999997], [413.0, 134.319587628866], [410.0, 178.11956521739128], [411.0, 225.37500000000003], [428.0, 257.87179487179486], [416.0, 165.81818181818184], [419.0, 199.283185840708], [418.0, 176.1], [417.0, 311.75], [422.0, 266.0454545454544], [427.0, 269.4444444444444], [421.0, 184.75925925925924], [420.0, 179.0], [423.0, 247.0697674418605], [425.0, 210.21229050279322], [426.0, 236.5725190839694], [429.0, 196.0875], [430.0, 218.88549618320624], [431.0, 163.10344827586206], [424.0, 306.9268292682926], [433.0, 194.6585365853659], [432.0, 170.1666666666667], [434.0, 200.2444444444444], [435.0, 194.92642140468215], [444.0, 218.53608247422673], [445.0, 169.9197080291971], [446.0, 195.53797468354432], [447.0, 280.31034482758616], [436.0, 220.36792452830184], [437.0, 243.18518518518522], [438.0, 214.3809523809524], [439.0, 205.54666666666665], [440.0, 230.8307692307692], [441.0, 190.33018867924534], [443.0, 225.9821428571429], [442.0, 176.27999999999994], [451.0, 174.3177083333333], [449.0, 183.0], [448.0, 129.77777777777777], [454.0, 149.78888888888886], [455.0, 198.37634408602148], [450.0, 124.33333333333334], [452.0, 120.57894736842107], [453.0, 151.18181818181822], [459.0, 210.17391304347825], [458.0, 126.8421052631579], [462.0, 114.33333333333333], [456.0, 221.32007952286276], [457.0, 188.19452887537992], [463.0, 48.27272727272728], [460.0, 142.11111111111114], [461.0, 115.35714285714286], [466.0, 60.63636363636363], [464.0, 127.99999999999999], [465.0, 70.0], [467.0, 73.61538461538461], [476.0, 127.81902313624671], [479.0, 176.05633802816916], [478.0, 170.3801775147931], [477.0, 25.857142857142858], [468.0, 23.176470588235293], [469.0, 75.6153846153846], [470.0, 128.8985507246377], [471.0, 65.3076923076923], [472.0, 45.00000000000001], [473.0, 73.5909090909091], [474.0, 203.29230769230765], [475.0, 139.45348837209306], [483.0, 87.34328358208963], [481.0, 135.66808510638305], [484.0, 48.3], [485.0, 45.5], [480.0, 165.21387283236987], [487.0, 93.93043478260871], [486.0, 62.15068493150686], [489.0, 143.2852292020372], [482.0, 69.02996254681648], [490.0, 204.63087248322145], [491.0, 133.8115384615384], [492.0, 70.32423208191126], [493.0, 90.81395348837208], [494.0, 99.00000000000001], [495.0, 235.91587085038665], [488.0, 81.53456221198151], [498.0, 269.5634674922601], [497.0, 154.72237196765505], [500.0, 187.315041363517], [499.0, 125.43745583038867], [496.0, 73.80751173708921], [1.0, 3.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[483.04819200000475, 182.1028239999972]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 123855.93333333333, "minX": 1.64612934E12, "maxY": 1.6591029566666666E7, "series": [{"data": [[1.64612952E12, 4055645.6666666665], [1.6461294E12, 9979405.833333334], [1.64612946E12, 1.6591029566666666E7], [1.64612934E12, 1910418.9333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64612952E12, 262516.06666666665], [1.6461294E12, 647005.9666666667], [1.64612946E12, 1074955.3666666667], [1.64612934E12, 123855.93333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64612952E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 66.28437372500993, "minX": 1.64612934E12, "maxY": 194.68350577733108, "series": [{"data": [[1.64612952E12, 66.54057696627467], [1.6461294E12, 81.87471959935193], [1.64612946E12, 89.24346373184973], [1.64612934E12, 85.6087193460488]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.64612952E12, 72.15059308922133], [1.6461294E12, 84.29405488399914], [1.64612946E12, 102.16411467857579], [1.64612934E12, 66.28437372500993]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.64612952E12, 141.84529730770453], [1.6461294E12, 180.51701966717124], [1.64612946E12, 194.68350577733108], [1.64612934E12, 166.5946866485017]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64612952E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 66.13783489732072, "minX": 1.64612934E12, "maxY": 102.15358233202674, "series": [{"data": [[1.64612952E12, 66.49584443089485], [1.6461294E12, 80.97072095571049], [1.64612946E12, 89.1395031416445], [1.64612934E12, 84.1344005449596]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.64612952E12, 72.14794997421399], [1.6461294E12, 84.25252104667354], [1.64612946E12, 102.15358233202674], [1.64612934E12, 66.13783489732072]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.64612952E12, 72.51926964669623], [1.6461294E12, 84.14116542333957], [1.64612946E12, 102.12936045371458], [1.64612934E12, 66.14604904632132]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64612952E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64612934E12, "maxY": 1.854256873076318, "series": [{"data": [[1.64612952E12, 0.0], [1.6461294E12, 0.0], [1.64612946E12, 0.0], [1.64612934E12, 0.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.64612952E12, 0.0727823620422889], [1.6461294E12, 1.8499863375535137], [1.64612946E12, 0.2695087782635003], [1.64612934E12, 1.148986808105541]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.64612952E12, 0.072457722298879], [1.6461294E12, 1.854256873076318], [1.64612946E12, 0.2693734752629823], [1.64612934E12, 1.151021798365128]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64612952E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64612934E12, "maxY": 2619.0, "series": [{"data": [[1.64612952E12, 1045.0], [1.6461294E12, 2524.0], [1.64612946E12, 2619.0], [1.64612934E12, 1081.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64612952E12, 2.0], [1.6461294E12, 2.0], [1.64612946E12, 6.0], [1.64612934E12, 1.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64612952E12, 2.0], [1.6461294E12, 2.0], [1.64612946E12, 6.0], [1.64612934E12, 1.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64612952E12, 2.0], [1.6461294E12, 2.0], [1.64612946E12, 6.0], [1.64612934E12, 1.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64612952E12, 0.0], [1.6461294E12, 0.0], [1.64612946E12, 0.0], [1.64612934E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64612952E12, 55.0], [1.6461294E12, 78.0], [1.64612946E12, 97.0], [1.64612934E12, 52.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64612952E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 5.0, "minX": 68.0, "maxY": 1630.0, "series": [{"data": [[68.0, 89.5], [437.0, 5.0], [1951.0, 35.0], [1980.0, 63.0], [1983.0, 124.5], [2031.0, 50.0], [2039.0, 56.0], [2037.0, 112.0], [2083.0, 42.0], [2126.0, 34.0], [2085.0, 45.0], [2258.0, 135.0], [2235.0, 72.0], [2283.0, 49.0], [2295.0, 125.0], [2353.0, 120.0], [2385.0, 62.0], [2401.0, 72.0], [2347.0, 33.0], [2358.0, 46.5], [2332.0, 47.0], [2397.0, 44.0], [2436.0, 59.0], [2533.0, 30.0], [2551.0, 26.0], [2468.0, 26.0], [2647.0, 19.0], [2564.0, 80.0], [2683.0, 33.0], [2573.0, 26.0], [2752.0, 28.0], [2775.0, 43.0], [2813.0, 70.5], [2832.0, 74.0], [2901.0, 89.0], [2829.0, 172.0], [3071.0, 46.0], [2956.0, 125.0], [3070.0, 42.0], [3161.0, 41.0], [3164.0, 124.0], [3203.0, 111.0], [3237.0, 75.0], [3282.0, 21.0], [3328.0, 39.0], [3355.0, 24.0], [3337.0, 44.0], [3536.0, 25.0], [3482.0, 16.0], [3485.0, 25.0], [3502.0, 57.0], [3465.0, 72.0], [3508.0, 29.0], [3619.0, 51.0], [3593.0, 83.0], [3792.0, 46.0], [3724.0, 60.0], [3887.0, 74.0], [3909.0, 76.0], [3993.0, 98.0], [4325.0, 30.0], [4348.0, 49.0], [4232.0, 73.0], [4441.0, 88.0], [4554.0, 123.0], [4398.0, 58.0], [4498.0, 169.0], [4768.0, 134.0], [4687.0, 56.0], [4763.0, 164.0], [4847.0, 77.0], [4873.0, 102.0], [5114.0, 34.0], [4975.0, 67.0], [5245.0, 65.0], [5360.0, 59.0], [5120.0, 117.0], [5260.0, 110.0], [5562.0, 58.0], [5444.0, 53.0], [5551.0, 87.0], [5690.0, 70.0], [5652.0, 59.0], [5761.0, 127.0], [5783.0, 51.0], [5859.0, 112.0], [5848.0, 112.0], [6115.0, 89.0], [6068.0, 71.0], [5889.0, 87.0], [6079.0, 92.0], [5981.0, 96.0], [6052.0, 44.0], [6064.0, 93.0], [6095.0, 81.0], [6096.0, 45.0], [6387.0, 77.0], [6260.0, 55.0], [6379.0, 74.0], [6238.0, 98.0], [6301.0, 56.0], [6396.0, 63.0], [6239.0, 57.0], [6327.0, 84.0], [6326.0, 112.0], [6321.0, 107.0], [6188.0, 89.0], [6159.0, 27.0], [6205.0, 103.0], [6229.0, 118.0], [6456.0, 61.0], [6517.0, 81.0], [6498.0, 92.0], [6480.0, 111.0], [6513.0, 72.0], [6510.0, 59.0], [6479.0, 117.0], [6475.0, 114.0], [6543.0, 114.0], [6634.0, 118.0], [6620.0, 117.0], [6644.0, 96.0], [6639.0, 108.0], [6594.0, 68.0], [6603.0, 100.0], [6608.0, 39.0], [6616.0, 94.0], [6574.0, 111.0], [6575.0, 100.0], [6579.0, 94.0], [6580.0, 104.0], [6570.0, 120.0], [6550.0, 68.0], [6400.0, 89.0], [6527.0, 112.0], [6453.0, 117.0], [6662.0, 98.0], [6725.0, 107.0], [6731.0, 97.5], [6820.0, 84.0], [6821.0, 88.0], [6815.0, 88.0], [6858.0, 105.0], [6753.0, 103.0], [6772.0, 94.0], [6801.0, 87.0], [6889.0, 92.0], [6717.0, 124.0], [6701.0, 115.0], [6708.0, 60.0], [7032.0, 111.0], [6938.0, 107.0], [7043.0, 63.0], [7027.0, 73.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1980.0, 606.5], [1983.0, 521.0], [2039.0, 537.0], [2037.0, 547.0], [2083.0, 573.0], [2126.0, 804.0], [2085.0, 582.0], [2258.0, 556.0], [2235.0, 520.0], [2283.0, 554.0], [2295.0, 561.0], [2353.0, 571.0], [2385.0, 576.5], [2401.0, 595.5], [2347.0, 570.5], [2358.0, 689.5], [2332.0, 526.0], [2397.0, 603.5], [2436.0, 648.0], [2533.0, 592.0], [2551.0, 582.5], [2468.0, 505.0], [2647.0, 765.0], [2564.0, 619.0], [2683.0, 777.0], [2573.0, 540.0], [2752.0, 893.0], [2775.0, 770.0], [2813.0, 597.0], [2832.0, 731.0], [2901.0, 618.0], [2829.0, 615.5], [3071.0, 607.0], [2956.0, 570.0], [3070.0, 938.0], [3161.0, 523.0], [3164.0, 607.0], [3203.0, 552.5], [3237.0, 801.0], [3282.0, 530.5], [3328.0, 588.0], [3355.0, 812.0], [3337.0, 650.0], [3536.0, 653.0], [3482.0, 542.0], [3485.0, 728.0], [3502.0, 577.0], [3465.0, 696.0], [3508.0, 1145.5], [3619.0, 809.0], [3593.0, 546.0], [3792.0, 576.0], [3724.0, 672.0], [3887.0, 1077.0], [3909.0, 578.5], [3993.0, 569.0], [4325.0, 1208.0], [4348.0, 713.5], [4232.0, 608.0], [4441.0, 673.0], [4554.0, 544.0], [4398.0, 559.5], [4498.0, 552.0], [4768.0, 573.0], [4687.0, 572.0], [4763.0, 561.0], [4847.0, 522.0], [4873.0, 561.5], [5114.0, 642.0], [4975.0, 560.5], [5245.0, 861.5], [5360.0, 585.0], [5120.0, 547.5], [5260.0, 596.0], [5562.0, 677.0], [5444.0, 754.5], [5551.0, 575.0], [5690.0, 554.0], [5652.0, 551.0], [5761.0, 585.0], [5783.0, 1126.0], [5859.0, 732.0], [5848.0, 602.0], [6115.0, 686.5], [6068.0, 787.0], [5889.0, 555.0], [6079.0, 586.0], [5981.0, 567.0], [6052.0, 666.0], [6064.0, 573.5], [6095.0, 553.0], [6096.0, 755.0], [6387.0, 532.0], [6260.0, 604.0], [6379.0, 537.0], [6238.0, 584.0], [6301.0, 675.0], [6396.0, 902.5], [6239.0, 761.0], [6327.0, 815.0], [6326.0, 593.5], [6321.0, 664.0], [6188.0, 543.0], [6205.0, 572.5], [6229.0, 662.0], [6456.0, 651.0], [6517.0, 1630.0], [6498.0, 558.5], [6480.0, 656.0], [6513.0, 570.5], [6479.0, 596.0], [6475.0, 571.0], [6543.0, 524.5], [6634.0, 539.0], [6620.0, 521.0], [6644.0, 588.5], [6639.0, 566.5], [6594.0, 561.0], [6603.0, 514.0], [6608.0, 636.0], [6616.0, 553.5], [6574.0, 576.0], [6575.0, 656.5], [6579.0, 520.5], [6580.0, 566.0], [6570.0, 622.5], [6550.0, 541.0], [6400.0, 625.5], [6527.0, 623.0], [6453.0, 598.0], [6662.0, 602.0], [6725.0, 591.5], [6731.0, 539.0], [6820.0, 574.0], [6821.0, 531.5], [6815.0, 572.0], [6858.0, 545.5], [6753.0, 598.0], [6772.0, 558.0], [6801.0, 592.0], [6889.0, 558.0], [6717.0, 548.0], [6701.0, 591.5], [6708.0, 601.0], [7032.0, 680.0], [6938.0, 577.0], [7043.0, 535.0], [7027.0, 635.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 7043.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 4.0, "minX": 68.0, "maxY": 1519.0, "series": [{"data": [[68.0, 80.0], [437.0, 4.0], [1951.0, 26.0], [1980.0, 39.0], [1983.0, 70.0], [2031.0, 38.0], [2039.0, 36.0], [2037.0, 67.0], [2083.0, 21.0], [2126.0, 22.0], [2085.0, 27.0], [2258.0, 95.5], [2235.0, 46.5], [2283.0, 30.0], [2295.0, 84.0], [2353.0, 76.0], [2385.0, 33.0], [2401.0, 44.0], [2347.0, 18.0], [2358.0, 30.0], [2332.0, 32.0], [2397.0, 27.0], [2436.0, 43.0], [2533.0, 21.0], [2551.0, 19.0], [2468.0, 17.0], [2647.0, 13.0], [2564.0, 54.0], [2683.0, 22.0], [2573.0, 18.0], [2752.0, 19.0], [2775.0, 24.0], [2813.0, 42.0], [2832.0, 39.0], [2901.0, 65.0], [2829.0, 123.0], [3071.0, 28.0], [2956.0, 81.0], [3070.0, 26.0], [3161.0, 26.5], [3164.0, 81.0], [3203.0, 76.0], [3237.0, 51.5], [3282.0, 15.0], [3328.0, 27.0], [3355.0, 18.0], [3337.0, 32.0], [3536.0, 19.0], [3482.0, 10.0], [3485.0, 18.0], [3502.0, 42.0], [3465.0, 48.0], [3508.0, 21.0], [3619.0, 33.0], [3593.0, 46.0], [3792.0, 30.0], [3724.0, 41.0], [3887.0, 59.0], [3909.0, 46.0], [3993.0, 74.5], [4325.0, 22.0], [4348.0, 40.0], [4232.0, 55.0], [4441.0, 71.0], [4554.0, 90.0], [4398.0, 50.0], [4498.0, 134.0], [4768.0, 99.0], [4687.0, 41.0], [4763.0, 139.0], [4847.0, 64.0], [4873.0, 81.0], [5114.0, 25.0], [4975.0, 56.0], [5245.0, 50.0], [5360.0, 43.0], [5120.0, 86.0], [5260.0, 78.0], [5562.0, 41.0], [5444.0, 38.0], [5551.0, 66.0], [5690.0, 51.0], [5652.0, 43.0], [5761.0, 110.0], [5783.0, 36.0], [5859.0, 93.0], [5848.0, 93.0], [6115.0, 71.0], [6068.0, 58.0], [5889.0, 73.0], [6079.0, 73.0], [5981.0, 71.0], [6052.0, 33.0], [6064.0, 75.0], [6095.0, 60.0], [6096.0, 36.0], [6387.0, 65.0], [6260.0, 40.0], [6379.0, 56.0], [6238.0, 81.0], [6301.0, 42.0], [6396.0, 48.0], [6239.0, 42.0], [6327.0, 59.0], [6326.0, 90.0], [6321.0, 86.0], [6188.0, 76.0], [6159.0, 21.0], [6205.0, 89.0], [6229.0, 101.0], [6456.0, 50.0], [6517.0, 66.0], [6498.0, 77.0], [6480.0, 90.0], [6513.0, 60.0], [6510.0, 49.0], [6479.0, 98.0], [6475.0, 95.0], [6543.0, 89.0], [6634.0, 100.0], [6620.0, 95.0], [6644.0, 82.0], [6639.0, 88.0], [6594.0, 51.0], [6603.0, 79.0], [6608.0, 32.0], [6616.0, 73.0], [6574.0, 90.0], [6575.0, 78.0], [6579.0, 70.0], [6580.0, 84.0], [6570.0, 99.0], [6550.0, 51.0], [6400.0, 67.0], [6527.0, 85.0], [6453.0, 96.0], [6662.0, 82.0], [6725.0, 80.0], [6731.0, 77.0], [6820.0, 63.0], [6821.0, 68.0], [6815.0, 73.0], [6858.0, 88.0], [6753.0, 85.0], [6772.0, 78.0], [6801.0, 71.0], [6889.0, 78.0], [6717.0, 106.0], [6701.0, 98.0], [6708.0, 46.0], [7032.0, 91.0], [6938.0, 93.0], [7043.0, 52.0], [7027.0, 62.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1980.0, 520.0], [1983.0, 36.0], [2039.0, 151.0], [2037.0, 424.0], [2083.0, 413.0], [2126.0, 43.0], [2085.0, 284.0], [2258.0, 469.5], [2235.0, 93.0], [2283.0, 493.0], [2295.0, 94.0], [2353.0, 238.0], [2385.0, 164.5], [2401.0, 205.5], [2347.0, 164.5], [2358.0, 108.0], [2332.0, 58.0], [2397.0, 185.5], [2436.0, 291.0], [2533.0, 99.0], [2551.0, 190.0], [2468.0, 351.5], [2647.0, 49.0], [2564.0, 494.5], [2683.0, 301.0], [2573.0, 190.0], [2752.0, 333.0], [2775.0, 142.0], [2813.0, 328.0], [2832.0, 226.5], [2901.0, 348.0], [2829.0, 290.5], [3071.0, 68.0], [2956.0, 334.5], [3070.0, 115.0], [3161.0, 396.0], [3164.0, 399.0], [3203.0, 259.5], [3237.0, 276.0], [3282.0, 278.0], [3328.0, 144.0], [3355.0, 172.5], [3337.0, 583.0], [3536.0, 254.0], [3482.0, 186.0], [3485.0, 434.0], [3502.0, 424.0], [3465.0, 122.0], [3508.0, 218.5], [3619.0, 611.0], [3593.0, 214.0], [3792.0, 245.0], [3724.0, 321.0], [3887.0, 89.5], [3909.0, 113.0], [3993.0, 431.0], [4325.0, 75.0], [4348.0, 521.5], [4232.0, 443.0], [4441.0, 520.0], [4554.0, 282.0], [4398.0, 258.5], [4498.0, 332.0], [4768.0, 317.0], [4687.0, 124.0], [4763.0, 382.0], [4847.0, 115.0], [4873.0, 397.0], [5114.0, 277.0], [4975.0, 359.5], [5245.0, 235.0], [5360.0, 474.0], [5120.0, 252.5], [5260.0, 226.0], [5562.0, 355.0], [5444.0, 35.5], [5551.0, 381.0], [5690.0, 226.0], [5652.0, 144.5], [5761.0, 430.0], [5783.0, 525.5], [5859.0, 121.0], [5848.0, 251.0], [6115.0, 387.5], [6068.0, 280.0], [5889.0, 304.0], [6079.0, 260.5], [5981.0, 326.0], [6052.0, 103.0], [6064.0, 360.0], [6095.0, 432.0], [6096.0, 606.0], [6387.0, 411.0], [6260.0, 481.0], [6379.0, 65.0], [6238.0, 336.5], [6301.0, 532.0], [6396.0, 411.5], [6239.0, 188.0], [6327.0, 624.5], [6326.0, 147.0], [6321.0, 163.0], [6188.0, 501.0], [6205.0, 357.0], [6229.0, 516.0], [6456.0, 586.0], [6517.0, 1519.0], [6498.0, 304.5], [6480.0, 251.0], [6513.0, 294.5], [6479.0, 480.0], [6475.0, 130.0], [6543.0, 106.5], [6634.0, 185.5], [6620.0, 377.0], [6644.0, 490.0], [6639.0, 415.5], [6594.0, 338.0], [6603.0, 481.0], [6608.0, 295.0], [6616.0, 147.5], [6574.0, 130.0], [6575.0, 515.5], [6579.0, 286.5], [6580.0, 322.0], [6570.0, 451.5], [6550.0, 471.0], [6400.0, 463.5], [6527.0, 514.0], [6453.0, 192.0], [6662.0, 270.0], [6725.0, 443.5], [6731.0, 408.0], [6820.0, 448.0], [6821.0, 287.5], [6815.0, 464.0], [6858.0, 440.5], [6753.0, 193.0], [6772.0, 437.0], [6801.0, 228.0], [6889.0, 394.0], [6717.0, 137.0], [6701.0, 269.5], [6708.0, 424.5], [7032.0, 362.0], [6938.0, 377.0], [7043.0, 468.0], [7027.0, 53.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 7043.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 737.4666666666667, "minX": 1.64612934E12, "maxY": 6364.95, "series": [{"data": [[1.64612952E12, 1547.4333333333334], [1.6461294E12, 3850.15], [1.64612946E12, 6364.95], [1.64612934E12, 737.4666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64612952E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 245.1, "minX": 1.64612934E12, "maxY": 4249.366666666667, "series": [{"data": [[1.64612952E12, 1038.7666666666667], [1.6461294E12, 2555.866666666667], [1.64612946E12, 4249.366666666667], [1.64612934E12, 489.3333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.64612952E12, 517.0666666666667], [1.6461294E12, 1280.8833333333334], [1.64612946E12, 2123.616666666667], [1.64612934E12, 245.1]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64612952E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 5.5, "minX": 1.64612934E12, "maxY": 2124.6833333333334, "series": [{"data": [[1.64612952E12, 513.8833333333333], [1.6461294E12, 1212.8833333333334], [1.64612946E12, 2058.95], [1.64612934E12, 237.23333333333332]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.64612952E12, 5.5], [1.6461294E12, 65.05], [1.64612946E12, 65.73333333333333], [1.64612934E12, 7.433333333333334]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.64612952E12, 517.0666666666667], [1.6461294E12, 1280.8833333333334], [1.64612946E12, 2123.616666666667], [1.64612934E12, 245.1]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.64612952E12, 519.3833333333333], [1.6461294E12, 1277.9333333333334], [1.64612946E12, 2124.6833333333334], [1.64612934E12, 244.66666666666666]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64612952E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 5.5, "minX": 1.64612934E12, "maxY": 6307.25, "series": [{"data": [[1.64612952E12, 1550.3333333333333], [1.6461294E12, 3771.7], [1.64612946E12, 6307.25], [1.64612934E12, 727.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.64612952E12, 5.5], [1.6461294E12, 65.05], [1.64612946E12, 65.73333333333333], [1.64612934E12, 7.433333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64612952E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

